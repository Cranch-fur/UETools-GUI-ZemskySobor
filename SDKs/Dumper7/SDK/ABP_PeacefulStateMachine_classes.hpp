#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_PeacefulStateMachine

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimationWarpingRuntime_structs.hpp"
#include "ABP_PeacefulStateMachine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Smuta_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C
// 0x1DE0 (0x2130 - 0x0350)
class UABP_PeacefulStateMachine_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_PeacefulStateMachine::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;     // 0x0358(0x0048)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Tag;                        // 0x03A0(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x03A8(0x0008)()
	struct FAnimSubsystemInstance_NodeRelevancy   AnimBlueprintExtension_NodeRelevancy;              // 0x03B0(0x00A8)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0458(0x0008)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x0460(0x00B8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0518(0x00F0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x0608(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x0650(0x0048)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive;              // 0x0698(0x00D0)()
	struct FAnimNode_MakeDynamicAdditive          AnimGraphNode_MakeDynamicAdditive_1;               // 0x0768(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_12;                    // 0x07A0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x07C8(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x07F0(0x0080)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x0870(0x00C8)()
	struct FAnimNode_MakeDynamicAdditive          AnimGraphNode_MakeDynamicAdditive;                 // 0x0938(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x0970(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x0998(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x09C0(0x0080)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x0A40(0x0080)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x0AC0(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x0B40(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x0B68(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x0B90(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x0BB8(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0BE0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0C28(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0C50(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0C78(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0CF8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0D20(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0D68(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0DB0(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0DF8(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0EE8(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0F10(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0F30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0F58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0F80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0FA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0FD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0FF8(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x1020(0x0020)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_2;                       // 0x1040(0x0120)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x1160(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x1180(0x0020)()
	struct FAnimNode_OrientationWarping           AnimGraphNode_OrientationWarping_1;                // 0x11A0(0x0198)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x1338(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x1378(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1398(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x13E0(0x0070)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x1450(0x00C8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1518(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1538(0x0020)()
	struct FAnimNode_OrientationWarping           AnimGraphNode_OrientationWarping;                  // 0x1558(0x0198)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x16F0(0x0020)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_1;                       // 0x1710(0x0120)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x1830(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1870(0x0020)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0x1890(0x0120)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x19B0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x19F8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1A18(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1A40(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1A88(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1AD0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1AF0(0x00C8)()
	struct FAnimNode_Inertialization              AnimGraphNode_Inertialization;                     // 0x1BB8(0x0110)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1CC8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x1CE8(0x00B8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1DA0(0x0080)()
	bool                                          UseMeshSpace;                                      // 0x1E20(0x0001)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E21[0x7];                                     // 0x1E21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          K2Node_PropertyAccess_27;                          // 0x1E28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_PropertyAccess_26;                          // 0x1E30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_PropertyAccess_25;                          // 0x1E48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_PropertyAccess_14;                          // 0x1E60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 K2Node_PropertyAccess_7;                           // 0x1E78(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_PropertyAccess_5;                           // 0x1E80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_PropertyAccess_4;                           // 0x1E98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_PropertyAccess_3;                           // 0x1EB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_PropertyAccess_2;                           // 0x1EC8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          __CustomProperty_UseMeshSpace_014CCD0C4858DE61E7E12B9ABB071CC8; // 0x1EE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EE1[0x7];                                     // 0x1EE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                InputVector;                                       // 0x1EE8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FVector                                LastInputVector;                                   // 0x1F00(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x1F18(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FVector                                Acceleration;                                      // 0x1F30(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x1F48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         Direction;                                         // 0x1F50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_1F54[0x4];                                     // 0x1F54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               StartRotation;                                     // 0x1F58(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	EStartRotation                                StartMovementDirection;                            // 0x1F70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	EGroundMovementMode                           CurrentGait;                                       // 0x1F71(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          IsAccelerating;                                    // 0x1F72(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_1F73[0x5];                                     // 0x1F73(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WorldLocation;                                     // 0x1F78(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FVector                                PreviousWorldLocation;                             // 0x1F90(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        LocationDelta;                                     // 0x1FA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x1FB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        StartDistance;                                     // 0x1FB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         CurrentMaxWalkSpeed;                               // 0x1FC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	EGroundMovementMode                           IncomingGait;                                      // 0x1FC4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	EGroundMovementMode                           PreviousGait;                                      // 0x1FC5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          GaitChanged;                                       // 0x1FC6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_1FC7[0x1];                                     // 0x1FC7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TargetRotation;                                    // 0x1FC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          inStart;                                           // 0x1FCC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          InRotate;                                          // 0x1FCD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          InTurn;                                            // 0x1FCE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_1FCF[0x1];                                     // 0x1FCF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               WorldRotation;                                     // 0x1FD0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ActorYaw;                                          // 0x1FE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreviousActorYaw;                                  // 0x1FEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ActorYawDelta;                                     // 0x1FF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FF4[0x4];                                     // 0x1FF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LeanAngle;                                         // 0x1FF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          InStop;                                            // 0x2000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2001[0x7];                                     // 0x2001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimInstancePeacefulInfo              AnimInstanceInfo;                                  // 0x2008(0x0100)(Edit, BlueprintVisible, DisableEditOnInstance)
	ENPCBehaviorState                             State;                                             // 0x2108(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2109[0x7];                                     // 0x2109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          BothAdditive;                                      // 0x2110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          LeftAdditive;                                      // 0x2118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          RightAdditive;                                     // 0x2120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          UseMainIdle;                                       // 0x2128(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(const struct FPoseLink& RandomIdlesPose, struct FPoseLink* AnimGraph_0);
	void AnimNotify_LeftTurnState();
	void AnimNotify_StartToStop();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EquipmentAdditiveLayer(const struct FPoseLink& InPose, bool UseMeshSpace_0, struct FPoseLink* EquipmentAdditiveLayer_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_BlendListByBool_015ADAE54355B0E6C7CD5EB036C9B1B5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_BlendListByBool_96CDB4B14A51C4A0FA1BEFBF48842688();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_BlendSpacePlayer_A42CF01F48B32B0A42FE378817BD5627();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_LayeredBoneBlend_6325466F41037BC618D85B810645988D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_TransitionResult_343898B8400F19788C1F649D7AF72D07();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_TransitionResult_956270DD4B4CB9579ED659B2B64E001C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_TransitionResult_97D01F1144162B0B24E0A1A12133B660();
	void ExecuteUbergraph_ABP_PeacefulStateMachine(int32 EntryPoint);
	void FindStartDirection(double StartAngle);
	void GetLocationData();
	class UABP_MasterTemplate_C* GetMasterABP();
	class USmutaNPCMovementComponent* GetMovementComp();
	void GetRotationData(double DeltaTime);
	void GetVelocityData();
	void On_Setup_Additive_Anim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void On_Start_State_Exit(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void On_State_Entry_Stop(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void On_State_Exit_Stop(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void On_State_Start_Entry(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void On_Turn_Exit(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void On_Turn_Start(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void On_Update_Cycle(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void On_Update_Stop(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void RotateOnStart();
	void RotateOnTurnInPlace();
	void Set_Up_Start_Anims(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void Set_Up_Stop_Anims(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SetState(ENPCBehaviorState State_0);
	void Setup_Idle_Anim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void Setup_Turn_Anims(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SetupBasicSettings();
	void Update_Start_State(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateAdditive();
	void UpdateLocomotionState();

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("ABP_PeacefulStateMachine_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ABP_PeacefulStateMachine_C")
	}
	static class UABP_PeacefulStateMachine_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_PeacefulStateMachine_C>();
	}
};
DUMPER7_ASSERTS_UABP_PeacefulStateMachine_C;

}

