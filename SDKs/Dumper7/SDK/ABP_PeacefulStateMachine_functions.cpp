#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_PeacefulStateMachine

#include "Basic.hpp"

#include "ABP_PeacefulStateMachine_classes.hpp"
#include "ABP_PeacefulStateMachine_parameters.hpp"


namespace SDK
{

// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPoseLink&                 RandomIdlesPose                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       AnimGraph_0                                            (Parm, OutParm, NoDestructor)

void UABP_PeacefulStateMachine_C::AnimGraph(const struct FPoseLink& RandomIdlesPose, struct FPoseLink* AnimGraph_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "AnimGraph");

	Params::ABP_PeacefulStateMachine_C_AnimGraph Parms{};

	Parms.RandomIdlesPose = std::move(RandomIdlesPose);

	UObject::ProcessEvent(Func, &Parms);

	if (AnimGraph_0 != nullptr)
		*AnimGraph_0 = std::move(Parms.AnimGraph_0);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.AnimNotify_LeftTurnState
// (BlueprintCallable, BlueprintEvent)

void UABP_PeacefulStateMachine_C::AnimNotify_LeftTurnState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "AnimNotify_LeftTurnState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.AnimNotify_StartToStop
// (BlueprintCallable, BlueprintEvent)

void UABP_PeacefulStateMachine_C::AnimNotify_StartToStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "AnimNotify_StartToStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.BlueprintThreadSafeUpdateAnimation
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_PeacefulStateMachine_C::BlueprintThreadSafeUpdateAnimation(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "BlueprintThreadSafeUpdateAnimation");

	Params::ABP_PeacefulStateMachine_C_BlueprintThreadSafeUpdateAnimation Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.BlueprintUpdateAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTimeX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_PeacefulStateMachine_C::BlueprintUpdateAnimation(float DeltaTimeX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "BlueprintUpdateAnimation");

	Params::ABP_PeacefulStateMachine_C_BlueprintUpdateAnimation Parms{};

	Parms.DeltaTimeX = DeltaTimeX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.EquipmentAdditiveLayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPoseLink&                 InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// bool                                    UseMeshSpace_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPoseLink*                       EquipmentAdditiveLayer_0                               (Parm, OutParm, NoDestructor)

void UABP_PeacefulStateMachine_C::EquipmentAdditiveLayer(const struct FPoseLink& InPose, bool UseMeshSpace_0, struct FPoseLink* EquipmentAdditiveLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "EquipmentAdditiveLayer");

	Params::ABP_PeacefulStateMachine_C_EquipmentAdditiveLayer Parms{};

	Parms.InPose = std::move(InPose);
	Parms.UseMeshSpace_0 = UseMeshSpace_0;

	UObject::ProcessEvent(Func, &Parms);

	if (EquipmentAdditiveLayer_0 != nullptr)
		*EquipmentAdditiveLayer_0 = std::move(Parms.EquipmentAdditiveLayer_0);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_BlendListByBool_015ADAE54355B0E6C7CD5EB036C9B1B5
// (BlueprintEvent)

void UABP_PeacefulStateMachine_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_BlendListByBool_015ADAE54355B0E6C7CD5EB036C9B1B5()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_BlendListByBool_015ADAE54355B0E6C7CD5EB036C9B1B5");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_BlendListByBool_96CDB4B14A51C4A0FA1BEFBF48842688
// (BlueprintEvent)

void UABP_PeacefulStateMachine_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_BlendListByBool_96CDB4B14A51C4A0FA1BEFBF48842688()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_BlendListByBool_96CDB4B14A51C4A0FA1BEFBF48842688");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_BlendSpacePlayer_A42CF01F48B32B0A42FE378817BD5627
// (BlueprintEvent)

void UABP_PeacefulStateMachine_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_BlendSpacePlayer_A42CF01F48B32B0A42FE378817BD5627()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_BlendSpacePlayer_A42CF01F48B32B0A42FE378817BD5627");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_LayeredBoneBlend_6325466F41037BC618D85B810645988D
// (BlueprintEvent)

void UABP_PeacefulStateMachine_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_LayeredBoneBlend_6325466F41037BC618D85B810645988D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_LayeredBoneBlend_6325466F41037BC618D85B810645988D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_TransitionResult_343898B8400F19788C1F649D7AF72D07
// (BlueprintEvent)

void UABP_PeacefulStateMachine_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_TransitionResult_343898B8400F19788C1F649D7AF72D07()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_TransitionResult_343898B8400F19788C1F649D7AF72D07");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_TransitionResult_956270DD4B4CB9579ED659B2B64E001C
// (BlueprintEvent)

void UABP_PeacefulStateMachine_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_TransitionResult_956270DD4B4CB9579ED659B2B64E001C()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_TransitionResult_956270DD4B4CB9579ED659B2B64E001C");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_TransitionResult_97D01F1144162B0B24E0A1A12133B660
// (BlueprintEvent)

void UABP_PeacefulStateMachine_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_TransitionResult_97D01F1144162B0B24E0A1A12133B660()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PeacefulStateMachine_AnimGraphNode_TransitionResult_97D01F1144162B0B24E0A1A12133B660");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.ExecuteUbergraph_ABP_PeacefulStateMachine
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_PeacefulStateMachine_C::ExecuteUbergraph_ABP_PeacefulStateMachine(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "ExecuteUbergraph_ABP_PeacefulStateMachine");

	Params::ABP_PeacefulStateMachine_C_ExecuteUbergraph_ABP_PeacefulStateMachine Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.FindStartDirection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  StartAngle                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_PeacefulStateMachine_C::FindStartDirection(double StartAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "FindStartDirection");

	Params::ABP_PeacefulStateMachine_C_FindStartDirection Parms{};

	Parms.StartAngle = StartAngle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.GetLocationData
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_PeacefulStateMachine_C::GetLocationData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "GetLocationData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.GetMasterABP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UABP_MasterTemplate_C*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UABP_MasterTemplate_C* UABP_PeacefulStateMachine_C::GetMasterABP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "GetMasterABP");

	Params::ABP_PeacefulStateMachine_C_GetMasterABP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.GetMovementComp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USmutaNPCMovementComponent*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class USmutaNPCMovementComponent* UABP_PeacefulStateMachine_C::GetMovementComp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "GetMovementComp");

	Params::ABP_PeacefulStateMachine_C_GetMovementComp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.GetRotationData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_PeacefulStateMachine_C::GetRotationData(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "GetRotationData");

	Params::ABP_PeacefulStateMachine_C_GetRotationData Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.GetVelocityData
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_PeacefulStateMachine_C::GetVelocityData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "GetVelocityData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.On Setup Additive Anim
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_PeacefulStateMachine_C::On_Setup_Additive_Anim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "On Setup Additive Anim");

	Params::ABP_PeacefulStateMachine_C_On_Setup_Additive_Anim Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.On Start State Exit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_PeacefulStateMachine_C::On_Start_State_Exit(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "On Start State Exit");

	Params::ABP_PeacefulStateMachine_C_On_Start_State_Exit Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.On State Entry Stop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_PeacefulStateMachine_C::On_State_Entry_Stop(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "On State Entry Stop");

	Params::ABP_PeacefulStateMachine_C_On_State_Entry_Stop Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.On State Exit Stop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_PeacefulStateMachine_C::On_State_Exit_Stop(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "On State Exit Stop");

	Params::ABP_PeacefulStateMachine_C_On_State_Exit_Stop Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.On State Start Entry
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_PeacefulStateMachine_C::On_State_Start_Entry(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "On State Start Entry");

	Params::ABP_PeacefulStateMachine_C_On_State_Start_Entry Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.On Turn Exit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_PeacefulStateMachine_C::On_Turn_Exit(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "On Turn Exit");

	Params::ABP_PeacefulStateMachine_C_On_Turn_Exit Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.On Turn Start
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_PeacefulStateMachine_C::On_Turn_Start(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "On Turn Start");

	Params::ABP_PeacefulStateMachine_C_On_Turn_Start Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.On Update Cycle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_PeacefulStateMachine_C::On_Update_Cycle(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "On Update Cycle");

	Params::ABP_PeacefulStateMachine_C_On_Update_Cycle Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.On Update Stop
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_PeacefulStateMachine_C::On_Update_Stop(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "On Update Stop");

	Params::ABP_PeacefulStateMachine_C_On_Update_Stop Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.RotateOnStart
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_PeacefulStateMachine_C::RotateOnStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "RotateOnStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.RotateOnTurnInPlace
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_PeacefulStateMachine_C::RotateOnTurnInPlace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "RotateOnTurnInPlace");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.Set Up Start Anims
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_PeacefulStateMachine_C::Set_Up_Start_Anims(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "Set Up Start Anims");

	Params::ABP_PeacefulStateMachine_C_Set_Up_Start_Anims Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.Set Up Stop Anims
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_PeacefulStateMachine_C::Set_Up_Stop_Anims(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "Set Up Stop Anims");

	Params::ABP_PeacefulStateMachine_C_Set_Up_Stop_Anims Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.SetState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENPCBehaviorState                       State_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_PeacefulStateMachine_C::SetState(ENPCBehaviorState State_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "SetState");

	Params::ABP_PeacefulStateMachine_C_SetState Parms{};

	Parms.State_0 = State_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.Setup Idle Anim
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_PeacefulStateMachine_C::Setup_Idle_Anim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "Setup Idle Anim");

	Params::ABP_PeacefulStateMachine_C_Setup_Idle_Anim Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.Setup Turn Anims
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_PeacefulStateMachine_C::Setup_Turn_Anims(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "Setup Turn Anims");

	Params::ABP_PeacefulStateMachine_C_Setup_Turn_Anims Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.SetupBasicSettings
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_PeacefulStateMachine_C::SetupBasicSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "SetupBasicSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.Update Start State
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_PeacefulStateMachine_C::Update_Start_State(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "Update Start State");

	Params::ABP_PeacefulStateMachine_C_Update_Start_State Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.UpdateAdditive
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_PeacefulStateMachine_C::UpdateAdditive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "UpdateAdditive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_PeacefulStateMachine.ABP_PeacefulStateMachine_C.UpdateLocomotionState
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_PeacefulStateMachine_C::UpdateLocomotionState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_PeacefulStateMachine_C", "UpdateLocomotionState");

	UObject::ProcessEvent(Func, nullptr);
}

}

