#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_SkillTree

#include "Basic.hpp"

#include "AC_SkillTree_classes.hpp"
#include "AC_SkillTree_parameters.hpp"


namespace SDK
{

// Function AC_SkillTree.AC_SkillTree_C.AddItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UDA_SkillTree_Unit_Base_C*& NewItem                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UAC_SkillTree_C::AddItem(const class UDA_SkillTree_Unit_Base_C*& NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "AddItem");

	Params::AC_SkillTree_C_AddItem Parms{};

	Parms.NewItem = NewItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_SkillTree.AC_SkillTree_C.AddPoints
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_SkillTree_C::AddPoints(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "AddPoints");

	Params::AC_SkillTree_C_AddPoints Parms{};

	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_SkillTree.AC_SkillTree_C.AddSpentPoints
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AddPoints                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_SkillTree_C::AddSpentPoints(int32 AddPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "AddSpentPoints");

	Params::AC_SkillTree_C_AddSpentPoints Parms{};

	Parms.AddPoints = AddPoints;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_SkillTree.AC_SkillTree_C.Changed Appearance
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAppearanceItem*                  NewAppearance                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UAC_SkillTree_C::Changed_Appearance(class UAppearanceItem* NewAppearance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "Changed Appearance");

	Params::AC_SkillTree_C_Changed_Appearance Parms{};

	Parms.NewAppearance = NewAppearance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_SkillTree.AC_SkillTree_C.CheckTrainingCamp
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAC_SkillTree_C::CheckTrainingCamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "CheckTrainingCamp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_SkillTree.AC_SkillTree_C.ClearCurrentInventorySlot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAC_SkillTree_C::ClearCurrentInventorySlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "ClearCurrentInventorySlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_SkillTree.AC_SkillTree_C.ComponentLoaded
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UAC_SkillTree_C::ComponentLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "ComponentLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_SkillTree.AC_SkillTree_C.ComponentPreSave
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UAC_SkillTree_C::ComponentPreSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "ComponentPreSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_SkillTree.AC_SkillTree_C.DebugPrintEffect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAC_SkillTree_C::DebugPrintEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "DebugPrintEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_SkillTree.AC_SkillTree_C.E_OnSpellPointsChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   StatValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_SkillTree_C::E_OnSpellPointsChanged(int32 StatValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "E_OnSpellPointsChanged");

	Params::AC_SkillTree_C_E_OnSpellPointsChanged Parms{};

	Parms.StatValue = StatValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_SkillTree.AC_SkillTree_C.ExecuteUbergraph_AC_SkillTree
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_SkillTree_C::ExecuteUbergraph_AC_SkillTree(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "ExecuteUbergraph_AC_SkillTree");

	Params::AC_SkillTree_C_ExecuteUbergraph_AC_SkillTree Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_SkillTree.AC_SkillTree_C.get Inventory Slot
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    l_Slot_ID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FSTR_SkillTree_InventoryItem*    Output                                                 (Parm, OutParm, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_SkillTree_C::get_Inventory_Slot(const class FString& l_Slot_ID, struct FSTR_SkillTree_InventoryItem* Output, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "get Inventory Slot");

	Params::AC_SkillTree_C_get_Inventory_Slot Parms{};

	Parms.l_Slot_ID = std::move(l_Slot_ID);

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = std::move(Parms.Output);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function AC_SkillTree.AC_SkillTree_C.GetBusySlot
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSTR_SkillTree_InventoryItem*    Array_Element                                          (Parm, OutParm, HasGetValueTypeHash)

void UAC_SkillTree_C::GetBusySlot(int32 ItemId, struct FSTR_SkillTree_InventoryItem* Array_Element)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "GetBusySlot");

	Params::AC_SkillTree_C_GetBusySlot Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);

	if (Array_Element != nullptr)
		*Array_Element = std::move(Parms.Array_Element);
}


// Function AC_SkillTree.AC_SkillTree_C.getInventorySlots
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FSTR_SkillTree_InventoryItem>*InventorySlots_0                                       (Parm, OutParm)

void UAC_SkillTree_C::getInventorySlots(TArray<struct FSTR_SkillTree_InventoryItem>* InventorySlots_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "getInventorySlots");

	Params::AC_SkillTree_C_getInventorySlots Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InventorySlots_0 != nullptr)
		*InventorySlots_0 = std::move(Parms.InventorySlots_0);
}


// Function AC_SkillTree.AC_SkillTree_C.getItems
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UDA_SkillTree_Unit_Base_C*>*Items_0                                                (Parm, OutParm)

void UAC_SkillTree_C::getItems(TArray<class UDA_SkillTree_Unit_Base_C*>* Items_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "getItems");

	Params::AC_SkillTree_C_getItems Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Items_0 != nullptr)
		*Items_0 = std::move(Parms.Items_0);
}


// Function AC_SkillTree.AC_SkillTree_C.getMessageText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText*                            messageText_0                                          (Parm, OutParm)

void UAC_SkillTree_C::getMessageText(class FText* messageText_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "getMessageText");

	Params::AC_SkillTree_C_getMessageText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (messageText_0 != nullptr)
		*messageText_0 = std::move(Parms.messageText_0);
}


// Function AC_SkillTree.AC_SkillTree_C.getSkillTree
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UUI_Menu_SkillTree_C**            SkillTree_0                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UAC_SkillTree_C::getSkillTree(class UUI_Menu_SkillTree_C** SkillTree_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "getSkillTree");

	Params::AC_SkillTree_C_getSkillTree Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SkillTree_0 != nullptr)
		*SkillTree_0 = Parms.SkillTree_0;
}


// Function AC_SkillTree.AC_SkillTree_C.getXP_Point
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  Point                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_SkillTree_C::getXP_Point(int32* Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "getXP_Point");

	Params::AC_SkillTree_C_getXP_Point Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Point != nullptr)
		*Point = Parms.Point;
}


// Function AC_SkillTree.AC_SkillTree_C.getYuriAppearance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_SkillTree_YuriAppearance*             CurrentYuriAppearance                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_SkillTree_YuriAppearance*             OldAppearance_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_SkillTree_C::getYuriAppearance(E_SkillTree_YuriAppearance* CurrentYuriAppearance, E_SkillTree_YuriAppearance* OldAppearance_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "getYuriAppearance");

	Params::AC_SkillTree_C_getYuriAppearance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentYuriAppearance != nullptr)
		*CurrentYuriAppearance = Parms.CurrentYuriAppearance;

	if (OldAppearance_0 != nullptr)
		*OldAppearance_0 = Parms.OldAppearance_0;
}


// Function AC_SkillTree.AC_SkillTree_C.HandleItemEffect
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDA_SkillTree_Unit_Base_C*        l_item                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    l_apply                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_SkillTree_Category                    SlotCategory                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_SkillTree_C::HandleItemEffect(class UDA_SkillTree_Unit_Base_C* l_item, bool l_apply, E_SkillTree_Category SlotCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "HandleItemEffect");

	Params::AC_SkillTree_C_HandleItemEffect Parms{};

	Parms.l_item = l_item;
	Parms.l_apply = l_apply;
	Parms.SlotCategory = SlotCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_SkillTree.AC_SkillTree_C.InitItemEffects
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAC_SkillTree_C::InitItemEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "InitItemEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_SkillTree.AC_SkillTree_C.Install Item
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDA_SkillTree_Unit_Base_C*        l_item                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_SkillTree_C::Install_Item(class UDA_SkillTree_Unit_Base_C* l_item, int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "Install Item");

	Params::AC_SkillTree_C_Install_Item Parms{};

	Parms.l_item = l_item;
	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_SkillTree.AC_SkillTree_C.Is Item In Inventory
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_SkillTree_C::Is_Item_In_Inventory(int32 ItemId, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "Is Item In Inventory");

	Params::AC_SkillTree_C_Is_Item_In_Inventory Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function AC_SkillTree.AC_SkillTree_C.Is Stone
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_SkillTree_C::Is_Stone(class UClass* Class_0, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "Is Stone");

	Params::AC_SkillTree_C_Is_Stone Parms{};

	Parms.Class_0 = Class_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function AC_SkillTree.AC_SkillTree_C.IsContainEffect
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UClass*                     EffectClass                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UAC_SkillTree_C::IsContainEffect(const class UClass* EffectClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "IsContainEffect");

	Params::AC_SkillTree_C_IsContainEffect Parms{};

	Parms.EffectClass = EffectClass;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AC_SkillTree.AC_SkillTree_C.IsItemSkillEnable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_SkillTree_Category                    l_Category                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UAC_SkillTree_C::IsItemSkillEnable(E_SkillTree_Category l_Category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "IsItemSkillEnable");

	Params::AC_SkillTree_C_IsItemSkillEnable Parms{};

	Parms.l_Category = l_Category;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AC_SkillTree.AC_SkillTree_C.IsRightTree
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_SkillTree_Category                    Category                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UAC_SkillTree_C::IsRightTree(E_SkillTree_Category Category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "IsRightTree");

	Params::AC_SkillTree_C_IsRightTree Parms{};

	Parms.Category = Category;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AC_SkillTree.AC_SkillTree_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UAC_SkillTree_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_SkillTree.AC_SkillTree_C.ReinstallForYuriCategory
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAC_SkillTree_C::ReinstallForYuriCategory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "ReinstallForYuriCategory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_SkillTree.AC_SkillTree_C.Set Inventory Slot
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FSTR_SkillTree_InventoryItem&l_Slot                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UAC_SkillTree_C::Set_Inventory_Slot(const struct FSTR_SkillTree_InventoryItem& l_Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "Set Inventory Slot");

	Params::AC_SkillTree_C_Set_Inventory_Slot Parms{};

	Parms.l_Slot = std::move(l_Slot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_SkillTree.AC_SkillTree_C.setMessageText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      messageText_0                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void UAC_SkillTree_C::setMessageText(const class FText& messageText_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "setMessageText");

	Params::AC_SkillTree_C_setMessageText Parms{};

	Parms.messageText_0 = std::move(messageText_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_SkillTree.AC_SkillTree_C.setSkillTree
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUI_Menu_SkillTree_C*             SkillTree_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UAC_SkillTree_C::setSkillTree(class UUI_Menu_SkillTree_C* SkillTree_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "setSkillTree");

	Params::AC_SkillTree_C_setSkillTree Parms{};

	Parms.SkillTree_0 = SkillTree_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_SkillTree.AC_SkillTree_C.SetSlotParametrFromQuest
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TMap<class FString, bool>&        SlotsIDStatusMap_0                                     (BlueprintVisible, BlueprintReadOnly, Parm)

void UAC_SkillTree_C::SetSlotParametrFromQuest(const TMap<class FString, bool>& SlotsIDStatusMap_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "SetSlotParametrFromQuest");

	Params::AC_SkillTree_C_SetSlotParametrFromQuest Parms{};

	Parms.SlotsIDStatusMap_0 = std::move(SlotsIDStatusMap_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_SkillTree.AC_SkillTree_C.setXP_Point
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_SkillTree_C::setXP_Point(int32 Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "setXP_Point");

	Params::AC_SkillTree_C_setXP_Point Parms{};

	Parms.Point = Point;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_SkillTree.AC_SkillTree_C.ShowMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      messageText_0                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void UAC_SkillTree_C::ShowMessage(const class FText& messageText_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "ShowMessage");

	Params::AC_SkillTree_C_ShowMessage Parms{};

	Parms.messageText_0 = std::move(messageText_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_SkillTree.AC_SkillTree_C.thereItemToInstall
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_SkillTree_C::thereItemToInstall(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "thereItemToInstall");

	Params::AC_SkillTree_C_thereItemToInstall Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function AC_SkillTree.AC_SkillTree_C.UnInstall Item
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDA_SkillTree_Unit_Base_C*        l_item                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    CheckCurrentSlot                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_SkillTree_Category                    SkillCategory                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_SkillTree_C::UnInstall_Item(class UDA_SkillTree_Unit_Base_C* l_item, bool CheckCurrentSlot, E_SkillTree_Category SkillCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "UnInstall Item");

	Params::AC_SkillTree_C_UnInstall_Item Parms{};

	Parms.l_item = l_item;
	Parms.CheckCurrentSlot = CheckCurrentSlot;
	Parms.SkillCategory = SkillCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_SkillTree.AC_SkillTree_C.Uninstall Items
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAC_SkillTree_C::Uninstall_Items()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_SkillTree_C", "Uninstall Items");

	UObject::ProcessEvent(Func, nullptr);
}

}

