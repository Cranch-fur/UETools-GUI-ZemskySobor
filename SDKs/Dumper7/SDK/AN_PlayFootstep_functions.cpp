#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AN_PlayFootstep

#include "Basic.hpp"

#include "AN_PlayFootstep_classes.hpp"
#include "AN_PlayFootstep_parameters.hpp"


namespace SDK
{

// Function AN_PlayFootstep.AN_PlayFootstep_C.DrawFootstepDebug
// (Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   FootstepLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAN_PlayFootstep_C::DrawFootstepDebug(float Radius, const struct FVector& FootstepLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AN_PlayFootstep_C", "DrawFootstepDebug");

	Params::AN_PlayFootstep_C_DrawFootstepDebug Parms{};

	Parms.Radius = Radius;
	Parms.FootstepLocation = std::move(FootstepLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AN_PlayFootstep.AN_PlayFootstep_C.GetColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   CurrentIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FLinearColor UAN_PlayFootstep_C::GetColor(int32 CurrentIndex, int32 MaxIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AN_PlayFootstep_C", "GetColor");

	Params::AN_PlayFootstep_C_GetColor Parms{};

	Parms.CurrentIndex = CurrentIndex;
	Parms.MaxIndex = MaxIndex;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AN_PlayFootstep.AN_PlayFootstep_C.GetFeetLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class USceneComponent*&                 Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UAN_PlayFootstep_C::GetFeetLocation(class USceneComponent*& Mesh) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AN_PlayFootstep_C", "GetFeetLocation");

	Params::AN_PlayFootstep_C_GetFeetLocation Parms{};

	Parms.Mesh = Mesh;

	UObject::ProcessEvent(Func, &Parms);

	Mesh = Parms.Mesh;

	return Parms.ReturnValue;
}


// Function AN_PlayFootstep.AN_PlayFootstep_C.GetFootstepNoiseParams
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class APlayer_CH_C*&                    Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        Surface                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 NoiseRadius                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 MaxRadius                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName*                            Tag                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAN_PlayFootstep_C::GetFootstepNoiseParams(class APlayer_CH_C*& Actor, EPhysicalSurface Surface, bool* Result, double* NoiseRadius, double* MaxRadius, class FName* Tag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AN_PlayFootstep_C", "GetFootstepNoiseParams");

	Params::AN_PlayFootstep_C_GetFootstepNoiseParams Parms{};

	Parms.Actor = Actor;
	Parms.Surface = Surface;

	UObject::ProcessEvent(Func, &Parms);

	Actor = Parms.Actor;

	if (Result != nullptr)
		*Result = Parms.Result;

	if (NoiseRadius != nullptr)
		*NoiseRadius = Parms.NoiseRadius;

	if (MaxRadius != nullptr)
		*MaxRadius = Parms.MaxRadius;

	if (Tag != nullptr)
		*Tag = Parms.Tag;
}


// Function AN_PlayFootstep.AN_PlayFootstep_C.GetNoiseRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class APlayer_CH_C*&                    Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UAN_PlayFootstep_C::GetNoiseRadius(class APlayer_CH_C*& Actor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AN_PlayFootstep_C", "GetNoiseRadius");

	Params::AN_PlayFootstep_C_GetNoiseRadius Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	Actor = Parms.Actor;

	return Parms.ReturnValue;
}


// Function AN_PlayFootstep.AN_PlayFootstep_C.GetStandingMaterial
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class USkeletalMeshComponent*           OwnerSkelet                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface*                       PhysMat                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAN_PlayFootstep_C::GetStandingMaterial(class USkeletalMeshComponent* OwnerSkelet, EPhysicalSurface* PhysMat) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AN_PlayFootstep_C", "GetStandingMaterial");

	Params::AN_PlayFootstep_C_GetStandingMaterial Parms{};

	Parms.OwnerSkelet = OwnerSkelet;

	UObject::ProcessEvent(Func, &Parms);

	if (PhysMat != nullptr)
		*PhysMat = Parms.PhysMat;
}


// Function AN_PlayFootstep.AN_PlayFootstep_C.IsIndoor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*           OwnerSkelet                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UAN_PlayFootstep_C::IsIndoor(class USkeletalMeshComponent* OwnerSkelet) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AN_PlayFootstep_C", "IsIndoor");

	Params::AN_PlayFootstep_C_IsIndoor Parms{};

	Parms.OwnerSkelet = OwnerSkelet;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AN_PlayFootstep.AN_PlayFootstep_C.IsPlayerCharacter
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*           OwnerSkelet                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsPlayerControlled                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAN_PlayFootstep_C::IsPlayerCharacter(class USkeletalMeshComponent* OwnerSkelet, bool* IsPlayerControlled) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AN_PlayFootstep_C", "IsPlayerCharacter");

	Params::AN_PlayFootstep_C_IsPlayerCharacter Parms{};

	Parms.OwnerSkelet = OwnerSkelet;

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlayerControlled != nullptr)
		*IsPlayerControlled = Parms.IsPlayerControlled;
}


// Function AN_PlayFootstep.AN_PlayFootstep_C.IsPlayerHorse
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*           OwnerSkelet                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsPlayerHorse_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAN_PlayFootstep_C::IsPlayerHorse(class USkeletalMeshComponent* OwnerSkelet, bool* IsPlayerHorse_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AN_PlayFootstep_C", "IsPlayerHorse");

	Params::AN_PlayFootstep_C_IsPlayerHorse Parms{};

	Parms.OwnerSkelet = OwnerSkelet;

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlayerHorse_0 != nullptr)
		*IsPlayerHorse_0 = Parms.IsPlayerHorse_0;
}


// Function AN_PlayFootstep.AN_PlayFootstep_C.IsWinter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UAN_PlayFootstep_C::IsWinter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AN_PlayFootstep_C", "IsWinter");

	Params::AN_PlayFootstep_C_IsWinter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AN_PlayFootstep.AN_PlayFootstep_C.Received_Notify
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class USkeletalMeshComponent*           MeshComp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAnimSequenceBase*                Animation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FAnimNotifyEventReference& EventReference                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UAN_PlayFootstep_C::Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, const struct FAnimNotifyEventReference& EventReference) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AN_PlayFootstep_C", "Received_Notify");

	Params::AN_PlayFootstep_C_Received_Notify Parms{};

	Parms.MeshComp = MeshComp;
	Parms.Animation = Animation;
	Parms.EventReference = std::move(EventReference);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AN_PlayFootstep.AN_PlayFootstep_C.SelectNiagaraForSurface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EPhysicalSurface                        Surface                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNiagaraSystem*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UNiagaraSystem* UAN_PlayFootstep_C::SelectNiagaraForSurface(EPhysicalSurface Surface) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AN_PlayFootstep_C", "SelectNiagaraForSurface");

	Params::AN_PlayFootstep_C_SelectNiagaraForSurface Parms{};

	Parms.Surface = Surface;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

