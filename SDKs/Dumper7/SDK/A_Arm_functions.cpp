#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: A_Arm

#include "Basic.hpp"

#include "A_Arm_classes.hpp"
#include "A_Arm_parameters.hpp"


namespace SDK
{

// Function A_Arm.A_Arm_C.BndEvt__A_Arm_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AA_Arm_C::BndEvt__A_Arm_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_Arm_C", "BndEvt__A_Arm_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::A_Arm_C_BndEvt__A_Arm_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function A_Arm.A_Arm_C.CalcRandRange
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Tolerance_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AA_Arm_C::CalcRandRange(double Tolerance_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_Arm_C", "CalcRandRange");

	Params::A_Arm_C_CalcRandRange Parms{};

	Parms.Tolerance_0 = Tolerance_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function A_Arm.A_Arm_C.CalcRoundTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Tolerance_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AA_Arm_C::CalcRoundTime(double Tolerance_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_Arm_C", "CalcRoundTime");

	Params::A_Arm_C_CalcRoundTime Parms{};

	Parms.Tolerance_0 = Tolerance_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function A_Arm.A_Arm_C.Camera
// (BlueprintCallable, BlueprintEvent)

void AA_Arm_C::Camera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_Arm_C", "Camera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function A_Arm.A_Arm_C.ChangeRoundCount
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Round                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AA_Arm_C::ChangeRoundCount(int32 Round)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_Arm_C", "ChangeRoundCount");

	Params::A_Arm_C_ChangeRoundCount Parms{};

	Parms.Round = Round;

	UObject::ProcessEvent(Func, &Parms);
}


// Function A_Arm.A_Arm_C.DefaultValue
// (Public, BlueprintCallable, BlueprintEvent)

void AA_Arm_C::DefaultValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_Arm_C", "DefaultValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function A_Arm.A_Arm_C.ExecuteUbergraph_A_Arm
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AA_Arm_C::ExecuteUbergraph_A_Arm(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_Arm_C", "ExecuteUbergraph_A_Arm");

	Params::A_Arm_C_ExecuteUbergraph_A_Arm Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function A_Arm.A_Arm_C.GetSuccessRange
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentRoundCount_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AA_Arm_C::GetSuccessRange(int32 CurrentRoundCount_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_Arm_C", "GetSuccessRange");

	Params::A_Arm_C_GetSuccessRange Parms{};

	Parms.CurrentRoundCount_0 = CurrentRoundCount_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function A_Arm.A_Arm_C.PercentTimer
// (BlueprintCallable, BlueprintEvent)

void AA_Arm_C::PercentTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_Arm_C", "PercentTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function A_Arm.A_Arm_C.PlayGame
// (BlueprintCallable, BlueprintEvent)

void AA_Arm_C::PlayGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_Arm_C", "PlayGame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function A_Arm.A_Arm_C.RoundTimer
// (BlueprintCallable, BlueprintEvent)

void AA_Arm_C::RoundTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_Arm_C", "RoundTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function A_Arm.A_Arm_C.StartGame
// (BlueprintCallable, BlueprintEvent)

void AA_Arm_C::StartGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_Arm_C", "StartGame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function A_Arm.A_Arm_C.StartGameTimer
// (BlueprintCallable, BlueprintEvent)

void AA_Arm_C::StartGameTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_Arm_C", "StartGameTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function A_Arm.A_Arm_C.StopGame
// (BlueprintCallable, BlueprintEvent)

void AA_Arm_C::StopGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_Arm_C", "StopGame");

	UObject::ProcessEvent(Func, nullptr);
}

}

