#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: A_RangeWeaponProjectile_Knife

#include "Basic.hpp"

#include "A_RangeWeaponProjectile_Knife_classes.hpp"
#include "A_RangeWeaponProjectile_Knife_parameters.hpp"


namespace SDK
{

// Function A_RangeWeaponProjectile_Knife.A_RangeWeaponProjectile_Knife_C.BndEvt__A_RangeWeaponProjectile_Knife_Interaction_K2Node_ComponentBoundEvent_0_OnInteract__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           InteractedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AA_RangeWeaponProjectile_Knife_C::BndEvt__A_RangeWeaponProjectile_Knife_Interaction_K2Node_ComponentBoundEvent_0_OnInteract__DelegateSignature(class AActor* InteractedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_RangeWeaponProjectile_Knife_C", "BndEvt__A_RangeWeaponProjectile_Knife_Interaction_K2Node_ComponentBoundEvent_0_OnInteract__DelegateSignature");

	Params::A_RangeWeaponProjectile_Knife_C_BndEvt__A_RangeWeaponProjectile_Knife_Interaction_K2Node_ComponentBoundEvent_0_OnInteract__DelegateSignature Parms{};

	Parms.InteractedActor = InteractedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function A_RangeWeaponProjectile_Knife.A_RangeWeaponProjectile_Knife_C.CalculateZVelocity
// (Public, BlueprintCallable, BlueprintEvent)

void AA_RangeWeaponProjectile_Knife_C::CalculateZVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_RangeWeaponProjectile_Knife_C", "CalculateZVelocity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function A_RangeWeaponProjectile_Knife.A_RangeWeaponProjectile_Knife_C.ChangeToPickUpItem
// (Public, BlueprintCallable, BlueprintEvent)

void AA_RangeWeaponProjectile_Knife_C::ChangeToPickUpItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_RangeWeaponProjectile_Knife_C", "ChangeToPickUpItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function A_RangeWeaponProjectile_Knife.A_RangeWeaponProjectile_Knife_C.CheckArmorHit
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AA_RangeWeaponProjectile_Knife_C::CheckArmorHit(const struct FHitResult& Hit, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_RangeWeaponProjectile_Knife_C", "CheckArmorHit");

	Params::A_RangeWeaponProjectile_Knife_C_CheckArmorHit Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function A_RangeWeaponProjectile_Knife.A_RangeWeaponProjectile_Knife_C.ExecuteUbergraph_A_RangeWeaponProjectile_Knife
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AA_RangeWeaponProjectile_Knife_C::ExecuteUbergraph_A_RangeWeaponProjectile_Knife(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_RangeWeaponProjectile_Knife_C", "ExecuteUbergraph_A_RangeWeaponProjectile_Knife");

	Params::A_RangeWeaponProjectile_Knife_C_ExecuteUbergraph_A_RangeWeaponProjectile_Knife Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function A_RangeWeaponProjectile_Knife.A_RangeWeaponProjectile_Knife_C.GetAngle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// double*                                 Angle                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AA_RangeWeaponProjectile_Knife_C::GetAngle(const struct FHitResult& Hit, double* Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_RangeWeaponProjectile_Knife_C", "GetAngle");

	Params::A_RangeWeaponProjectile_Knife_C_GetAngle Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);

	if (Angle != nullptr)
		*Angle = Parms.Angle;
}


// Function A_RangeWeaponProjectile_Knife.A_RangeWeaponProjectile_Knife_C.ManageBloodSplash
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AA_RangeWeaponProjectile_Knife_C::ManageBloodSplash(class AActor* HitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_RangeWeaponProjectile_Knife_C", "ManageBloodSplash");

	Params::A_RangeWeaponProjectile_Knife_C_ManageBloodSplash Parms{};

	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function A_RangeWeaponProjectile_Knife.A_RangeWeaponProjectile_Knife_C.ManageProjectilePhysics
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AA_RangeWeaponProjectile_Knife_C::ManageProjectilePhysics(class AActor* HitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_RangeWeaponProjectile_Knife_C", "ManageProjectilePhysics");

	Params::A_RangeWeaponProjectile_Knife_C_ManageProjectilePhysics Parms{};

	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function A_RangeWeaponProjectile_Knife.A_RangeWeaponProjectile_Knife_C.OnActorOverlap
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SelfActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AA_RangeWeaponProjectile_Knife_C::OnActorOverlap(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_RangeWeaponProjectile_Knife_C", "OnActorOverlap");

	Params::A_RangeWeaponProjectile_Knife_C_OnActorOverlap Parms{};

	Parms.SelfActor = SelfActor;
	Parms.OtherActor = OtherActor;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function A_RangeWeaponProjectile_Knife.A_RangeWeaponProjectile_Knife_C.OnProjectileHit
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AA_RangeWeaponProjectile_Knife_C::OnProjectileHit(class AActor* Actor, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_RangeWeaponProjectile_Knife_C", "OnProjectileHit");

	Params::A_RangeWeaponProjectile_Knife_C_OnProjectileHit Parms{};

	Parms.Actor = Actor;
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function A_RangeWeaponProjectile_Knife.A_RangeWeaponProjectile_Knife_C.PlaySoundThrowble
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AA_RangeWeaponProjectile_Knife_C::PlaySoundThrowble(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_RangeWeaponProjectile_Knife_C", "PlaySoundThrowble");

	Params::A_RangeWeaponProjectile_Knife_C_PlaySoundThrowble Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function A_RangeWeaponProjectile_Knife.A_RangeWeaponProjectile_Knife_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AA_RangeWeaponProjectile_Knife_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_RangeWeaponProjectile_Knife_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function A_RangeWeaponProjectile_Knife.A_RangeWeaponProjectile_Knife_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AA_RangeWeaponProjectile_Knife_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_RangeWeaponProjectile_Knife_C", "ReceiveTick");

	Params::A_RangeWeaponProjectile_Knife_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function A_RangeWeaponProjectile_Knife.A_RangeWeaponProjectile_Knife_C.RestoreAmmo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AA_RangeWeaponProjectile_Knife_C::RestoreAmmo(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_RangeWeaponProjectile_Knife_C", "RestoreAmmo");

	Params::A_RangeWeaponProjectile_Knife_C_RestoreAmmo Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function A_RangeWeaponProjectile_Knife.A_RangeWeaponProjectile_Knife_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AA_RangeWeaponProjectile_Knife_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_RangeWeaponProjectile_Knife_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

