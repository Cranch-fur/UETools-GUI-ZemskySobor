#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: A_SubZastava

#include "Basic.hpp"

#include "A_SubZastava_classes.hpp"
#include "A_SubZastava_parameters.hpp"


namespace SDK
{

// Function A_SubZastava.A_SubZastava_C.AlarmOnSub
// (BlueprintCallable, BlueprintEvent)

void AA_SubZastava_C::AlarmOnSub()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_SubZastava_C", "AlarmOnSub");

	UObject::ProcessEvent(Func, nullptr);
}


// Function A_SubZastava.A_SubZastava_C.BindOnDead
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ANPC_CH_NewBattleSystem_C*        Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AA_SubZastava_C::BindOnDead(class ANPC_CH_NewBattleSystem_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_SubZastava_C", "BindOnDead");

	Params::A_SubZastava_C_BindOnDead Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function A_SubZastava.A_SubZastava_C.BindOverlappedOutSubBorder
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AA_SubZastava_C::BindOverlappedOutSubBorder(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_SubZastava_C", "BindOverlappedOutSubBorder");

	Params::A_SubZastava_C_BindOverlappedOutSubBorder Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function A_SubZastava.A_SubZastava_C.BindOverlappedSubBorder
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AA_SubZastava_C::BindOverlappedSubBorder(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_SubZastava_C", "BindOverlappedSubBorder");

	Params::A_SubZastava_C_BindOverlappedSubBorder Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function A_SubZastava.A_SubZastava_C.BindSpline
// (Public, BlueprintCallable, BlueprintEvent)

void AA_SubZastava_C::BindSpline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_SubZastava_C", "BindSpline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function A_SubZastava.A_SubZastava_C.BindSubGarrisonDead
// (BlueprintCallable, BlueprintEvent)

void AA_SubZastava_C::BindSubGarrisonDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_SubZastava_C", "BindSubGarrisonDead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function A_SubZastava.A_SubZastava_C.ExecuteUbergraph_A_SubZastava
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AA_SubZastava_C::ExecuteUbergraph_A_SubZastava(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_SubZastava_C", "ExecuteUbergraph_A_SubZastava");

	Params::A_SubZastava_C_ExecuteUbergraph_A_SubZastava Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function A_SubZastava.A_SubZastava_C.GarrisonNPCDead
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              UpdatedTag                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    Exists                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AA_SubZastava_C::GarrisonNPCDead(const struct FGameplayTag& UpdatedTag, bool Exists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_SubZastava_C", "GarrisonNPCDead");

	Params::A_SubZastava_C_GarrisonNPCDead Parms{};

	Parms.UpdatedTag = std::move(UpdatedTag);
	Parms.Exists = Exists;

	UObject::ProcessEvent(Func, &Parms);
}


// Function A_SubZastava.A_SubZastava_C.IsDead
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              UpdatedTag                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    Exists                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AA_SubZastava_C::IsDead(const struct FGameplayTag& UpdatedTag, bool Exists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_SubZastava_C", "IsDead");

	Params::A_SubZastava_C_IsDead Parms{};

	Parms.UpdatedTag = std::move(UpdatedTag);
	Parms.Exists = Exists;

	UObject::ProcessEvent(Func, &Parms);
}


// Function A_SubZastava.A_SubZastava_C.PlayerIsHere
// (BlueprintCallable, BlueprintEvent)

void AA_SubZastava_C::PlayerIsHere()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_SubZastava_C", "PlayerIsHere");

	UObject::ProcessEvent(Func, nullptr);
}


// Function A_SubZastava.A_SubZastava_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AA_SubZastava_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_SubZastava_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function A_SubZastava.A_SubZastava_C.SubDontWork
// (Public, BlueprintCallable, BlueprintEvent)

void AA_SubZastava_C::SubDontWork()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_SubZastava_C", "SubDontWork");

	UObject::ProcessEvent(Func, nullptr);
}


// Function A_SubZastava.A_SubZastava_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AA_SubZastava_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("A_SubZastava_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

