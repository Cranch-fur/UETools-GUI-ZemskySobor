#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActivateAbilityByKey_BTT

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ActivateAbilityByKey_BTT.ActivateAbilityByKey_BTT_C
// 0x0060 (0x0108 - 0x00A8)
class UActivateAbilityByKey_BTT_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UClass*                                 AbilityClass;                                      // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CancelTag;                                         // 0x00B8(0x0020)(Edit, BlueprintVisible)
	bool                                          bIsAbilityCommited;                                // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipOnFailed;                                      // 0x00D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlackboardKeySelector                 AbilityKey;                                        // 0x00E0(0x0028)(Edit, BlueprintVisible)

public:
	void AbilityEndedResponse(const class UGameplayAbility* EndedAbility);
	void ExecuteUbergraph_ActivateAbilityByKey_BTT(int32 EntryPoint);
	void ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("ActivateAbilityByKey_BTT_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActivateAbilityByKey_BTT_C")
	}
	static class UActivateAbilityByKey_BTT_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivateAbilityByKey_BTT_C>();
	}
};
DUMPER7_ASSERTS_UActivateAbilityByKey_BTT_C;

}

