#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPCAnimInterface

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "EAttackSide_structs.hpp"
#include "EAttackState_structs.hpp"
#include "EAnimCommands_structs.hpp"
#include "EDirectionToStriker_structs.hpp"
#include "EAttackLevel_structs.hpp"
#include "ENPCAction_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPCAnimInterface.BPCAnimInterface_C
// 0x00C0 (0x0160 - 0x00A0)
class UBPCAnimInterface_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FVector                                LookDirection;                                     // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              InputVector;                                       // 0x00C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GroundNormal;                                      // 0x00D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      GroundMat;                                         // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSprinting;                                       // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InStealth;                                         // 0x00F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InBattle;                                          // 0x00F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isBlocking;                                        // 0x00F3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisableActions;                                    // 0x00F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanContinueCombo;                                  // 0x00F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Damaging;                                          // 0x00F6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Invulnerable;                                      // 0x00F7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanBeParried;                                      // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanParry;                                          // 0x00F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMoving;                                          // 0x00FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB[0x5];                                       // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EAnimCommands>                         Commands;                                          // 0x0100(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        GroundSlopeRight;                                  // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GroundSlopeForward;                                // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RotationRate;                                      // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTargetLocked;                                    // 0x0128(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InParryHit;                                        // 0x0129(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDead;                                            // 0x012A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAccelerating;                                    // 0x012B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HeadBoundToOpposite;                               // 0x012C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LookDirectionAngle;                                // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LookVerticalAngle;                                 // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDirectionToStriker                           DirectionToStriker;                                // 0x0140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BlockMooveFromAnimation;                           // 0x0144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BlockBlockFromAnimation;                           // 0x0148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BlockRotateFromAnimation;                          // 0x014C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BlockLockFromAnimation;                            // 0x0150(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanLeaveAnimationFromAnimation;                    // 0x0154(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackState                                  AttackState;                                       // 0x0155(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackLevel                                  AttackLevel;                                       // 0x0156(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackSide                                   AttackSide;                                        // 0x0157(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENPCAction::ENPCAction                        ForceActionVar;                                    // 0x0158(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ActionsAllowedNotify(bool Start, bool End);
	void AttackBlocked();
	void AttackHappen(class AActor* Object, EAttackState AttackType, EAttackLevel AttackLevel_0, EAttackSide AttackSide_0);
	void BlockBlock(bool bLock);
	void BlockLock(bool bLock);
	void BlockMove(bool bLock);
	void BlockRotate(bool bLock);
	void CanLeaveAnimation(bool CanLeave);
	void ComboNotify(bool Start, bool End);
	void Die();
	void DieEvent();
	void DodgeRequest(const struct FVector2D& Direction);
	void ExecuteUbergraph_BPCAnimInterface(int32 EntryPoint);
	void FootStep(bool Left, bool Right);
	void ForceAction(ENPCAction::ENPCAction ForceAction_0);
	void GetCanLeaveAnimation(bool* CanLeave);
	void GetIsBlocking(bool* isBlocking_0);
	void GetIsBlockLocked(bool* Locked);
	void GetIsBlockRotate(bool* bLocked);
	void GetIsMooving(bool* isMooving);
	void HeavyAttack();
	void HitReact(class AActor* Attacker, EAttackState AttackState_0, EAttackLevel AttackLevel_0, EAttackSide AttackSide_0);
	void HitReactInt(class AActor* Attacker, EAttackState AttackState_0, EAttackLevel AttackLevel_0, EAttackSide AttackSide_0);
	void InvulnerableNotify(bool Start, bool End);
	void LightAttack();
	void Parried();
	void RequestAction(EAnimCommands Action);
	void SetInputVector(double X, double Y);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BPCAnimInterface_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BPCAnimInterface_C")
	}
	static class UBPCAnimInterface_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPCAnimInterface_C>();
	}
};
DUMPER7_ASSERTS_UBPCAnimInterface_C;

}

