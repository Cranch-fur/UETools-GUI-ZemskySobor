#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPCBattleSystem

#include "Basic.hpp"

#include "BPCBattleSystem_classes.hpp"
#include "BPCBattleSystem_parameters.hpp"


namespace SDK
{

// Function BPCBattleSystem.BPCBattleSystem_C.CalcDamage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Subject                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAttackState                            CombatState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAttackLevel                            CombatLevel                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAttackSide                             CombatSide                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPCBattleSystem_C::CalcDamage(class AActor* Subject, class AActor* Object, double Amount, EAttackState CombatState, EAttackLevel CombatLevel, EAttackSide CombatSide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPCBattleSystem_C", "CalcDamage");

	Params::BPCBattleSystem_C_CalcDamage Parms{};

	Parms.Subject = Subject;
	Parms.Object = Object;
	Parms.Amount = Amount;
	Parms.CombatState = CombatState;
	Parms.CombatLevel = CombatLevel;
	Parms.CombatSide = CombatSide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPCBattleSystem.BPCBattleSystem_C.CalcDamageFunc
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Subject                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAttackState                            CombatState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAttackLevel                            CombatLevel                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAttackSide                             CombatSide                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPCBattleSystem_C::CalcDamageFunc(class AActor* Subject, class AActor* Object, double Amount, EAttackState CombatState, EAttackLevel CombatLevel, EAttackSide CombatSide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPCBattleSystem_C", "CalcDamageFunc");

	Params::BPCBattleSystem_C_CalcDamageFunc Parms{};

	Parms.Subject = Subject;
	Parms.Object = Object;
	Parms.Amount = Amount;
	Parms.CombatState = CombatState;
	Parms.CombatLevel = CombatLevel;
	Parms.CombatSide = CombatSide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPCBattleSystem.BPCBattleSystem_C.ExecuteUbergraph_BPCBattleSystem
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPCBattleSystem_C::ExecuteUbergraph_BPCBattleSystem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPCBattleSystem_C", "ExecuteUbergraph_BPCBattleSystem");

	Params::BPCBattleSystem_C_ExecuteUbergraph_BPCBattleSystem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPCBattleSystem.BPCBattleSystem_C.IsEnemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MySelf                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Other                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsEnemy_0                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPCBattleSystem_C::IsEnemy(class AActor* MySelf, class AActor* Other, bool* IsEnemy_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPCBattleSystem_C", "IsEnemy");

	Params::BPCBattleSystem_C_IsEnemy Parms{};

	Parms.MySelf = MySelf;
	Parms.Other = Other;

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnemy_0 != nullptr)
		*IsEnemy_0 = Parms.IsEnemy_0;
}

}

