#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Character_ANX

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "E_Action_structs.hpp"
#include "E_TurnInPlace_structs.hpp"
#include "E_MovementStage_structs.hpp"
#include "E_MoveType_structs.hpp"
#include "E_Damage_structs.hpp"
#include "E_ControlMode_structs.hpp"
#include "E_BaseAction_structs.hpp"
#include "E_Rest_structs.hpp"
#include "E_Aim_structs.hpp"
#include "E_AnimBSMode_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_Character_ANX.BPI_Character_ANX_C
// 0x0000 (0x0000 - 0x0000)
class IBPI_Character_ANX_C final
{
public:
	void BPI_Get_Animation_Info(double* Aim_Alpha, double* Aim_Yaw, double* Aim_Pitch, double* Play_Breathe, double* Lean_Drink, bool* Play_Random_Idle, bool* Play_Blink, bool* Play_Ears_Twitch, int32* Index___Ears, int32* Index___Idle, int32* index___Attack);
	void BPI_Get_Movement_Info(double* Output_X, double* Output_Y, double* Play_Rate, double* Turn_Rate, bool* Has_Move_Input, bool* Jump_in_Place, bool* Go_Jump, bool* Go_Swim, bool* Go_Turn, bool* Go_Fall, bool* go_Land);
	void BPI_Get_States(E_MovementStage* Movement_Stage, E_MoveType* Move_Type, E_ControlMode* Control_Mode, E_BaseAction* Base_Action, E_Action* Action, E_Rest* Rest, E_Damage* Damage, E_TurnInPlace* Turn, E_Aim* Aim, E_AnimBSMode* AnimBS_Mode);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BPI_Character_ANX_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BPI_Character_ANX_C")
	}
	static class IBPI_Character_ANX_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_Character_ANX_C>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IBPI_Character_ANX_C;

}

