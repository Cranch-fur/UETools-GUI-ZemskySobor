#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_HUD

#include "Basic.hpp"

#include "BPI_HUD_classes.hpp"
#include "BPI_HUD_parameters.hpp"


namespace SDK
{

// Function BPI_HUD.BPI_HUD_C.SetMaxHealth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MaxHealth                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HUD_C::SetMaxHealth(int32 MaxHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_HUD_C", "SetMaxHealth");

	Params::BPI_HUD_C_SetMaxHealth Parms{};

	Parms.MaxHealth = MaxHealth;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_HUD.BPI_HUD_C.UpdateHealth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   HealthCurrent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HUD_C::UpdateHealth(int32 HealthCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_HUD_C", "UpdateHealth");

	Params::BPI_HUD_C_UpdateHealth Parms{};

	Parms.HealthCurrent = HealthCurrent;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

