#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EnemyWaves

#include "Basic.hpp"

#include "BP_EnemyWaves_classes.hpp"
#include "BP_EnemyWaves_parameters.hpp"


namespace SDK
{

// Function BP_EnemyWaves.BP_EnemyWaves_C.ActorLoaded
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_EnemyWaves_C::ActorLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "ActorLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.ActorPreSave
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_EnemyWaves_C::ActorPreSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "ActorPreSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.ActorSaved
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_EnemyWaves_C::ActorSaved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "ActorSaved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.BeginOverlapEvent
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_EnemyWaves_C::BeginOverlapEvent(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "BeginOverlapEvent");

	Params::BP_EnemyWaves_C_BeginOverlapEvent Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.CheckTrigger
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AActor*                     EnteredActor                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyWaves_C::CheckTrigger(const class AActor* EnteredActor, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "CheckTrigger");

	Params::BP_EnemyWaves_C_CheckTrigger Parms{};

	Parms.EnteredActor = EnteredActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.CheckValidTag
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EnemyWaves_C::CheckValidTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "CheckValidTag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.ComponentsToSave
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UActorComponent*>*         Components                                             (Parm, OutParm, ContainsInstancedReference)

void ABP_EnemyWaves_C::ComponentsToSave(TArray<class UActorComponent*>* Components)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "ComponentsToSave");

	Params::BP_EnemyWaves_C_ComponentsToSave Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Components != nullptr)
		*Components = std::move(Parms.Components);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.ExecuteUbergraph_BP_EnemyWaves
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyWaves_C::ExecuteUbergraph_BP_EnemyWaves(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "ExecuteUbergraph_BP_EnemyWaves");

	Params::BP_EnemyWaves_C_ExecuteUbergraph_BP_EnemyWaves Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.FinishWaves
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_EnemyWaves_C::FinishWaves()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "FinishWaves");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.Get Points Out Of Vision
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TSoftObjectPtr<class ABP_WaveUnitSpawnPoint_C>>&Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class ABP_WaveUnitSpawnPoint_C*>*AvailablePoints                                        (Parm, OutParm)

void ABP_EnemyWaves_C::Get_Points_Out_Of_Vision(TArray<TSoftObjectPtr<class ABP_WaveUnitSpawnPoint_C>>& Array, TArray<class ABP_WaveUnitSpawnPoint_C*>* AvailablePoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "Get Points Out Of Vision");

	Params::BP_EnemyWaves_C_Get_Points_Out_Of_Vision Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);

	if (AvailablePoints != nullptr)
		*AvailablePoints = std::move(Parms.AvailablePoints);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.GetCurrentWaveCharacters
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ADefaultCharacter*>*       CurrentWaveCharacters_0                                (Parm, OutParm)

void ABP_EnemyWaves_C::GetCurrentWaveCharacters(TArray<class ADefaultCharacter*>* CurrentWaveCharacters_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "GetCurrentWaveCharacters");

	Params::BP_EnemyWaves_C_GetCurrentWaveCharacters Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentWaveCharacters_0 != nullptr)
		*CurrentWaveCharacters_0 = std::move(Parms.CurrentWaveCharacters_0);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.GetDifficultySetup
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FFEnemyWave>*             Waves_0                                                (Parm, OutParm, ContainsInstancedReference)

void ABP_EnemyWaves_C::GetDifficultySetup(TArray<struct FFEnemyWave>* Waves_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "GetDifficultySetup");

	Params::BP_EnemyWaves_C_GetDifficultySetup Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Waves_0 != nullptr)
		*Waves_0 = std::move(Parms.Waves_0);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.GetTransformForSpawnpoint
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_WaveUnitSpawnPoint_C*>&AvailablePoints                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const TArray<TSoftObjectPtr<class ABP_WaveUnitSpawnPoint_C>>&AllPossiblePoints                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_WaveUnitSpawnPoint_C**        Selected1                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

struct FTransform ABP_EnemyWaves_C::GetTransformForSpawnpoint(TArray<class ABP_WaveUnitSpawnPoint_C*>& AvailablePoints, const TArray<TSoftObjectPtr<class ABP_WaveUnitSpawnPoint_C>>& AllPossiblePoints, class ABP_WaveUnitSpawnPoint_C** Selected1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "GetTransformForSpawnpoint");

	Params::BP_EnemyWaves_C_GetTransformForSpawnpoint Parms{};

	Parms.AvailablePoints = std::move(AvailablePoints);
	Parms.AllPossiblePoints = std::move(AllPossiblePoints);

	UObject::ProcessEvent(Func, &Parms);

	AvailablePoints = std::move(Parms.AvailablePoints);

	if (Selected1 != nullptr)
		*Selected1 = Parms.Selected1;

	return Parms.ReturnValue;
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.IsActorOnSreen
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_EnemyWaves_C::IsActorOnSreen(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "IsActorOnSreen");

	Params::BP_EnemyWaves_C_IsActorOnSreen Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.OnCharacterDied_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADefaultCharacter*                DiedCharacter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyWaves_C::OnCharacterDied_Event(class ADefaultCharacter* DiedCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "OnCharacterDied_Event");

	Params::BP_EnemyWaves_C_OnCharacterDied_Event Parms{};

	Parms.DiedCharacter = DiedCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.OnQueryFinishedEvent_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UEnvQueryInstanceBlueprintWrapper*QueryInstance                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EEnvQueryStatus                         QueryStatus                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyWaves_C::OnQueryFinishedEvent_Event(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "OnQueryFinishedEvent_Event");

	Params::BP_EnemyWaves_C_OnQueryFinishedEvent_Event Parms{};

	Parms.QueryInstance = QueryInstance;
	Parms.QueryStatus = QueryStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.OutOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyWaves_C::OutOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "OutOverlap");

	Params::BP_EnemyWaves_C_OutOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.PrepareSpawnPoints
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FFEnemyWaveUnit>&         Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ABP_EnemyWaves_C::PrepareSpawnPoints(TArray<struct FFEnemyWaveUnit>& Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "PrepareSpawnPoints");

	Params::BP_EnemyWaves_C_PrepareSpawnPoints Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_EnemyWaves_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.Restore
// (BlueprintCallable, BlueprintEvent)

void ABP_EnemyWaves_C::Restore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "Restore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.SelectPointFromAvailable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const TArray<class ABP_WaveUnitSpawnPoint_C*>&TargetArray                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FTransform                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_WaveUnitSpawnPoint_C**        Selected1                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

const struct FTransform ABP_EnemyWaves_C::SelectPointFromAvailable(const TArray<class ABP_WaveUnitSpawnPoint_C*>& TargetArray, class ABP_WaveUnitSpawnPoint_C** Selected1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "SelectPointFromAvailable");

	Params::BP_EnemyWaves_C_SelectPointFromAvailable Parms{};

	Parms.TargetArray = std::move(TargetArray);

	UObject::ProcessEvent(Func, &Parms);

	if (Selected1 != nullptr)
		*Selected1 = Parms.Selected1;

	return Parms.ReturnValue;
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.SelectPointsFromAvailableSoft
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const TArray<TSoftObjectPtr<class ABP_WaveUnitSpawnPoint_C>>&TargetArray                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_WaveUnitSpawnPoint_C**        Selected1                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

struct FTransform ABP_EnemyWaves_C::SelectPointsFromAvailableSoft(const TArray<TSoftObjectPtr<class ABP_WaveUnitSpawnPoint_C>>& TargetArray, class ABP_WaveUnitSpawnPoint_C** Selected1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "SelectPointsFromAvailableSoft");

	Params::BP_EnemyWaves_C_SelectPointsFromAvailableSoft Parms{};

	Parms.TargetArray = std::move(TargetArray);

	UObject::ProcessEvent(Func, &Parms);

	if (Selected1 != nullptr)
		*Selected1 = Parms.Selected1;

	return Parms.ReturnValue;
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.SetCanBeTriggered
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanBeTriggered                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyWaves_C::SetCanBeTriggered(bool CanBeTriggered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "SetCanBeTriggered");

	Params::BP_EnemyWaves_C_SetCanBeTriggered Parms{};

	Parms.CanBeTriggered = CanBeTriggered;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.SetCanRestore
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AutoRestoreAfterTime_0                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SkipRestoringTimer                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyWaves_C::SetCanRestore(bool AutoRestoreAfterTime_0, bool SkipRestoringTimer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "SetCanRestore");

	Params::BP_EnemyWaves_C_SetCanRestore Parms{};

	Parms.AutoRestoreAfterTime_0 = AutoRestoreAfterTime_0;
	Parms.SkipRestoringTimer = SkipRestoringTimer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.SetRestoreAmount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RestoreAmount_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SkipRestoreTimer                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyWaves_C::SetRestoreAmount(int32 RestoreAmount_0, bool SkipRestoreTimer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "SetRestoreAmount");

	Params::BP_EnemyWaves_C_SetRestoreAmount Parms{};

	Parms.RestoreAmount_0 = RestoreAmount_0;
	Parms.SkipRestoreTimer = SkipRestoreTimer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.SetupCharacter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ANPC_CH_NewBattleSystem_C*        SpawnedCharacter                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyWaves_C::SetupCharacter(class ANPC_CH_NewBattleSystem_C* SpawnedCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "SetupCharacter");

	Params::BP_EnemyWaves_C_SetupCharacter Parms{};

	Parms.SpawnedCharacter = SpawnedCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.SpawnNextUnit
// (BlueprintCallable, BlueprintEvent)

void ABP_EnemyWaves_C::SpawnNextUnit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "SpawnNextUnit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.SpawnNextUnitType
// (BlueprintCallable, BlueprintEvent)

void ABP_EnemyWaves_C::SpawnNextUnitType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "SpawnNextUnitType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.SpawnNextWave
// (BlueprintCallable, BlueprintEvent)

void ABP_EnemyWaves_C::SpawnNextWave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "SpawnNextWave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.StartRestoring
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyWaves_C::StartRestoring(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "StartRestoring");

	Params::BP_EnemyWaves_C_StartRestoring Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.StartWaves
// (BlueprintCallable, BlueprintEvent)

void ABP_EnemyWaves_C::StartWaves()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "StartWaves");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.TimerToNextWaveElapsed
// (BlueprintCallable, BlueprintEvent)

void ABP_EnemyWaves_C::TimerToNextWaveElapsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "TimerToNextWaveElapsed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.TracesCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   ActorLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   TracesVisible                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyWaves_C::TracesCheck(const struct FVector& ActorLocation, bool* TracesVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "TracesCheck");

	Params::BP_EnemyWaves_C_TracesCheck Parms{};

	Parms.ActorLocation = std::move(ActorLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (TracesVisible != nullptr)
		*TracesVisible = Parms.TracesVisible;
}


// Function BP_EnemyWaves.BP_EnemyWaves_C.ValidateSpawnPoints
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_EnemyWaves_C::ValidateSpawnPoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyWaves_C", "ValidateSpawnPoints");

	UObject::ProcessEvent(Func, nullptr);
}

}

