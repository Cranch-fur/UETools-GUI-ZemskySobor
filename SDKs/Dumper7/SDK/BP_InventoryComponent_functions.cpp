#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InventoryComponent

#include "Basic.hpp"

#include "BP_InventoryComponent_classes.hpp"
#include "BP_InventoryComponent_parameters.hpp"


namespace SDK
{

// Function BP_InventoryComponent.BP_InventoryComponent_C.AddItemsToInventory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UDA_InventoryItem_C*>&     Items                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>&                          Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_InventoryComponent_C::AddItemsToInventory(TArray<class UDA_InventoryItem_C*>& Items, TArray<int32>& Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryComponent_C", "AddItemsToInventory");

	Params::BP_InventoryComponent_C_AddItemsToInventory Parms{};

	Parms.Items = std::move(Items);
	Parms.Amount = std::move(Amount);

	UObject::ProcessEvent(Func, &Parms);

	Items = std::move(Parms.Items);
	Amount = std::move(Parms.Amount);
}


// Function BP_InventoryComponent.BP_InventoryComponent_C.AddItemToSlot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDA_InventoryItem_C*              Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InventoryComponent_C::AddItemToSlot(class UDA_InventoryItem_C* Item, int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryComponent_C", "AddItemToSlot");

	Params::BP_InventoryComponent_C_AddItemToSlot Parms{};

	Parms.Item = Item;
	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventoryComponent.BP_InventoryComponent_C.AddMoneyToSlot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InventoryComponent_C::AddMoneyToSlot(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryComponent_C", "AddMoneyToSlot");

	Params::BP_InventoryComponent_C_AddMoneyToSlot Parms{};

	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventoryComponent.BP_InventoryComponent_C.ExecuteUbergraph_BP_InventoryComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InventoryComponent_C::ExecuteUbergraph_BP_InventoryComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryComponent_C", "ExecuteUbergraph_BP_InventoryComponent");

	Params::BP_InventoryComponent_C_ExecuteUbergraph_BP_InventoryComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventoryComponent.BP_InventoryComponent_C.FindFreeSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  FreeSlotIndex                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InventoryComponent_C::FindFreeSlot(bool* Found, int32* FreeSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryComponent_C", "FindFreeSlot");

	Params::BP_InventoryComponent_C_FindFreeSlot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;

	if (FreeSlotIndex != nullptr)
		*FreeSlotIndex = Parms.FreeSlotIndex;
}


// Function BP_InventoryComponent.BP_InventoryComponent_C.FindSameItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDA_InventoryItem_C*              Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  IndexToAddAmount                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  AmountToAdd                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InventoryComponent_C::FindSameItem(class UDA_InventoryItem_C* Item, bool* Found, int32* IndexToAddAmount, int32* AmountToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryComponent_C", "FindSameItem");

	Params::BP_InventoryComponent_C_FindSameItem Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;

	if (IndexToAddAmount != nullptr)
		*IndexToAddAmount = Parms.IndexToAddAmount;

	if (AmountToAdd != nullptr)
		*AmountToAdd = Parms.AmountToAdd;
}


// Function BP_InventoryComponent.BP_InventoryComponent_C.GetItemAtSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDA_InventoryItem_C**             Item                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32*                                  Amount                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InventoryComponent_C::GetItemAtSlot(int32 Slot, class UDA_InventoryItem_C** Item, int32* Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryComponent_C", "GetItemAtSlot");

	Params::BP_InventoryComponent_C_GetItemAtSlot Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);

	if (Item != nullptr)
		*Item = Parms.Item;

	if (Amount != nullptr)
		*Amount = Parms.Amount;
}


// Function BP_InventoryComponent.BP_InventoryComponent_C.getItems
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UDA_InventoryItem_C*>*     Items                                                  (Parm, OutParm)
// TArray<int32>*                          Amount                                                 (Parm, OutParm)

void UBP_InventoryComponent_C::getItems(TArray<class UDA_InventoryItem_C*>* Items, TArray<int32>* Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryComponent_C", "getItems");

	Params::BP_InventoryComponent_C_getItems Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Items != nullptr)
		*Items = std::move(Parms.Items);

	if (Amount != nullptr)
		*Amount = std::move(Parms.Amount);
}


// Function BP_InventoryComponent.BP_InventoryComponent_C.GetMoney
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  MoneyAmount                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InventoryComponent_C::GetMoney(int32* MoneyAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryComponent_C", "GetMoney");

	Params::BP_InventoryComponent_C_GetMoney Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MoneyAmount != nullptr)
		*MoneyAmount = Parms.MoneyAmount;
}


// Function BP_InventoryComponent.BP_InventoryComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_InventoryComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

