#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lib_Scalability

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Lib_Scalability.BP_Lib_Scalability_C
// 0x0000 (0x0028 - 0x0028)
class UBP_Lib_Scalability_C final : public UBlueprintFunctionLibrary
{
public:
	static struct FIntPoint Get_Desktop_Resolution(class USmutaGameUserSettings* SmutaGameUserSettings, class UObject* __WorldContext, class FText* Text);
	static void GetAntiAliasingQuality(class USmutaGameUserSettings* SmutaGameUserSettings, class UObject* __WorldContext, int32* Value);
	static void GetEffectsQuality(class USmutaGameUserSettings* SmutaGameUserSettings, class UObject* __WorldContext, int32* Value);
	static void GetFoliageQuality(class USmutaGameUserSettings* SmutaGameUserSettings, class UObject* __WorldContext, int32* Value);
	static void GetFrameRateLimit(bool LockedFrameLimit, class USmutaGameUserSettings* SmutaGameUserSettings, class UObject* __WorldContext, float* FrameLimit);
	static void GetGlobalIlluminationQuality(class USmutaGameUserSettings* SmutaGameUserSettings, class UObject* __WorldContext, int32* Value);
	static void GetGlobalQuality(class USmutaGameUserSettings* SmutaGameUserSettings, class UObject* __WorldContext, int32* Value);
	static void GetPostProcessingQuality(class USmutaGameUserSettings* SmutaGameUserSettings, class UObject* __WorldContext, int32* Value);
	static void GetReflectionsQuality(class USmutaGameUserSettings* SmutaGameUserSettings, class UObject* __WorldContext, int32* Value);
	static void GetScreenMode(class USmutaGameUserSettings* SmutaGameUserSettings, class UObject* __WorldContext, int32* OptionIndex, EWindowMode* Value);
	static void GetShadingQuality(class USmutaGameUserSettings* SmutaGameUserSettings, class UObject* __WorldContext, int32* Value);
	static void GetShadowsQuality(class USmutaGameUserSettings* SmutaGameUserSettings, class UObject* __WorldContext, int32* Value);
	static void GetTexturesQuality(class USmutaGameUserSettings* SmutaGameUserSettings, class UObject* __WorldContext, int32* Value);
	static void GetViewDistanceQuality(class USmutaGameUserSettings* SmutaGameUserSettings, class UObject* __WorldContext, int32* Value);
	static void GetVSync(class USmutaGameUserSettings* SmutaGameUserSettings, class UObject* __WorldContext, bool* IsEnabled, int32* Index_0);
	static void SetAntiAliasingQuality(class USmutaGameUserSettings* SmutaGameUserSettings, int32 Value, class UObject* __WorldContext);
	static void SetEffectsQuality(class USmutaGameUserSettings* SmutaGameUserSettings, int32 Value, class UObject* __WorldContext);
	static void SetFoliageQuality(class USmutaGameUserSettings* SmutaGameUserSettings, int32 Value, class UObject* __WorldContext);
	static void SetFrameRateLimit(class USmutaGameUserSettings* SmutaGameUserSettings, double Frame_Limit, class UObject* __WorldContext);
	static void SetGlobalIlluminationQuality(class USmutaGameUserSettings* SmutaGameUserSettings, int32 Value, class UObject* __WorldContext);
	static void SetGlobalQuality(class USmutaGameUserSettings* SmutaGameUserSettings, int32 Value, class UObject* __WorldContext);
	static void SetPostProcessingQuality(class USmutaGameUserSettings* SmutaGameUserSettings, int32 Value, class UObject* __WorldContext);
	static void SetReflectionsQuality(class USmutaGameUserSettings* SmutaGameUserSettings, int32 Value, class UObject* __WorldContext);
	static void SetScreenMode(class USmutaGameUserSettings* SmutaGameUserSettings, EWindowMode Value, class UObject* __WorldContext);
	static void SetScreenResolution(class USmutaGameUserSettings* SmutaGameUserSettings, const struct FIntPoint& Resolution, class UObject* __WorldContext);
	static void SetShadingQuality(class USmutaGameUserSettings* SmutaGameUserSettings, int32 Value, class UObject* __WorldContext);
	static void SetShadowsQuality(class USmutaGameUserSettings* SmutaGameUserSettings, int32 Value, class UObject* __WorldContext);
	static void SetTexturesQuality(class USmutaGameUserSettings* SmutaGameUserSettings, int32 Value, class UObject* __WorldContext);
	static void SetViewDistanceQuality(class USmutaGameUserSettings* SmutaGameUserSettings, int32 Value, class UObject* __WorldContext);
	static void SetVSync(class USmutaGameUserSettings* SmutaGameUserSettings, int32 Index_0, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_Lib_Scalability_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_Lib_Scalability_C")
	}
	static class UBP_Lib_Scalability_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Lib_Scalability_C>();
	}
};
DUMPER7_ASSERTS_UBP_Lib_Scalability_C;

}

