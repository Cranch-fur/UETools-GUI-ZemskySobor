#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Marker

#include "Basic.hpp"

#include "BP_Marker_classes.hpp"
#include "BP_Marker_parameters.hpp"


namespace SDK
{

// Function BP_Marker.BP_Marker_C.!Reached
// (BlueprintCallable, BlueprintEvent)

void ABP_Marker_C::_Reached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Marker_C", "!Reached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Marker.BP_Marker_C.ActorLoaded
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Marker_C::ActorLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Marker_C", "ActorLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Marker.BP_Marker_C.ActorPreSave
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Marker_C::ActorPreSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Marker_C", "ActorPreSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Marker.BP_Marker_C.ActorSaved
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Marker_C::ActorSaved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Marker_C", "ActorSaved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Marker.BP_Marker_C.AfterSequence
// (BlueprintCallable, BlueprintEvent)

void ABP_Marker_C::AfterSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Marker_C", "AfterSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Marker.BP_Marker_C.BndEvt__BP_Marker_BP_QuestMarker_K2Node_ComponentBoundEvent_2_OnQuestMarkerShown__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Marker_C::BndEvt__BP_Marker_BP_QuestMarker_K2Node_ComponentBoundEvent_2_OnQuestMarkerShown__DelegateSignature(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Marker_C", "BndEvt__BP_Marker_BP_QuestMarker_K2Node_ComponentBoundEvent_2_OnQuestMarkerShown__DelegateSignature");

	Params::BP_Marker_C_BndEvt__BP_Marker_BP_QuestMarker_K2Node_ComponentBoundEvent_2_OnQuestMarkerShown__DelegateSignature Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Marker.BP_Marker_C.BndEvt__BP_Marker_TriggerCapsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Marker_C::BndEvt__BP_Marker_TriggerCapsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Marker_C", "BndEvt__BP_Marker_TriggerCapsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_Marker_C_BndEvt__BP_Marker_TriggerCapsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Marker.BP_Marker_C.BndEvt__BP_Marker_TriggerCapsule_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Marker_C::BndEvt__BP_Marker_TriggerCapsule_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Marker_C", "BndEvt__BP_Marker_TriggerCapsule_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_Marker_C_BndEvt__BP_Marker_TriggerCapsule_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Marker.BP_Marker_C.ComponentsToSave
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UActorComponent*>*         Components                                             (Parm, OutParm, ContainsInstancedReference)

void ABP_Marker_C::ComponentsToSave(TArray<class UActorComponent*>* Components)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Marker_C", "ComponentsToSave");

	Params::BP_Marker_C_ComponentsToSave Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Components != nullptr)
		*Components = std::move(Parms.Components);
}


// Function BP_Marker.BP_Marker_C.Disable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WithMinimap                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Marker_C::Disable(bool WithMinimap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Marker_C", "Disable");

	Params::BP_Marker_C_Disable Parms{};

	Parms.WithMinimap = WithMinimap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Marker.BP_Marker_C.Enable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WithMinimap                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Marker_C::Enable(bool WithMinimap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Marker_C", "Enable");

	Params::BP_Marker_C_Enable Parms{};

	Parms.WithMinimap = WithMinimap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Marker.BP_Marker_C.ExecuteUbergraph_BP_Marker
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Marker_C::ExecuteUbergraph_BP_Marker(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Marker_C", "ExecuteUbergraph_BP_Marker");

	Params::BP_Marker_C_ExecuteUbergraph_BP_Marker Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Marker.BP_Marker_C.Next
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Marker_C::Next()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Marker_C", "Next");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Marker.BP_Marker_C.PlaySequence
// (BlueprintCallable, BlueprintEvent)

void ABP_Marker_C::PlaySequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Marker_C", "PlaySequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Marker.BP_Marker_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Marker_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Marker_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Marker.BP_Marker_C.Toggle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Marker_C::Toggle(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Marker_C", "Toggle");

	Params::BP_Marker_C_Toggle Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Marker.BP_Marker_C.UpdateMinimap
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Marker_C*                     marker                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Marker_C::UpdateMinimap(class ABP_Marker_C* marker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Marker_C", "UpdateMinimap");

	Params::BP_Marker_C_UpdateMinimap Parms{};

	Parms.marker = marker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Marker.BP_Marker_C.UpdateQuestOnReach
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Marker_C::UpdateQuestOnReach()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Marker_C", "UpdateQuestOnReach");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Marker.BP_Marker_C.UpdateVisibility
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_Marker_C::UpdateVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Marker_C", "UpdateVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Marker.BP_Marker_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Marker_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Marker_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

