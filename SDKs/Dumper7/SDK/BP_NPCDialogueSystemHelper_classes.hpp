#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPCDialogueSystemHelper

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Smuta_classes.hpp"
#include "EDialogueSystemEmotion_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NPCDialogueSystemHelper.BP_NPCDialogueSystemHelper_C
// 0x0070 (0x0390 - 0x0320)
class ABP_NPCDialogueSystemHelper_C final : public ANPCDialogueSystemHelper
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceToPlayAnimations;                          // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        SpawnedSound;                                      // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<class ANPC_CH_C*, class UPassport_C*>    OldPassports;                                      // 0x0340(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void Async_Load_Assets_For_Current_Dialogue_Step();
	void ChangeParticipantsDialogueStatus(bool IsActive);
	void CheckDistanceToPlayer(double MaxDistance, bool* Result);
	void CheckSubtitlesToShow();
	void ConstructParticipantID(int32 ParticipantIndex, class FString* ParticipantID);
	void ExecuteUbergraph_BP_NPCDialogueSystemHelper(int32 EntryPoint);
	void FindDialoguePointByEQS();
	void FinishDialogue();
	void GetCurrentAnimations(TMap<class FString, struct FS_ParticipoantVisuals>* Visuals);
	void GetCurrentSound(class USoundWave** Sound);
	void GetParticipantByName(const class FString& ParticipantName, class ADefaultCharacter** Character);
	void GetPassportFor(int32 NPCIndex, class UPassport_C* OldPassport, class UPassport_C** Passport);
	void GoToNextPhrase();
	void HandleLipsyncLoaded(const TArray<class UAnimSequenceBase*>& LipsyncAnim, class USoundBase* Sound);
	void NeedBodyAnimations(class AActor* Actor, bool* Result);
	void NeedToReplacePassportFor(class ADefaultCharacter* NPC, bool* Result);
	void NeedToShowSubtitles(bool* Result);
	void OnAudioFinished();
	void OnBlendOut_F2FFF072482E6D5E2299499700B85C02(class FName NotifyName);
	void OnCompleted_F2FFF072482E6D5E2299499700B85C02(class FName NotifyName);
	void OnEQSQueryFinished(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus);
	void OnInterrupted_F2FFF072482E6D5E2299499700B85C02(class FName NotifyName);
	void OnNotifyBegin_F2FFF072482E6D5E2299499700B85C02(class FName NotifyName);
	void OnNotifyEnd_F2FFF072482E6D5E2299499700B85C02(class FName NotifyName);
	void PlayBodyAnimation(class ADefaultCharacter* Character, class UAnimSequence* Animation);
	void PlayCurrentPhrase();
	void PlayLipsyncAnim(class ADefaultCharacter* Character, class UAnimSequenceBase* LipSync, EDialogueSystemEmotion Emotion);
	void PlayMontage(class UAnimMontage* Montage, class USkeletalMeshComponent* SkeletalMesh);
	void PlaySound();
	void ReplacePassports();
	void ReturnPassports();
	void SetLinkBodyAnims(bool NewLink);
	void SetupAnimations();
	void SetupFaces();
	void StartDialogue();
	void StartDialogueAsset();
	void Unlink_Face_Anims();
	void UnsetupFaces();

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_NPCDialogueSystemHelper_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_NPCDialogueSystemHelper_C")
	}
	static class ABP_NPCDialogueSystemHelper_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NPCDialogueSystemHelper_C>();
	}
};
DUMPER7_ASSERTS_ABP_NPCDialogueSystemHelper_C;

}

