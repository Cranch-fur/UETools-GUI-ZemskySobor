#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PC_Datadriven

#include "Basic.hpp"

#include "BP_PC_Datadriven_classes.hpp"
#include "BP_PC_Datadriven_parameters.hpp"


namespace SDK
{

// Function BP_PC_Datadriven.BP_PC_Datadriven_C.AniInterfaceUpdate
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PC_Datadriven_C::AniInterfaceUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "AniInterfaceUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.ApplyTraits
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_PC_Datadriven_C::ApplyTraits()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "ApplyTraits");

	Params::BP_PC_Datadriven_C_ApplyTraits Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.BndEvt__BP_PC_Datadriven_CombatRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_PC_Datadriven_C::BndEvt__BP_PC_Datadriven_CombatRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "BndEvt__BP_PC_Datadriven_CombatRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_PC_Datadriven_C_BndEvt__BP_PC_Datadriven_CombatRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.Changed Armed State
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewArmed                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::Changed_Armed_State(bool NewArmed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "Changed Armed State");

	Params::BP_PC_Datadriven_C_Changed_Armed_State Parms{};

	Parms.NewArmed = NewArmed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.ChangeEquipment
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCharacterEquipment_C*            NewEquip                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::ChangeEquipment(class UCharacterEquipment_C* NewEquip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "ChangeEquipment");

	Params::BP_PC_Datadriven_C_ChangeEquipment Parms{};

	Parms.NewEquip = NewEquip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.CollisionGrowTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_PC_Datadriven_C::CollisionGrowTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "CollisionGrowTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.CollisionGrowTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_PC_Datadriven_C::CollisionGrowTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "CollisionGrowTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.Death
// (BlueprintCallable, BlueprintEvent)

void ABP_PC_Datadriven_C::Death()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "Death");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.ExecuteUbergraph_BP_PC_Datadriven
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::ExecuteUbergraph_BP_PC_Datadriven(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "ExecuteUbergraph_BP_PC_Datadriven");

	Params::BP_PC_Datadriven_C_ExecuteUbergraph_BP_PC_Datadriven Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.Filter Targets in Radius
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>&                  Targets                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// double                                  Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>*                  Return                                                 (Parm, OutParm)

void ABP_PC_Datadriven_C::Filter_Targets_in_Radius(TArray<class AActor*>& Targets, double Radius, TArray<class AActor*>* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "Filter Targets in Radius");

	Params::BP_PC_Datadriven_C_Filter_Targets_in_Radius Parms{};

	Parms.Targets = std::move(Targets);
	Parms.Radius = Radius;

	UObject::ProcessEvent(Func, &Parms);

	Targets = std::move(Parms.Targets);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.FilterTargetsInAngle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>&                  Targets                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// double                                  _Angle                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>*                  Filtered                                               (Parm, OutParm)

void ABP_PC_Datadriven_C::FilterTargetsInAngle(TArray<class AActor*>& Targets, double _Angle, TArray<class AActor*>* Filtered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "FilterTargetsInAngle");

	Params::BP_PC_Datadriven_C_FilterTargetsInAngle Parms{};

	Parms.Targets = std::move(Targets);
	Parms._Angle = _Angle;

	UObject::ProcessEvent(Func, &Parms);

	Targets = std::move(Parms.Targets);

	if (Filtered != nullptr)
		*Filtered = std::move(Parms.Filtered);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.FindClosestTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>&                  _Targets                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AActor**                          Return                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::FindClosestTarget(TArray<class AActor*>& _Targets, class AActor** Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "FindClosestTarget");

	Params::BP_PC_Datadriven_C_FindClosestTarget Parms{};

	Parms._Targets = std::move(_Targets);

	UObject::ProcessEvent(Func, &Parms);

	_Targets = std::move(Parms._Targets);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.FindClosestToAim
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>&                  _Targets                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AActor**                          Return                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::FindClosestToAim(TArray<class AActor*>& _Targets, class AActor** Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "FindClosestToAim");

	Params::BP_PC_Datadriven_C_FindClosestToAim Parms{};

	Parms._Targets = std::move(_Targets);

	UObject::ProcessEvent(Func, &Parms);

	_Targets = std::move(Parms._Targets);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.FindNextTarget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PC_Datadriven_C::FindNextTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "FindNextTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.ForceAction
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ENPCAction::ENPCAction                  Action                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::ForceAction(ENPCAction::ENPCAction Action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "ForceAction");

	Params::BP_PC_Datadriven_C_ForceAction Parms{};

	Parms.Action = Action;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.GetCameraVectors
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         Forward                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Right                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::GetCameraVectors(struct FVector* Forward, struct FVector* Right)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "GetCameraVectors");

	Params::BP_PC_Datadriven_C_GetCameraVectors Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Forward != nullptr)
		*Forward = std::move(Parms.Forward);

	if (Right != nullptr)
		*Right = std::move(Parms.Right);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.GetDamageTargets
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FriendlyFire                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>*                  ActorsHit                                              (Parm, OutParm)

void ABP_PC_Datadriven_C::GetDamageTargets(bool FriendlyFire, TArray<class AActor*>* ActorsHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "GetDamageTargets");

	Params::BP_PC_Datadriven_C_GetDamageTargets Parms{};

	Parms.FriendlyFire = FriendlyFire;

	UObject::ProcessEvent(Func, &Parms);

	if (ActorsHit != nullptr)
		*ActorsHit = std::move(Parms.ActorsHit);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.getDialogComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_Ink_Dialog_Component_C**      Ref_DialigComponent                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::getDialogComponent(class UBP_Ink_Dialog_Component_C** Ref_DialigComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "getDialogComponent");

	Params::BP_PC_Datadriven_C_getDialogComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ref_DialigComponent != nullptr)
		*Ref_DialigComponent = Parms.Ref_DialigComponent;
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.getPassport
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPassport_C**                     Passport_0                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::getPassport(class UPassport_C** Passport_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "getPassport");

	Params::BP_PC_Datadriven_C_getPassport Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Passport_0 != nullptr)
		*Passport_0 = Parms.Passport_0;
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.getTriggerBoxID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString*                          ID                                                     (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::getTriggerBoxID(class FString* ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "getTriggerBoxID");

	Params::BP_PC_Datadriven_C_getTriggerBoxID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ID != nullptr)
		*ID = std::move(Parms.ID);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.GrowChar2CharCollision
// (BlueprintCallable, BlueprintEvent)

void ABP_PC_Datadriven_C::GrowChar2CharCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "GrowChar2CharCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.InitHudHealth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MaxHealth                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::InitHudHealth(int32 MaxHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "InitHudHealth");

	Params::BP_PC_Datadriven_C_InitHudHealth Parms{};

	Parms.MaxHealth = MaxHealth;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.InitLockTargetWidget
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PC_Datadriven_C::InitLockTargetWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "InitLockTargetWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.Is in Combat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   InCombat                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::Is_in_Combat(bool* InCombat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "Is in Combat");

	Params::BP_PC_Datadriven_C_Is_in_Combat Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InCombat != nullptr)
		*InCombat = Parms.InCombat;
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.IsInCombat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::IsInCombat(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "IsInCombat");

	Params::BP_PC_Datadriven_C_IsInCombat Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.IsRunning
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Running                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::IsRunning(bool* Running)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "IsRunning");

	Params::BP_PC_Datadriven_C_IsRunning Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Running != nullptr)
		*Running = Parms.Running;
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.LockCamera
// (BlueprintCallable, BlueprintEvent)

void ABP_PC_Datadriven_C::LockCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "LockCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.ProcessDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::ProcessDamage(double Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "ProcessDamage");

	Params::BP_PC_Datadriven_C_ProcessDamage Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.ReceiveAnyDamage
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UDamageType*                DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "ReceiveAnyDamage");

	Params::BP_PC_Datadriven_C_ReceiveAnyDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PC_Datadriven_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.ReceivePossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "ReceivePossessed");

	Params::BP_PC_Datadriven_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "ReceiveTick");

	Params::BP_PC_Datadriven_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.ReduceChar2CharCollision
// (BlueprintCallable, BlueprintEvent)

void ABP_PC_Datadriven_C::ReduceChar2CharCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "ReduceChar2CharCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.Request_stance
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::Request_stance(int32 Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "Request_stance");

	Params::BP_PC_Datadriven_C_Request_stance Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.RequestHeavyAttack
// (BlueprintCallable, BlueprintEvent)

void ABP_PC_Datadriven_C::RequestHeavyAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "RequestHeavyAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.RequestLightAttack
// (BlueprintCallable, BlueprintEvent)

void ABP_PC_Datadriven_C::RequestLightAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "RequestLightAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.ResetManualTargetLock
// (BlueprintCallable, BlueprintEvent)

void ABP_PC_Datadriven_C::ResetManualTargetLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "ResetManualTargetLock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.Set Pasport for Player
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PC_Datadriven_C::Set_Pasport_for_Player()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "Set Pasport for Player");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.SetSprinting
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const bool                              newWalking                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewSprinting                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::SetSprinting(const bool newWalking, bool NewSprinting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "SetSprinting");

	Params::BP_PC_Datadriven_C_SetSprinting Parms{};

	Parms.newWalking = newWalking;
	Parms.NewSprinting = NewSprinting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.SetTargetLock
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           NewTargetLock                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    WithDelay                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::SetTargetLock(class AActor* NewTargetLock, bool WithDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "SetTargetLock");

	Params::BP_PC_Datadriven_C_SetTargetLock Parms{};

	Parms.NewTargetLock = NewTargetLock;
	Parms.WithDelay = WithDelay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.ShowEnemyHealthBar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::ShowEnemyHealthBar(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "ShowEnemyHealthBar");

	Params::BP_PC_Datadriven_C_ShowEnemyHealthBar Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.ShowLockTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::ShowLockTarget(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "ShowLockTarget");

	Params::BP_PC_Datadriven_C_ShowLockTarget Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.Stelth
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Stelth_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::Stelth(int32 Stelth_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "Stelth");

	Params::BP_PC_Datadriven_C_Stelth Parms{};

	Parms.Stelth_0 = Stelth_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.TryToggleManualLock
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::TryToggleManualLock(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "TryToggleManualLock");

	Params::BP_PC_Datadriven_C_TryToggleManualLock Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.UnlockCamera
// (BlueprintCallable, BlueprintEvent)

void ABP_PC_Datadriven_C::UnlockCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "UnlockCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.Update Aggro
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PC_Datadriven_C::Update_Aggro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "Update Aggro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.Update Target Lock
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PC_Datadriven_C::Update_Target_Lock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "Update Target Lock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.UpdateCamera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PC_Datadriven_C::UpdateCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "UpdateCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.UpdateCombatRotation
// (BlueprintCallable, BlueprintEvent)

void ABP_PC_Datadriven_C::UpdateCombatRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "UpdateCombatRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.UpdateHudHealth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   HealthCurrent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PC_Datadriven_C::UpdateHudHealth(int32 HealthCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "UpdateHudHealth");

	Params::BP_PC_Datadriven_C_UpdateHudHealth Parms{};

	Parms.HealthCurrent = HealthCurrent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PC_Datadriven.BP_PC_Datadriven_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_PC_Datadriven_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PC_Datadriven_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

