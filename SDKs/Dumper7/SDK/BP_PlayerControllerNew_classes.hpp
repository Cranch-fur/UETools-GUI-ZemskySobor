#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerControllerNew

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_HUDStates_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerControllerNew.BP_PlayerControllerNew_C
// 0x0030 (0x0888 - 0x0858)
class ABP_PlayerControllerNew_C final : public APlayerController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0858(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_InventoryComponent_C*               BP_InventoryComponent;                             // 0x0860(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractionComponent_C*             BP_InteractionComponent;                           // 0x0868(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Maps;                                              // 0x0870(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         WeaponIndex;                                       // 0x0880(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ChangedArmedState(bool NewArmed);
	void CheckCombatState();
	void ExecuteUbergraph_BP_PlayerControllerNew(int32 EntryPoint);
	void Get_Actor_for_Distance(double* Distance, class AActor** HitActor);
	void GetCameraRotateSensitivity(double* CameraRotateSensitivity);
	void InpActEvt_Block_K2Node_InputActionEvent_10(const struct FKey& Key);
	void InpActEvt_Block_K2Node_InputActionEvent_11(const struct FKey& Key);
	void InpActEvt_HeavyAttack_K2Node_InputActionEvent_12(const struct FKey& Key);
	void InpActEvt_Interact_K2Node_InputActionEvent_4(const struct FKey& Key);
	void InpActEvt_Jump_K2Node_InputActionEvent_6(const struct FKey& Key);
	void InpActEvt_K_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_LightAttack_K2Node_InputActionEvent_13(const struct FKey& Key);
	void InpActEvt_ManualLock_K2Node_InputActionEvent_9(const struct FKey& Key);
	void InpActEvt_PauseMenu_K2Node_InputActionEvent_5(const struct FKey& Key);
	void InpActEvt_QuestLogMenu_K2Node_InputActionEvent_2(const struct FKey& Key);
	void InpActEvt_Sprint_K2Node_InputActionEvent_7(const struct FKey& Key);
	void InpActEvt_Sprint_K2Node_InputActionEvent_8(const struct FKey& Key);
	void InpActEvt_stance_attack_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_stance_balance_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_SwitchLevel_K2Node_InputActionEvent_14(const struct FKey& Key);
	void InpActEvt_TabMenu_K2Node_InputActionEvent_3(const struct FKey& Key);
	void InpActEvt_Zero_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpAxisEvt_LookUp_K2Node_InputAxisEvent_1(float AxisValue);
	void InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53(float AxisValue);
	void InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79(float AxisValue);
	void InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90(float AxisValue);
	void InpAxisEvt_Turn_K2Node_InputAxisEvent_0(float AxisValue);
	void InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38(float AxisValue);
	void LoadPauseMenu(bool IsPaused);
	void LoadTabMenu(bool Show);
	void OnSee(class AActor* Other);
	void Open_Dialog_for_Actor_Wish_BP_Dialog_Component();
	void ReceiveBeginPlay();
	void UpdatePawnTargets(double Radius);
	void UpdateTargets(double CombatRadius);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_PlayerControllerNew_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_PlayerControllerNew_C")
	}
	static class ABP_PlayerControllerNew_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PlayerControllerNew_C>();
	}
};
DUMPER7_ASSERTS_ABP_PlayerControllerNew_C;

}

