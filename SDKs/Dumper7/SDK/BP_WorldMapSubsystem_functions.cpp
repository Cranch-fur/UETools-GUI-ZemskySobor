#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WorldMapSubsystem

#include "Basic.hpp"

#include "BP_WorldMapSubsystem_classes.hpp"
#include "BP_WorldMapSubsystem_parameters.hpp"


namespace SDK
{

// Function BP_WorldMapSubsystem.BP_WorldMapSubsystem_C.AddMapComponentMarker
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_MapComponent_C*               Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_WorldMapSubsystem_C::AddMapComponentMarker(class UAC_MapComponent_C* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldMapSubsystem_C", "AddMapComponentMarker");

	Params::BP_WorldMapSubsystem_C_AddMapComponentMarker Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WorldMapSubsystem.BP_WorldMapSubsystem_C.BP_Initialize
// (Event, Public, BlueprintEvent)

void UBP_WorldMapSubsystem_C::BP_Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldMapSubsystem_C", "BP_Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WorldMapSubsystem.BP_WorldMapSubsystem_C.Convert Location World to Map
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   WorldLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       MapLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WorldMapSubsystem_C::Convert_Location_World_to_Map(const struct FVector& WorldLocation, struct FVector2D* MapLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldMapSubsystem_C", "Convert Location World to Map");

	Params::BP_WorldMapSubsystem_C_Convert_Location_World_to_Map Parms{};

	Parms.WorldLocation = std::move(WorldLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (MapLocation != nullptr)
		*MapLocation = std::move(Parms.MapLocation);
}


// Function BP_WorldMapSubsystem.BP_WorldMapSubsystem_C.ExecuteUbergraph_BP_WorldMapSubsystem
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WorldMapSubsystem_C::ExecuteUbergraph_BP_WorldMapSubsystem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldMapSubsystem_C", "ExecuteUbergraph_BP_WorldMapSubsystem");

	Params::BP_WorldMapSubsystem_C_ExecuteUbergraph_BP_WorldMapSubsystem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WorldMapSubsystem.BP_WorldMapSubsystem_C.FindMapMarker
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FStr_MapMarker>&          MarkersArray                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FStr_MapMarker&            ItemToSearch                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WorldMapSubsystem_C::FindMapMarker(TArray<struct FStr_MapMarker>& MarkersArray, const struct FStr_MapMarker& ItemToSearch, bool* Result, int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldMapSubsystem_C", "FindMapMarker");

	Params::BP_WorldMapSubsystem_C_FindMapMarker Parms{};

	Parms.MarkersArray = std::move(MarkersArray);
	Parms.ItemToSearch = std::move(ItemToSearch);

	UObject::ProcessEvent(Func, &Parms);

	MarkersArray = std::move(Parms.MarkersArray);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function BP_WorldMapSubsystem.BP_WorldMapSubsystem_C.FindMarkersByTag
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// TArray<struct FStr_MapMarker>*          Markers                                                (Parm, OutParm)

void UBP_WorldMapSubsystem_C::FindMarkersByTag(const struct FGameplayTag& Tag, TArray<struct FStr_MapMarker>* Markers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldMapSubsystem_C", "FindMarkersByTag");

	Params::BP_WorldMapSubsystem_C_FindMarkersByTag Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);

	if (Markers != nullptr)
		*Markers = std::move(Parms.Markers);
}


// Function BP_WorldMapSubsystem.BP_WorldMapSubsystem_C.GetUpdatedCompassMarkers
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FStr_MapMarker>*          MapMarkers                                             (Parm, OutParm)

void UBP_WorldMapSubsystem_C::GetUpdatedCompassMarkers(TArray<struct FStr_MapMarker>* MapMarkers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldMapSubsystem_C", "GetUpdatedCompassMarkers");

	Params::BP_WorldMapSubsystem_C_GetUpdatedCompassMarkers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MapMarkers != nullptr)
		*MapMarkers = std::move(Parms.MapMarkers);
}


// Function BP_WorldMapSubsystem.BP_WorldMapSubsystem_C.GetUpdatedMapMarkers
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FStr_MapMarker>*          Markers                                                (Parm, OutParm)

void UBP_WorldMapSubsystem_C::GetUpdatedMapMarkers(TArray<struct FStr_MapMarker>* Markers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldMapSubsystem_C", "GetUpdatedMapMarkers");

	Params::BP_WorldMapSubsystem_C_GetUpdatedMapMarkers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Markers != nullptr)
		*Markers = std::move(Parms.Markers);
}


// Function BP_WorldMapSubsystem.BP_WorldMapSubsystem_C.HandleQuestMarkerUpdate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuestMarker*                     UpdatedMarker                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// EQuestMarkerState                       NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WorldMapSubsystem_C::HandleQuestMarkerUpdate(class UQuestMarker* UpdatedMarker, EQuestMarkerState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldMapSubsystem_C", "HandleQuestMarkerUpdate");

	Params::BP_WorldMapSubsystem_C_HandleQuestMarkerUpdate Parms{};

	Parms.UpdatedMarker = UpdatedMarker;
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WorldMapSubsystem.BP_WorldMapSubsystem_C.OnMapChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWorldMapBorderActor*             NewMap                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_WorldMapSubsystem_C::OnMapChanged(class AWorldMapBorderActor* NewMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldMapSubsystem_C", "OnMapChanged");

	Params::BP_WorldMapSubsystem_C_OnMapChanged Parms{};

	Parms.NewMap = NewMap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WorldMapSubsystem.BP_WorldMapSubsystem_C.OnPostLoad
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const bool                              SaveLoadResult                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WorldMapSubsystem_C::OnPostLoad(const bool SaveLoadResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldMapSubsystem_C", "OnPostLoad");

	Params::BP_WorldMapSubsystem_C_OnPostLoad Parms{};

	Parms.SaveLoadResult = SaveLoadResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WorldMapSubsystem.BP_WorldMapSubsystem_C.RemoveMapComponentMarker
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_MapComponent_C*               InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_WorldMapSubsystem_C::RemoveMapComponentMarker(class UAC_MapComponent_C* InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldMapSubsystem_C", "RemoveMapComponentMarker");

	Params::BP_WorldMapSubsystem_C_RemoveMapComponentMarker Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WorldMapSubsystem.BP_WorldMapSubsystem_C.SpawnCursor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AMap_Cursor_C**                   Cursor                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_WorldMapSubsystem_C::SpawnCursor(const struct FTransform& SpawnTransform, class AMap_Cursor_C** Cursor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldMapSubsystem_C", "SpawnCursor");

	Params::BP_WorldMapSubsystem_C_SpawnCursor Parms{};

	Parms.SpawnTransform = std::move(SpawnTransform);

	UObject::ProcessEvent(Func, &Parms);

	if (Cursor != nullptr)
		*Cursor = Parms.Cursor;
}


// Function BP_WorldMapSubsystem.BP_WorldMapSubsystem_C.SpawnMapDot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WorldMapSubsystem_C::SpawnMapDot(const struct FTransform& SpawnTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldMapSubsystem_C", "SpawnMapDot");

	Params::BP_WorldMapSubsystem_C_SpawnMapDot Parms{};

	Parms.SpawnTransform = std::move(SpawnTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WorldMapSubsystem.BP_WorldMapSubsystem_C.TeleportPlayerToCurrentEduPoint
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_WorldMapSubsystem_C::TeleportPlayerToCurrentEduPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldMapSubsystem_C", "TeleportPlayerToCurrentEduPoint");

	UObject::ProcessEvent(Func, nullptr);
}

}

