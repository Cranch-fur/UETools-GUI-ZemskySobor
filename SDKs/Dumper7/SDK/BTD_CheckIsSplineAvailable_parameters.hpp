#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_CheckIsSplineAvailable

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTD_CheckIsSplineAvailable.BTD_CheckIsSplineAvailable_C.ExecuteUbergraph_BTD_CheckIsSplineAvailable
// 0x0068 (0x0068 - 0x0000)
struct BTD_CheckIsSplineAvailable_C_ExecuteUbergraph_BTD_CheckIsSplineAvailable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AAIController* OwnerController, class ASplineActor* CurrentSplineActor)> K2Node_CreateDelegate_OutputDelegate; // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AAIController* OwnerController, class ASplineActor* CurrentSplineActor)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_CustomEvent_OwnerController_1;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASplineActor*                           K2Node_CustomEvent_CurrentSplineActor_1;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USmutaSplineMovementComponent*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSplineSetted_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_CustomEvent_OwnerController;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASplineActor*                           K2Node_CustomEvent_CurrentSplineActor;             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BTD_CheckIsSplineAvailable_C_ExecuteUbergraph_BTD_CheckIsSplineAvailable;

// Function BTD_CheckIsSplineAvailable.BTD_CheckIsSplineAvailable_C.OnSplineFinished
// 0x0010 (0x0010 - 0x0000)
struct BTD_CheckIsSplineAvailable_C_OnSplineFinished final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASplineActor*                           CurrentSplineActor;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BTD_CheckIsSplineAvailable_C_OnSplineFinished;

// Function BTD_CheckIsSplineAvailable.BTD_CheckIsSplineAvailable_C.OnSplineStarted
// 0x0010 (0x0010 - 0x0000)
struct BTD_CheckIsSplineAvailable_C_OnSplineStarted final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASplineActor*                           CurrentSplineActor;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BTD_CheckIsSplineAvailable_C_OnSplineStarted;

// Function BTD_CheckIsSplineAvailable.BTD_CheckIsSplineAvailable_C.PerformConditionCheckAI
// 0x0018 (0x0018 - 0x0000)
struct BTD_CheckIsSplineAvailable_C_PerformConditionCheckAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BTD_CheckIsSplineAvailable_C_PerformConditionCheckAI;

// Function BTD_CheckIsSplineAvailable.BTD_CheckIsSplineAvailable_C.ReceiveExecutionStartAI
// 0x0010 (0x0010 - 0x0000)
struct BTD_CheckIsSplineAvailable_C_ReceiveExecutionStartAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BTD_CheckIsSplineAvailable_C_ReceiveExecutionStartAI;

}

