#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_SubscribeToTags

#include "Basic.hpp"

#include "BTS_SubscribeToTags_classes.hpp"
#include "BTS_SubscribeToTags_parameters.hpp"


namespace SDK
{

// Function BTS_SubscribeToTags.BTS_SubscribeToTags_C.Change State
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              ActionTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bExist                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_SubscribeToTags_C::Change_State(const struct FGameplayTag& ActionTag, bool bExist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_SubscribeToTags_C", "Change State");

	Params::BTS_SubscribeToTags_C_Change_State Parms{};

	Parms.ActionTag = std::move(ActionTag);
	Parms.bExist = bExist;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_SubscribeToTags.BTS_SubscribeToTags_C.CheckHasBattleTags
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   HasBattleTags                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_SubscribeToTags_C::CheckHasBattleTags(bool* HasBattleTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_SubscribeToTags_C", "CheckHasBattleTags");

	Params::BTS_SubscribeToTags_C_CheckHasBattleTags Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HasBattleTags != nullptr)
		*HasBattleTags = Parms.HasBattleTags;
}


// Function BTS_SubscribeToTags.BTS_SubscribeToTags_C.CheckHasHitTags
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   HasBattleTags                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_SubscribeToTags_C::CheckHasHitTags(bool* HasBattleTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_SubscribeToTags_C", "CheckHasHitTags");

	Params::BTS_SubscribeToTags_C_CheckHasHitTags Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HasBattleTags != nullptr)
		*HasBattleTags = Parms.HasBattleTags;
}


// Function BTS_SubscribeToTags.BTS_SubscribeToTags_C.ExecuteUbergraph_BTS_SubscribeToTags
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_SubscribeToTags_C::ExecuteUbergraph_BTS_SubscribeToTags(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_SubscribeToTags_C", "ExecuteUbergraph_BTS_SubscribeToTags");

	Params::BTS_SubscribeToTags_C_ExecuteUbergraph_BTS_SubscribeToTags Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_SubscribeToTags.BTS_SubscribeToTags_C.ReceiveActivationAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTS_SubscribeToTags_C::ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_SubscribeToTags_C", "ReceiveActivationAI");

	Params::BTS_SubscribeToTags_C_ReceiveActivationAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_SubscribeToTags.BTS_SubscribeToTags_C.ReceiveTickAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_SubscribeToTags_C::ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_SubscribeToTags_C", "ReceiveTickAI");

	Params::BTS_SubscribeToTags_C_ReceiveTickAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_SubscribeToTags.BTS_SubscribeToTags_C.SetEnemyBattleAction
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              UpdatedTag                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    Exists                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_SubscribeToTags_C::SetEnemyBattleAction(const struct FGameplayTag& UpdatedTag, bool Exists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_SubscribeToTags_C", "SetEnemyBattleAction");

	Params::BTS_SubscribeToTags_C_SetEnemyBattleAction Parms{};

	Parms.UpdatedTag = std::move(UpdatedTag);
	Parms.Exists = Exists;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTS_SubscribeToTags.BTS_SubscribeToTags_C.SetHitType
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              UpdatedTag                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    Exists                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTS_SubscribeToTags_C::SetHitType(const struct FGameplayTag& UpdatedTag, bool Exists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTS_SubscribeToTags_C", "SetHitType");

	Params::BTS_SubscribeToTags_C_SetHitType Parms{};

	Parms.UpdatedTag = std::move(UpdatedTag);
	Parms.Exists = Exists;

	UObject::ProcessEvent(Func, &Parms);
}

}

