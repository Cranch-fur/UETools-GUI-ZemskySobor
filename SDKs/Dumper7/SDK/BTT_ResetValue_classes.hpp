#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_ResetValue

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "EVariablesNPC_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_ResetValue.BTT_ResetValue_C
// 0x0040 (0x00E8 - 0x00A8)
class UBTT_ResetValue_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 BB_Value;                                          // 0x00B0(0x0028)(Edit, BlueprintVisible)
	bool                                          BB_New_Value_;                                     // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVariablesNPC                                 VariableNPC;                                       // 0x00D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ANPC_CH_NewBattleSystem_C*              NPC;                                               // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTT_ResetValue(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BTT_ResetValue_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BTT_ResetValue_C")
	}
	static class UBTT_ResetValue_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_ResetValue_C>();
	}
};
DUMPER7_ASSERTS_UBTT_ResetValue_C;

}

