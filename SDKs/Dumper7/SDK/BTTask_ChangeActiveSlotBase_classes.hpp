#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_ChangeActiveSlotBase

#include "Basic.hpp"

#include "EBattleNPCState_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "InventorySystemModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTTask_ChangeActiveSlotBase.BTTask_ChangeActiveSlotBase_C
// 0x0038 (0x00E0 - 0x00A8)
#pragma pack(push, 0x1)
class alignas(0x08) UBTTask_ChangeActiveSlotBase_C : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AHuman_CH_C*                            As_Human_CH;                                       // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USmutaNPCEquipmentComponent*            Equipment_Component;                               // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Skip_Animations;                                   // 0x00C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            Skip_Arming_Animations_Effect_Handle;              // 0x00C4(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                Ability_System_Component;                          // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EEquipmentSlotType                            New_Pending_Slot;                                  // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFinish_Task_Before_End_Animations;                // 0x00D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAborted;                                        // 0x00DA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTTask_ChangeActiveSlotBase(int32 EntryPoint);
	void Get_New_Pending_Active_Slot(EEquipmentSlotType* NewParam);
	void On_Changing_Slot_Finished();
	void ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void SetDebugAIState(EBattleNPCState BattleState);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BTTask_ChangeActiveSlotBase_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BTTask_ChangeActiveSlotBase_C")
	}
	static class UBTTask_ChangeActiveSlotBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTTask_ChangeActiveSlotBase_C>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_UBTTask_ChangeActiveSlotBase_C;

}

