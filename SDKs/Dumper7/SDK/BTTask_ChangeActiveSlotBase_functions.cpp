#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_ChangeActiveSlotBase

#include "Basic.hpp"

#include "BTTask_ChangeActiveSlotBase_classes.hpp"
#include "BTTask_ChangeActiveSlotBase_parameters.hpp"


namespace SDK
{

// Function BTTask_ChangeActiveSlotBase.BTTask_ChangeActiveSlotBase_C.ExecuteUbergraph_BTTask_ChangeActiveSlotBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTTask_ChangeActiveSlotBase_C::ExecuteUbergraph_BTTask_ChangeActiveSlotBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTTask_ChangeActiveSlotBase_C", "ExecuteUbergraph_BTTask_ChangeActiveSlotBase");

	Params::BTTask_ChangeActiveSlotBase_C_ExecuteUbergraph_BTTask_ChangeActiveSlotBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTTask_ChangeActiveSlotBase.BTTask_ChangeActiveSlotBase_C.Get New Pending Active Slot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEquipmentSlotType*                     NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTTask_ChangeActiveSlotBase_C::Get_New_Pending_Active_Slot(EEquipmentSlotType* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTTask_ChangeActiveSlotBase_C", "Get New Pending Active Slot");

	Params::BTTask_ChangeActiveSlotBase_C_Get_New_Pending_Active_Slot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BTTask_ChangeActiveSlotBase.BTTask_ChangeActiveSlotBase_C.On Changing Slot Finished
// (BlueprintCallable, BlueprintEvent)

void UBTTask_ChangeActiveSlotBase_C::On_Changing_Slot_Finished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTTask_ChangeActiveSlotBase_C", "On Changing Slot Finished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BTTask_ChangeActiveSlotBase.BTTask_ChangeActiveSlotBase_C.ReceiveAbortAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTTask_ChangeActiveSlotBase_C::ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTTask_ChangeActiveSlotBase_C", "ReceiveAbortAI");

	Params::BTTask_ChangeActiveSlotBase_C_ReceiveAbortAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTTask_ChangeActiveSlotBase.BTTask_ChangeActiveSlotBase_C.ReceiveExecuteAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTTask_ChangeActiveSlotBase_C::ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTTask_ChangeActiveSlotBase_C", "ReceiveExecuteAI");

	Params::BTTask_ChangeActiveSlotBase_C_ReceiveExecuteAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTTask_ChangeActiveSlotBase.BTTask_ChangeActiveSlotBase_C.SetDebugAIState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBattleNPCState                         BattleState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTTask_ChangeActiveSlotBase_C::SetDebugAIState(EBattleNPCState BattleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTTask_ChangeActiveSlotBase_C", "SetDebugAIState");

	Params::BTTask_ChangeActiveSlotBase_C_SetDebugAIState Parms{};

	Parms.BattleState = BattleState;

	UObject::ProcessEvent(Func, &Parms);
}

}

