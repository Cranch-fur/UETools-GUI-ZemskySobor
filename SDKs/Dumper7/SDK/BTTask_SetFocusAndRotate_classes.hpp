#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_SetFocusAndRotate

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Smuta_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTTask_SetFocusAndRotate.BTTask_SetFocusAndRotate_C
// 0x0058 (0x0100 - 0x00A8)
class UBTTask_SetFocusAndRotate_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 BlackboardKey;                                     // 0x00B0(0x0028)(Edit, BlueprintVisible)
	double                                        Precision;                                         // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              WorkStartTime;                                     // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        FallbackFinishTime;                                // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           FinishTimerHandle;                                 // 0x00F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAborted;                                         // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTTask_SetFocusAndRotate(int32 EntryPoint);
	void FinishTask();
	void ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BTTask_SetFocusAndRotate_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BTTask_SetFocusAndRotate_C")
	}
	static class UBTTask_SetFocusAndRotate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTTask_SetFocusAndRotate_C>();
	}
};
DUMPER7_ASSERTS_UBTTask_SetFocusAndRotate_C;

}

