#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharBP_Base

#include "Basic.hpp"

#include "CharBP_Base_classes.hpp"
#include "CharBP_Base_parameters.hpp"


namespace SDK
{

// Function CharBP_Base.CharBP_Base_C.Add time
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double&                                 Time_to_add                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Reset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::Add_time(double& Time_to_add, bool Reset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Add time");

	Params::CharBP_Base_C_Add_time Parms{};

	Parms.Time_to_add = Time_to_add;
	Parms.Reset = Reset;

	UObject::ProcessEvent(Func, &Parms);

	Time_to_add = Parms.Time_to_add;
}


// Function CharBP_Base.CharBP_Base_C.Add_InterObj
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    LookAt                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Rest                                  Rest_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Launch_URL_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACharBP_Base_C::Add_InterObj(class AActor* Item, bool LookAt, E_Rest Rest_0, const class FString& Launch_URL_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Add_InterObj");

	Params::CharBP_Base_C_Add_InterObj Parms{};

	Parms.Item = Item;
	Parms.LookAt = LookAt;
	Parms.Rest_0 = Rest_0;
	Parms.Launch_URL_0 = std::move(Launch_URL_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.Jump check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ACharBP_Base_C::Jump_check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Jump check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::CharBP_Base_C_Jump_check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.Jump check_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::Jump_check_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Jump check_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");

	Params::CharBP_Base_C_Jump_check_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.BndEvt__CharBP_Base_Near Wall check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ACharBP_Base_C::BndEvt__CharBP_Base_Near_Wall_check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "BndEvt__CharBP_Base_Near Wall check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::CharBP_Base_C_BndEvt__CharBP_Base_Near_Wall_check_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.BndEvt__CharBP_Base_Near Wall check_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::BndEvt__CharBP_Base_Near_Wall_check_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "BndEvt__CharBP_Base_Near Wall check_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");

	Params::CharBP_Base_C_BndEvt__CharBP_Base_Near_Wall_check_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.BndEvt__Combat_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ACharBP_Base_C::BndEvt__Combat_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "BndEvt__Combat_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::CharBP_Base_C_BndEvt__Combat_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.BndEvt__InteractBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ACharBP_Base_C::BndEvt__InteractBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "BndEvt__InteractBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");

	Params::CharBP_Base_C_BndEvt__InteractBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.BndEvt__InteractBox_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::BndEvt__InteractBox_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "BndEvt__InteractBox_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");

	Params::CharBP_Base_C_BndEvt__InteractBox_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.BPI_Get_Animation_Info
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 Aim_Alpha                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Aim_Yaw_0                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Aim_Pitch_0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Play_Breathe                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Lean_Drink_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Play_Random_Idle                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Play_Blink_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Play_Ears_Twitch                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Index___Ears_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Index___Idle_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  index___Attack_0                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::BPI_Get_Animation_Info(double* Aim_Alpha, double* Aim_Yaw_0, double* Aim_Pitch_0, double* Play_Breathe, double* Lean_Drink_0, bool* Play_Random_Idle, bool* Play_Blink_0, bool* Play_Ears_Twitch, int32* Index___Ears_0, int32* Index___Idle_0, int32* index___Attack_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "BPI_Get_Animation_Info");

	Params::CharBP_Base_C_BPI_Get_Animation_Info Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Aim_Alpha != nullptr)
		*Aim_Alpha = Parms.Aim_Alpha;

	if (Aim_Yaw_0 != nullptr)
		*Aim_Yaw_0 = Parms.Aim_Yaw_0;

	if (Aim_Pitch_0 != nullptr)
		*Aim_Pitch_0 = Parms.Aim_Pitch_0;

	if (Play_Breathe != nullptr)
		*Play_Breathe = Parms.Play_Breathe;

	if (Lean_Drink_0 != nullptr)
		*Lean_Drink_0 = Parms.Lean_Drink_0;

	if (Play_Random_Idle != nullptr)
		*Play_Random_Idle = Parms.Play_Random_Idle;

	if (Play_Blink_0 != nullptr)
		*Play_Blink_0 = Parms.Play_Blink_0;

	if (Play_Ears_Twitch != nullptr)
		*Play_Ears_Twitch = Parms.Play_Ears_Twitch;

	if (Index___Ears_0 != nullptr)
		*Index___Ears_0 = Parms.Index___Ears_0;

	if (Index___Idle_0 != nullptr)
		*Index___Idle_0 = Parms.Index___Idle_0;

	if (index___Attack_0 != nullptr)
		*index___Attack_0 = Parms.index___Attack_0;
}


// Function CharBP_Base.CharBP_Base_C.BPI_Get_Movement_Info
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 Output_X_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Output_Y_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Play_Rate_0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Turn_Rate_0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Has_Move_Input                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Jump_in_Place_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Go_Jump_0                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Go_Swim_0                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Go_Turn_0                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Go_Fall                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   go_Land_0                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::BPI_Get_Movement_Info(double* Output_X_0, double* Output_Y_0, double* Play_Rate_0, double* Turn_Rate_0, bool* Has_Move_Input, bool* Jump_in_Place_0, bool* Go_Jump_0, bool* Go_Swim_0, bool* Go_Turn_0, bool* Go_Fall, bool* go_Land_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "BPI_Get_Movement_Info");

	Params::CharBP_Base_C_BPI_Get_Movement_Info Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output_X_0 != nullptr)
		*Output_X_0 = Parms.Output_X_0;

	if (Output_Y_0 != nullptr)
		*Output_Y_0 = Parms.Output_Y_0;

	if (Play_Rate_0 != nullptr)
		*Play_Rate_0 = Parms.Play_Rate_0;

	if (Turn_Rate_0 != nullptr)
		*Turn_Rate_0 = Parms.Turn_Rate_0;

	if (Has_Move_Input != nullptr)
		*Has_Move_Input = Parms.Has_Move_Input;

	if (Jump_in_Place_0 != nullptr)
		*Jump_in_Place_0 = Parms.Jump_in_Place_0;

	if (Go_Jump_0 != nullptr)
		*Go_Jump_0 = Parms.Go_Jump_0;

	if (Go_Swim_0 != nullptr)
		*Go_Swim_0 = Parms.Go_Swim_0;

	if (Go_Turn_0 != nullptr)
		*Go_Turn_0 = Parms.Go_Turn_0;

	if (Go_Fall != nullptr)
		*Go_Fall = Parms.Go_Fall;

	if (go_Land_0 != nullptr)
		*go_Land_0 = Parms.go_Land_0;
}


// Function CharBP_Base.CharBP_Base_C.BPI_Get_States
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_MovementStage*                        Movement_Stage                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_MoveType*                             Move_Type                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ControlMode*                          Control_Mode_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BaseAction*                           Base_Action                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Action*                               Action                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Rest*                                 Rest_0                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Damage*                               Damage                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_TurnInPlace*                          Turn                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Aim*                                  Aim                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_AnimBSMode*                           AnimBS_Mode                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::BPI_Get_States(E_MovementStage* Movement_Stage, E_MoveType* Move_Type, E_ControlMode* Control_Mode_0, E_BaseAction* Base_Action, E_Action* Action, E_Rest* Rest_0, E_Damage* Damage, E_TurnInPlace* Turn, E_Aim* Aim, E_AnimBSMode* AnimBS_Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "BPI_Get_States");

	Params::CharBP_Base_C_BPI_Get_States Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Movement_Stage != nullptr)
		*Movement_Stage = Parms.Movement_Stage;

	if (Move_Type != nullptr)
		*Move_Type = Parms.Move_Type;

	if (Control_Mode_0 != nullptr)
		*Control_Mode_0 = Parms.Control_Mode_0;

	if (Base_Action != nullptr)
		*Base_Action = Parms.Base_Action;

	if (Action != nullptr)
		*Action = Parms.Action;

	if (Rest_0 != nullptr)
		*Rest_0 = Parms.Rest_0;

	if (Damage != nullptr)
		*Damage = Parms.Damage;

	if (Turn != nullptr)
		*Turn = Parms.Turn;

	if (Aim != nullptr)
		*Aim = Parms.Aim;

	if (AnimBS_Mode != nullptr)
		*AnimBS_Mode = Parms.AnimBS_Mode;
}


// Function CharBP_Base.CharBP_Base_C.Change Fur Materal
// (BlueprintCallable, BlueprintEvent)

void ACharBP_Base_C::Change_Fur_Materal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Change Fur Materal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharBP_Base.CharBP_Base_C.Change Slow Motion
// (BlueprintCallable, BlueprintEvent)

void ACharBP_Base_C::Change_Slow_Motion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Change Slow Motion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharBP_Base.CharBP_Base_C.Change Style
// (BlueprintCallable, BlueprintEvent)

void ACharBP_Base_C::Change_Style()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Change Style");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharBP_Base.CharBP_Base_C.Crouch Changed
// (BlueprintCallable, BlueprintEvent)

void ACharBP_Base_C::Crouch_Changed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Crouch Changed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharBP_Base.CharBP_Base_C.Crouch Collisions
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Crouch_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::Crouch_Collisions(bool Crouch_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Crouch Collisions");

	Params::CharBP_Base_C_Crouch_Collisions Parms{};

	Parms.Crouch_0 = Crouch_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.DoJump
// (BlueprintCallable, BlueprintEvent)

void ACharBP_Base_C::DoJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "DoJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharBP_Base.CharBP_Base_C.ExecuteUbergraph_CharBP_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::ExecuteUbergraph_CharBP_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "ExecuteUbergraph_CharBP_Base");

	Params::CharBP_Base_C_ExecuteUbergraph_CharBP_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.Get Random Index without repetitions
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   last_index                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<double>&                         Chances                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32*                                  random_index                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::Get_Random_Index_without_repetitions(int32 last_index, TArray<double>& Chances, int32* random_index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Get Random Index without repetitions");

	Params::CharBP_Base_C_Get_Random_Index_without_repetitions Parms{};

	Parms.last_index = last_index;
	Parms.Chances = std::move(Chances);

	UObject::ProcessEvent(Func, &Parms);

	Chances = std::move(Parms.Chances);

	if (random_index != nullptr)
		*random_index = Parms.random_index;
}


// Function CharBP_Base.CharBP_Base_C.GetMaxHight
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::GetMaxHight(double* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "GetMaxHight");

	Params::CharBP_Base_C_GetMaxHight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_Action_K2Node_InputActionEvent_11
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_Action_K2Node_InputActionEvent_11(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_Action_K2Node_InputActionEvent_11");

	Params::CharBP_Base_C_InpActEvt_Action_K2Node_InputActionEvent_11 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_AnyKey_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_AnyKey_K2Node_InputKeyEvent_1");

	Params::CharBP_Base_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_Attack_K2Node_InputActionEvent_6
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_Attack_K2Node_InputActionEvent_6(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_Attack_K2Node_InputActionEvent_6");

	Params::CharBP_Base_C_InpActEvt_Attack_K2Node_InputActionEvent_6 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_B_K2Node_InputKeyEvent_9
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_B_K2Node_InputKeyEvent_9(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_B_K2Node_InputKeyEvent_9");

	Params::CharBP_Base_C_InpActEvt_B_K2Node_InputKeyEvent_9 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_Backslash_K2Node_InputKeyEvent_12
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_Backslash_K2Node_InputKeyEvent_12(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_Backslash_K2Node_InputKeyEvent_12");

	Params::CharBP_Base_C_InpActEvt_Backslash_K2Node_InputKeyEvent_12 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_Crouch_K2Node_InputActionEvent_3
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_Crouch_K2Node_InputActionEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_Crouch_K2Node_InputActionEvent_3");

	Params::CharBP_Base_C_InpActEvt_Crouch_K2Node_InputActionEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_F_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_F_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_F_K2Node_InputKeyEvent_0");

	Params::CharBP_Base_C_InpActEvt_F_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_H_K2Node_InputKeyEvent_8
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_H_K2Node_InputKeyEvent_8(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_H_K2Node_InputKeyEvent_8");

	Params::CharBP_Base_C_InpActEvt_H_K2Node_InputKeyEvent_8 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_I_K2Node_InputKeyEvent_5
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_I_K2Node_InputKeyEvent_5(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_I_K2Node_InputKeyEvent_5");

	Params::CharBP_Base_C_InpActEvt_I_K2Node_InputKeyEvent_5 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_Jump_K2Node_InputActionEvent_4
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_Jump_K2Node_InputActionEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_Jump_K2Node_InputActionEvent_4");

	Params::CharBP_Base_C_InpActEvt_Jump_K2Node_InputActionEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_M_K2Node_InputKeyEvent_3
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_M_K2Node_InputKeyEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_M_K2Node_InputKeyEvent_3");

	Params::CharBP_Base_C_InpActEvt_M_K2Node_InputKeyEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_mode: Aim_K2Node_InputActionEvent_7
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_mode__Aim_K2Node_InputActionEvent_7(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_mode: Aim_K2Node_InputActionEvent_7");

	Params::CharBP_Base_C_InpActEvt_mode__Aim_K2Node_InputActionEvent_7 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_mode: Control_K2Node_InputActionEvent_8
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_mode__Control_K2Node_InputActionEvent_8(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_mode: Control_K2Node_InputActionEvent_8");

	Params::CharBP_Base_C_InpActEvt_mode__Control_K2Node_InputActionEvent_8 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_13
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_13(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_13");

	Params::CharBP_Base_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_13 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_14
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_14(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_14");

	Params::CharBP_Base_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_14 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_PageDown_K2Node_InputKeyEvent_11
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_PageDown_K2Node_InputKeyEvent_11(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_PageDown_K2Node_InputKeyEvent_11");

	Params::CharBP_Base_C_InpActEvt_PageDown_K2Node_InputKeyEvent_11 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_PageUp_K2Node_InputKeyEvent_10
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_PageUp_K2Node_InputKeyEvent_10(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_PageUp_K2Node_InputKeyEvent_10");

	Params::CharBP_Base_C_InpActEvt_PageUp_K2Node_InputKeyEvent_10 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_Ragdoll_K2Node_InputActionEvent_5
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_Ragdoll_K2Node_InputActionEvent_5(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_Ragdoll_K2Node_InputActionEvent_5");

	Params::CharBP_Base_C_InpActEvt_Ragdoll_K2Node_InputActionEvent_5 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_Run_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_Run_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_Run_K2Node_InputActionEvent_0");

	Params::CharBP_Base_C_InpActEvt_Run_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_Run_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_Run_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_Run_K2Node_InputActionEvent_1");

	Params::CharBP_Base_C_InpActEvt_Run_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_Slow Motion_K2Node_InputActionEvent_10
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_Slow_Motion_K2Node_InputActionEvent_10(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_Slow Motion_K2Node_InputActionEvent_10");

	Params::CharBP_Base_C_InpActEvt_Slow_Motion_K2Node_InputActionEvent_10 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_T_K2Node_InputKeyEvent_2
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_T_K2Node_InputKeyEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_T_K2Node_InputKeyEvent_2");

	Params::CharBP_Base_C_InpActEvt_T_K2Node_InputKeyEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_Tab_K2Node_InputKeyEvent_4
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_Tab_K2Node_InputKeyEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_Tab_K2Node_InputKeyEvent_4");

	Params::CharBP_Base_C_InpActEvt_Tab_K2Node_InputKeyEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_Turn In Place_K2Node_InputActionEvent_9
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_Turn_In_Place_K2Node_InputActionEvent_9(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_Turn In Place_K2Node_InputActionEvent_9");

	Params::CharBP_Base_C_InpActEvt_Turn_In_Place_K2Node_InputActionEvent_9 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_U_K2Node_InputKeyEvent_7
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_U_K2Node_InputKeyEvent_7(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_U_K2Node_InputKeyEvent_7");

	Params::CharBP_Base_C_InpActEvt_U_K2Node_InputKeyEvent_7 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_V_K2Node_InputKeyEvent_15
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_V_K2Node_InputKeyEvent_15(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_V_K2Node_InputKeyEvent_15");

	Params::CharBP_Base_C_InpActEvt_V_K2Node_InputKeyEvent_15 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_Walk_K2Node_InputActionEvent_2
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_Walk_K2Node_InputActionEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_Walk_K2Node_InputActionEvent_2");

	Params::CharBP_Base_C_InpActEvt_Walk_K2Node_InputActionEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpActEvt_Y_K2Node_InputKeyEvent_6
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACharBP_Base_C::InpActEvt_Y_K2Node_InputKeyEvent_6(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpActEvt_Y_K2Node_InputKeyEvent_6");

	Params::CharBP_Base_C_InpActEvt_Y_K2Node_InputKeyEvent_6 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_40
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::InpAxisEvt_LookUp_K2Node_InputAxisEvent_40(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpAxisEvt_LookUp_K2Node_InputAxisEvent_40");

	Params::CharBP_Base_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79");

	Params::CharBP_Base_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90");

	Params::CharBP_Base_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_47
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::InpAxisEvt_Turn_K2Node_InputAxisEvent_47(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "InpAxisEvt_Turn_K2Node_InputAxisEvent_47");

	Params::CharBP_Base_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.Input: Change Aim
// (BlueprintCallable, BlueprintEvent)

void ACharBP_Base_C::Input__Change_Aim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Input: Change Aim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharBP_Base.CharBP_Base_C.Input: Turn
// (BlueprintCallable, BlueprintEvent)

void ACharBP_Base_C::Input__Turn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Input: Turn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharBP_Base.CharBP_Base_C.Interp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InterpSpeed                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double&                                 Current                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::Interp(double InterpSpeed, double& Current, double Target, double* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Interp");

	Params::CharBP_Base_C_Interp Parms{};

	Parms.InterpSpeed = InterpSpeed;
	Parms.Current = Current;
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	Current = Parms.Current;

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function CharBP_Base.CharBP_Base_C.ReceiveAnyDamage
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UDamageType*                DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "ReceiveAnyDamage");

	Params::CharBP_Base_C_ReceiveAnyDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ACharBP_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharBP_Base.CharBP_Base_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "ReceiveTick");

	Params::CharBP_Base_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.Remove_InterObj
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::Remove_InterObj(class AActor* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Remove_InterObj");

	Params::CharBP_Base_C_Remove_InterObj Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.Reset Collisions
// (BlueprintCallable, BlueprintEvent)

void ACharBP_Base_C::Reset_Collisions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Reset Collisions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharBP_Base.CharBP_Base_C.Reset Random Idle
// (BlueprintCallable, BlueprintEvent)

void ACharBP_Base_C::Reset_Random_Idle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Reset Random Idle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharBP_Base.CharBP_Base_C.Reset Wet
// (BlueprintCallable, BlueprintEvent)

void ACharBP_Base_C::Reset_Wet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Reset Wet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharBP_Base.CharBP_Base_C.Set Collisions
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::Set_Collisions(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Set Collisions");

	Params::CharBP_Base_C_Set_Collisions Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.Set Wet
// (BlueprintCallable, BlueprintEvent)

void ACharBP_Base_C::Set_Wet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Set Wet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharBP_Base.CharBP_Base_C.SetLookAtTargetInFront
// (Public, BlueprintCallable, BlueprintEvent)

void ACharBP_Base_C::SetLookAtTargetInFront()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "SetLookAtTargetInFront");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharBP_Base.CharBP_Base_C.Start Attack
// (BlueprintCallable, BlueprintEvent)

void ACharBP_Base_C::Start_Attack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Start Attack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharBP_Base.CharBP_Base_C.Start Ragdoll
// (BlueprintCallable, BlueprintEvent)

void ACharBP_Base_C::Start_Ragdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Start Ragdoll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharBP_Base.CharBP_Base_C.Swich
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool&                                   A                                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::Swich(bool& A)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Swich");

	Params::CharBP_Base_C_Swich Parms{};

	Parms.A = A;

	UObject::ProcessEvent(Func, &Parms);

	A = Parms.A;
}


// Function CharBP_Base.CharBP_Base_C.Take Damage logic
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Damage_Causer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::Take_Damage_logic(class AActor* Damage_Causer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Take Damage logic");

	Params::CharBP_Base_C_Take_Damage_logic Parms{};

	Parms.Damage_Causer = Damage_Causer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharBP_Base.CharBP_Base_C.Trace_InFrontOfPlayer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<EObjectTypeQuery>&               Objects                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// double                                  Dis_F                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Dis_Z_start                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Dis_Z_end                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShowDebug_Always                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              Trase_Color                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDrawDebugTrace                         DrawDebugType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ACharBP_Base_C::Trace_InFrontOfPlayer(TArray<EObjectTypeQuery>& Objects, double Dis_F, double Dis_Z_start, double Dis_Z_end, bool ShowDebug_Always, const struct FLinearColor& Trase_Color, EDrawDebugTrace DrawDebugType, double* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "Trace_InFrontOfPlayer");

	Params::CharBP_Base_C_Trace_InFrontOfPlayer Parms{};

	Parms.Objects = std::move(Objects);
	Parms.Dis_F = Dis_F;
	Parms.Dis_Z_start = Dis_Z_start;
	Parms.Dis_Z_end = Dis_Z_end;
	Parms.ShowDebug_Always = ShowDebug_Always;
	Parms.Trase_Color = std::move(Trase_Color);
	Parms.DrawDebugType = DrawDebugType;

	UObject::ProcessEvent(Func, &Parms);

	Objects = std::move(Parms.Objects);

	if (Distance != nullptr)
		*Distance = Parms.Distance;

	return Parms.ReturnValue;
}


// Function CharBP_Base.CharBP_Base_C.UInput: Action
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Special_Action                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACharBP_Base_C::UInput__Action(bool Special_Action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharBP_Base_C", "UInput: Action");

	Params::CharBP_Base_C_UInput__Action Parms{};

	Parms.Special_Action = Special_Action;

	UObject::ProcessEvent(Func, &Parms);
}

}

