#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CompBP_IK_ANX

#include "Basic.hpp"

#include "E_MovementStage_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_TurnInPlace_structs.hpp"
#include "E_Action_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_MoveType_structs.hpp"
#include "E_Damage_structs.hpp"
#include "E_ControlMode_structs.hpp"
#include "E_BaseAction_structs.hpp"
#include "E_Rest_structs.hpp"
#include "E_Aim_structs.hpp"
#include "E_AnimBSMode_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass CompBP_IK_ANX.CompBP_IK_ANX_C
// 0x0280 (0x0320 - 0x00A0)
class UCompBP_IK_ANX_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ACharBP_Base_C*                         Char_BP;                                           // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FString                                 Name_Hand;                                         // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 Name_Foot;                                         // 0x00C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FVector                                Loc___Hand__R_;                                    // 0x00D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rot___Hand__L_;                                    // 0x00E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Rot___Hand__R_;                                    // 0x0100(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Loc___Foot__L___target_;                           // 0x0118(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Loc___Foot__L_;                                    // 0x0130(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rot___Foot__L_;                                    // 0x0148(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Loc___Foot__R_;                                    // 0x0160(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rot___Foot__R_;                                    // 0x0178(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Loc___Foot__R___target_;                           // 0x0190(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Loc___Hand__L_;                                    // 0x01A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Loc___Chest;                                       // 0x01C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Loc___Pelvis;                                      // 0x01D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Loc___Hand__L___target_;                           // 0x01F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Loc___Hand__R___target_;                           // 0x0208(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          AnimBP_Instance;                                   // 0x0220(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Delta_Time;                                        // 0x0228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable___IK;                                       // 0x0230(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Spline_IK;                                     // 0x0231(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Side_Incline;                                  // 0x0232(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Forward_Incline;                               // 0x0233(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Hand__or_Pastern_;                             // 0x0234(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Foot__or_Hook_;                                // 0x0235(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_236[0x2];                                      // 0x0236(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Trace_Dis_Z_Above;                                 // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Trace_Dis_Z_Below;                                 // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Foot___move_all_Target_IK_down_to;                 // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Hand___move_all_Target_IK_down_to;                 // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Incline_F__multiplier_;                            // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Incline_F___Dis_Difference;                        // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Incline_S__multiplier_;                            // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRotator>                       Rot_Toe;                                           // 0x0270(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        Incline_S__target_;                                // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Incline_F__target_;                                // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spine_Incline_F;                                   // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spine_Incline_S;                                   // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Root_Loc;                                          // 0x02A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IK_Alpha___Foot;                                   // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IK_Alpha___Hand;                                   // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IK_Alpha___Spine;                                  // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Char_Scale_;                                       // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Toe_Rotation;                                  // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Name_Toe;                                          // 0x02E0(0x0010)(Edit, BlueprintVisible)
	double                                        Trace_Dis_Z__Toe_Rotation_;                        // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_User_bone_names;                               // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 User_hand_name;                                    // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 User_foot_name;                                    // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)

public:
	void BPI_Get_Animation_Info(double* Aim_Alpha, double* Aim_Yaw, double* Aim_Pitch, double* Play_Breathe, double* Lean_Drink, bool* Play_Random_Idle, bool* Play_Blink, bool* Play_Ears_Twitch, int32* Index___Ears, int32* Index___Idle, int32* index___Attack);
	void BPI_Get_Movement_Info(double* Output_X, double* Output_Y, double* Play_Rate, double* Turn_Rate, bool* Has_Move_Input, bool* Jump_in_Place, bool* Go_Jump, bool* Go_Swim, bool* Go_Turn, bool* Go_Fall, bool* go_Land);
	void BPI_Get_States(E_MovementStage* Movement_Stage, E_MoveType* Move_Type, E_ControlMode* Control_Mode, E_BaseAction* Base_Action, E_Action* Action, E_Rest* Rest, E_Damage* Damage, E_TurnInPlace* Turn, E_Aim* Aim, E_AnimBSMode* AnimBS_Mode);
	void BPI_IK_Variables(struct FVector* Loc___Hand__L__0, struct FVector* Loc___Hand__R__0, struct FVector* Loc___Foot__L__0, struct FVector* Loc___Foot__R__0, struct FVector* Loc___Pelvis_0, struct FVector* Loc___Chest_0, struct FRotator* Rot___Hand__L__0, struct FRotator* Rot___Hand__R__0, struct FRotator* Rot___Foot__L__0, struct FRotator* Rot___Foot__R__0, double* IK_Alpha___Hand_0, double* IK_Alpha___Foot_0, double* IK_Alpha___Spine_0, double* Spine_Incline_F_0, double* Spine_Incline_S_0);
	void ExecuteUbergraph_CompBP_IK_ANX(int32 EntryPoint);
	void Interp(double InterpSpeed, double& Current, double Target, double* Out);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetFootOffset(class FName IKFootBone, struct FVector& Offset_Loc__target_, struct FVector& Offset_Loc, struct FRotator& Offset_Rot, bool Foot);
	void SetPelvisOffset(struct FVector& CurrentPelvisOffset, const struct FVector& Offset_Loc_L_Target, const struct FVector& Offset_Loc_R_Target);
	void SetToeRot(class FName IKFootBone, const struct FRotator& Offset_Rot, int32 Index_0);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("CompBP_IK_ANX_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CompBP_IK_ANX_C")
	}
	static class UCompBP_IK_ANX_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCompBP_IK_ANX_C>();
	}
};
DUMPER7_ASSERTS_UCompBP_IK_ANX_C;

}

