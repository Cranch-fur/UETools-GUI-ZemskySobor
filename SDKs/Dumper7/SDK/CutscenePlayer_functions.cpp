#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CutscenePlayer

#include "Basic.hpp"

#include "CutscenePlayer_classes.hpp"
#include "CutscenePlayer_parameters.hpp"


namespace SDK
{

// Function CutscenePlayer.CutscenePlayerSubsystem.PlaySequence
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMovieSceneSequencePlaybackSettings&Settings                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    HideUICutScene                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequencePlayer*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULevelSequencePlayer* UCutscenePlayerSubsystem::PlaySequence(class ULevelSequence* LevelSequence, const struct FMovieSceneSequencePlaybackSettings& Settings, bool HideUICutScene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayerSubsystem", "PlaySequence");

	Params::CutscenePlayerSubsystem_PlaySequence Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.Settings = std::move(Settings);
	Parms.HideUICutScene = HideUICutScene;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CutscenePlayer.CutscenePlayerSubsystem.SequencePlayedResponse
// (Final, Native, Protected)

void UCutscenePlayerSubsystem::SequencePlayedResponse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayerSubsystem", "SequencePlayedResponse");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CutscenePlayer.CutscenePlayerSubsystem.SetPaused
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bPaused                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCutscenePlayerSubsystem::SetPaused(bool bPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayerSubsystem", "SetPaused");

	Params::CutscenePlayerSubsystem_SetPaused Parms{};

	Parms.bPaused = bPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CutscenePlayer.CutscenePlayerSubsystem.SkipScene
// (Final, Native, Public, BlueprintCallable)

void UCutscenePlayerSubsystem::SkipScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayerSubsystem", "SkipScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CutscenePlayer.CutscenePlayerSubsystem.StoreSequencePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULevelSequencePlayer*             Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCutscenePlayerSubsystem::StoreSequencePlayer(class ULevelSequencePlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayerSubsystem", "StoreSequencePlayer");

	Params::CutscenePlayerSubsystem_StoreSequencePlayer Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CutscenePlayer.CutscenePlayerSubsystem.GetStoredSequencePlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULevelSequencePlayer*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULevelSequencePlayer* UCutscenePlayerSubsystem::GetStoredSequencePlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayerSubsystem", "GetStoredSequencePlayer");

	Params::CutscenePlayerSubsystem_GetStoredSequencePlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CutscenePlayer.CutscenePlayerSubsystem.IsPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCutscenePlayerSubsystem::IsPlaying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayerSubsystem", "IsPlaying");

	Params::CutscenePlayerSubsystem_IsPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

