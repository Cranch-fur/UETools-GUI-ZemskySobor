#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EasyMultiSave

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum EasyMultiSave.ENextStepType
// NumValues: 0x0003
enum class ENextStepType : uint8
{
	SaveLevel                                = 0,
	FinishSave                               = 1,
	ENextStepType_MAX                        = 2,
};

// Enum EasyMultiSave.EUpdateActorResult
// NumValues: 0x0004
enum class EUpdateActorResult : uint8
{
	RES_Success                              = 0,
	RES_Skip                                 = 1,
	RES_ShouldSpawnNewActor                  = 2,
	RES_MAX                                  = 3,
};

// Enum EasyMultiSave.EDataLoadType
// NumValues: 0x0004
enum class EDataLoadType : uint8
{
	DATA_Level                               = 0,
	DATA_Player                              = 1,
	DATA_Object                              = 2,
	DATA_MAX                                 = 3,
};

// Enum EasyMultiSave.EActorType
// NumValues: 0x0007
enum class EActorType : uint8
{
	AT_Runtime                               = 0,
	AT_Placed                                = 1,
	AT_LevelScript                           = 2,
	AT_Player                                = 3,
	AT_GameObject                            = 4,
	AT_Persistent                            = 5,
	AT_MAX                                   = 6,
};

// Enum EasyMultiSave.ESaveGameMode
// NumValues: 0x0004
enum class ESaveGameMode : uint8
{
	MODE_Player                              = 0,
	MODE_Level                               = 1,
	MODE_All                                 = 2,
	MODE_MAX                                 = 3,
};

// Enum EasyMultiSave.EAsyncCheckType
// NumValues: 0x0004
enum class EAsyncCheckType : uint8
{
	CT_Both                                  = 0,
	CT_Save                                  = 1,
	CT_Load                                  = 2,
	CT_MAX                                   = 3,
};

// Enum EasyMultiSave.ELoadMethod
// NumValues: 0x0004
enum class ELoadMethod : uint8
{
	LM_Default                               = 0,
	LM_Deferred                              = 1,
	LM_Thread                                = 2,
	LM_MAX                                   = 3,
};

// Enum EasyMultiSave.EFileSaveMethod
// NumValues: 0x0003
enum class EFileSaveMethod : uint8
{
	FM_Desktop                               = 0,
	FM_Console                               = 1,
	FM_MAX                                   = 2,
};

// Enum EasyMultiSave.ESaveTypeFlags
// NumValues: 0x0003
enum class ESaveTypeFlags : uint8
{
	SF_Player                                = 0,
	SF_Level                                 = 1,
	SF_MAX                                   = 2,
};

// Enum EasyMultiSave.ELoadTypeFlags
// NumValues: 0x0003
enum class ELoadTypeFlags : uint8
{
	LF_Player                                = 0,
	LF_Level                                 = 1,
	LF_MAX                                   = 2,
};

// Enum EasyMultiSave.EMultiLevelSaveMethod
// NumValues: 0x0005
enum class EMultiLevelSaveMethod : uint8
{
	ML_Disabled                              = 0,
	ML_Normal                                = 1,
	ML_Stream                                = 2,
	ML_Slow                                  = 3,
	ML_MAX                                   = 4,
};

// Enum EasyMultiSave.ECompressionMethod
// NumValues: 0x0003
enum class ECompressionMethod : uint8
{
	Zlib                                     = 0,
	Oodle                                    = 1,
	ECompressionMethod_MAX                   = 2,
};

// ScriptStruct EasyMultiSave.SaveSlotInfo
// 0x0030 (0x0030 - 0x0000)
struct FSaveSlotInfo final
{
public:
	class FString                                 Name;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              Timestamp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Level;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         Players;                                           // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSaveSlotInfo;

// ScriptStruct EasyMultiSave.ComponentSaveData
// 0x0080 (0x0080 - 0x0000)
struct alignas(0x10) FComponentSaveData final
{
public:
	uint8                                         Pad_0[0x80];                                       // 0x0000(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FComponentSaveData;

// ScriptStruct EasyMultiSave.GameObjectSaveData
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FGameObjectSaveData final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGameObjectSaveData;

// ScriptStruct EasyMultiSave.ActorSaveData
// 0x00B0 (0x00B0 - 0x0000)
struct alignas(0x10) FActorSaveData final
{
public:
	uint8                                         Pad_0[0xB0];                                       // 0x0000(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FActorSaveData;

// ScriptStruct EasyMultiSave.LevelScriptSaveData
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FLevelScriptSaveData final
{
public:
	uint8                                         Pad_0[0x28];                                       // 0x0000(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FLevelScriptSaveData;

// ScriptStruct EasyMultiSave.LevelArchive
// 0x0068 (0x0068 - 0x0000)
struct alignas(0x08) FLevelArchive final
{
public:
	uint8                                         Pad_0[0x68];                                       // 0x0000(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FLevelArchive;

// ScriptStruct EasyMultiSave.LevelStackArchive
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x08) FLevelStackArchive final
{
public:
	uint8                                         Pad_0[0x50];                                       // 0x0000(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FLevelStackArchive;

// ScriptStruct EasyMultiSave.MultiLevelStreamingData
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FMultiLevelStreamingData final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMultiLevelStreamingData;

// ScriptStruct EasyMultiSave.PawnSaveData
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x08) FPawnSaveData final
{
public:
	uint8                                         Pad_0[0x50];                                       // 0x0000(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FPawnSaveData;

// ScriptStruct EasyMultiSave.ControllerSaveData
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FControllerSaveData final
{
public:
	uint8                                         Pad_0[0x38];                                       // 0x0000(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FControllerSaveData;

// ScriptStruct EasyMultiSave.PlayerArchive
// 0x00B0 (0x00B0 - 0x0000)
struct alignas(0x08) FPlayerArchive final
{
public:
	uint8                                         Pad_0[0xB0];                                       // 0x0000(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FPlayerArchive;

// ScriptStruct EasyMultiSave.PlayerPositionArchive
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x08) FPlayerPositionArchive final
{
public:
	uint8                                         Pad_0[0x48];                                       // 0x0000(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FPlayerPositionArchive;

// ScriptStruct EasyMultiSave.PlayerStackArchive
// 0x0100 (0x0100 - 0x0000)
struct alignas(0x08) FPlayerStackArchive final
{
public:
	uint8                                         Pad_0[0x100];                                      // 0x0000(0x0100)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FPlayerStackArchive;

}

