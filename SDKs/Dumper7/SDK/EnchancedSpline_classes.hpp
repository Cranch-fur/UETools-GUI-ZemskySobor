#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EnchancedSpline

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "GameplayBehaviorsModule_classes.hpp"
#include "AIModule_classes.hpp"
#include "EnchancedSpline_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "SmartObjectsModule_structs.hpp"
#include "SmartObjectsModule_classes.hpp"


namespace SDK
{

// Class EnchancedSpline.BaseGameplayBehavior
// 0x00D0 (0x0160 - 0x0090)
class UBaseGameplayBehavior : public UGameplayBehavior
{
public:
	uint8                                         Pad_90[0x4];                                       // 0x0090(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bDisableCollision;                                 // 0x0094(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_95[0x1B];                                      // 0x0095(0x001B)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UAbilitySystemComponent> OwnerGAS;                                          // 0x00B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bInAbort;                                          // 0x00B8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimMontage*>                   MaleMontages;                                      // 0x00C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                   FemaleMontages;                                    // 0x00D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& ItemName, class FName Socket, bool bTake)> OnItemGrabbed_Delegate; // 0x00E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bRunNewSmartBehavior;                              // 0x00F0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         HandledItems;                                      // 0x00F8(0x0010)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UAnimMontage*                           ActiveMontage;                                     // 0x0108(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACharacter*                             AvatarRef;                                         // 0x0110(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                 SmartObjectRef;                                    // 0x0118(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CapsuleRadius;                                     // 0x0120(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_124[0x3C];                                     // 0x0124(0x003C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CleanUp();
	void FinishAbortBehavior();
	float GetLoopRange();
	class UAnimMontage* GetRandomMontage(const class USkeletalMeshComponent* Mesh);
	void HandleSmartItem(const class FString& ItemName, class FName SocketName, bool bTake);
	void K2_OnItemGrabbed(const class FString& ItemName, class FName SocketName, bool bTake);
	void K2_RunAbortBehavior();
	void ModifyAvatarCapsule(class ACharacter* Char, bool bReset);
	void OnMontageCompleted(class UAnimMontage* Montage, bool bInterrupted);
	void OnMontageNotifyBegin(class FName NotifyName, const struct FBranchingPointNotifyPayload& BranchingPayload);
	void OnMontageNotifyEnd(class FName NotifyName, const struct FBranchingPointNotifyPayload& BranchingPayload);
	void OnSimpleNotify(const class FString& NotifyName);
	void PlaySmartMontage(class UAnimMontage* InMontage, ESmartMontageSection InSection);
	void ResetAnimInstance();
	void ResetSmartItems();
	void RunSmartBehavior(class ACharacter* InAvatar, class AActor* InSmartOwner);
	void SetMeshCollision(bool bReset);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseGameplayBehavior")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseGameplayBehavior")
	}
	static class UBaseGameplayBehavior* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseGameplayBehavior>();
	}
};
DUMPER7_ASSERTS_UBaseGameplayBehavior;

// Class EnchancedSpline.BaseSmartObject
// 0x00B0 (0x0348 - 0x0298)
class ABaseSmartObject : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   BaseMesh;                                          // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                        RootSceneComponent;                                // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBaseSmartObjectComponent*              SmartObjectComponent;                              // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class ABaseSmartObject>> LinkedSmartObject;                                // 0x02B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C8[0x18];                                     // 0x02C8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class USmartObjectDefinition*                 Definition;                                        // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinTime;                                           // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxTime;                                           // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBillboardComponent*                    BillboardComponent;                                // 0x02F0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                     SlotOffset;                                        // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                     ItemOffset;                                        // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class USmartObjectDefinition*                 ModifiedDefinitionAsset;                           // 0x0318(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 CreatedDefinitionItemName;                         // 0x0320(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 CachedDefinitionPath;                              // 0x0330(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USmutaCompVisualizer*                   VisComp;                                           // 0x0340(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void ApplyMeshOffsets();
	void HandleResetRequest(const class FString& ItemName);
	void ResetDefinitionName();
	void ResetOffsets();

	class ABaseSmartObject* GetLinkedSmartObject(int32 Slot) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseSmartObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseSmartObject")
	}
	static class ABaseSmartObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABaseSmartObject>();
	}
};
DUMPER7_ASSERTS_ABaseSmartObject;

// Class EnchancedSpline.BaseSmartObjectComponent
// 0x0000 (0x02F0 - 0x02F0)
class UBaseSmartObjectComponent final : public USmartObjectComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseSmartObjectComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseSmartObjectComponent")
	}
	static class UBaseSmartObjectComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseSmartObjectComponent>();
	}
};
DUMPER7_ASSERTS_UBaseSmartObjectComponent;

// Class EnchancedSpline.DA_SmartObjectInteractionSettings
// 0x0040 (0x0070 - 0x0030)
class UDA_SmartObjectInteractionSettings final : public UDataAsset
{
public:
	struct FBehaviorSettings                      BehaviorSettings;                                  // 0x0030(0x0040)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DA_SmartObjectInteractionSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DA_SmartObjectInteractionSettings")
	}
	static class UDA_SmartObjectInteractionSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDA_SmartObjectInteractionSettings>();
	}
};
DUMPER7_ASSERTS_UDA_SmartObjectInteractionSettings;

// Class EnchancedSpline.DA_ActionsSettings
// 0x0050 (0x0080 - 0x0030)
class UDA_ActionsSettings final : public UDataAsset
{
public:
	TArray<struct FGameplayTag>                   ActionsTagList;                                    // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bOverrideActionList;                               // 0x0040(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimMontage*>                   ActionsMontageList;                                // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bPlayAnimationsFirst;                              // 0x0058(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  SmartObjectsTags;                                  // 0x0060(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DA_ActionsSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DA_ActionsSettings")
	}
	static class UDA_ActionsSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDA_ActionsSettings>();
	}
};
DUMPER7_ASSERTS_UDA_ActionsSettings;

// Class EnchancedSpline.EnchancedSplineComponent
// 0x0000 (0x0670 - 0x0670)
class UEnchancedSplineComponent final : public USplineComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EnchancedSplineComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EnchancedSplineComponent")
	}
	static class UEnchancedSplineComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnchancedSplineComponent>();
	}
};
DUMPER7_ASSERTS_UEnchancedSplineComponent;

// Class EnchancedSpline.EnchancedSplineMetadata
// 0x0010 (0x0038 - 0x0028)
class UEnchancedSplineMetadata final : public USplineMetadata
{
public:
	TArray<struct FEnchancedSplinePointParams>    PointParams;                                       // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EnchancedSplineMetadata")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EnchancedSplineMetadata")
	}
	static class UEnchancedSplineMetadata* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnchancedSplineMetadata>();
	}
};
DUMPER7_ASSERTS_UEnchancedSplineMetadata;

// Class EnchancedSpline.InteractWithSmartObject
// 0x0100 (0x0130 - 0x0030)
class UInteractWithSmartObject final : public UCancellableAsyncAction
{
public:
	TMulticastInlineDelegate<void()>              OnComplete;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnFail;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x98];                                      // 0x0050(0x0098)(Fixing Size After Last Property [ Dumper-7 ])
	class UBaseGameplayBehavior*                  GameplayBehavior;                                  // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F0[0x40];                                      // 0x00F0(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UInteractWithSmartObject* InteractWithLinkedSmartObject(const class UObject* WorldContextObject, class ACharacter* Character);
	static class UInteractWithSmartObject* InteractWithPreSelectedSmartObject(const class UObject* WorldContextObject, class ACharacter* Character, const struct FSmartObjectSlotHandle& SlotHandle);
	static class UInteractWithSmartObject* InteractWithSplinePointSmartObject(const class UObject* WorldContextObject, class ACharacter* Character, const struct FEnchancedSplinePointParams& Params_0, float SearAreaSize);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InteractWithSmartObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InteractWithSmartObject")
	}
	static class UInteractWithSmartObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInteractWithSmartObject>();
	}
};
DUMPER7_ASSERTS_UInteractWithSmartObject;

// Class EnchancedSpline.MontageGameplayBehavior
// 0x0040 (0x01A0 - 0x0160)
class UMontageGameplayBehavior final : public UBaseGameplayBehavior
{
public:
	uint8                                         Pad_160[0x40];                                     // 0x0160(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MontageGameplayBehavior")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MontageGameplayBehavior")
	}
	static class UMontageGameplayBehavior* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMontageGameplayBehavior>();
	}
};
DUMPER7_ASSERTS_UMontageGameplayBehavior;

// Class EnchancedSpline.MontageSmartObject
// 0x0068 (0x03B0 - 0x0348)
class AMontageSmartObject final : public ABaseSmartObject
{
public:
	int32                                         RepeatCount;                                       // 0x0348(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class USkeleton*, TSoftObjectPtr<class UAnimMontage>> Montage;                              // 0x0350(0x0050)(Edit, DisableEditOnTemplate, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bUseTags;                                          // 0x03A0(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A1[0x3];                                      // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           MontageTag;                                        // 0x03A4(0x0008)(Edit, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MontageSmartObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MontageSmartObject")
	}
	static class AMontageSmartObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMontageSmartObject>();
	}
};
DUMPER7_ASSERTS_AMontageSmartObject;

// Class EnchancedSpline.SharedInteractItem
// 0x0008 (0x02A0 - 0x0298)
class ASharedInteractItem final : public AActor
{
public:
	class UStaticMeshComponent*                   ItemMesh;                                          // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SharedInteractItem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SharedInteractItem")
	}
	static class ASharedInteractItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASharedInteractItem>();
	}
};
DUMPER7_ASSERTS_ASharedInteractItem;

// Class EnchancedSpline.SmartObjectAnimInstance
// 0x0010 (0x0360 - 0x0350)
class USmartObjectAnimInstance final : public UAnimInstance
{
public:
	TWeakObjectPtr<class ACharacter>              CurrentSmartObjectUser;                            // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class USmartObjectHelperComponent> SmartObjectComponent;                          // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class ABaseSmartObject* GetOwningSmartObject();
	class ACharacter* GetSmartObjectUser();
	void InitSmartObjectAnimInstance(class ACharacter* SmartObjectUser);
	void ResetSmartObjectAnimInstance();

	bool IsSmartObjectInUse() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmartObjectAnimInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmartObjectAnimInstance")
	}
	static class USmartObjectAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmartObjectAnimInstance>();
	}
};
DUMPER7_ASSERTS_USmartObjectAnimInstance;

// Class EnchancedSpline.SmartObjectDefinitionExtended
// 0x0000 (0x00E0 - 0x00E0)
class USmartObjectDefinitionExtended final : public USmartObjectDefinition
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmartObjectDefinitionExtended")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmartObjectDefinitionExtended")
	}
	static class USmartObjectDefinitionExtended* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmartObjectDefinitionExtended>();
	}
};
DUMPER7_ASSERTS_USmartObjectDefinitionExtended;

// Class EnchancedSpline.SmartObjectHelperComponent
// 0x0128 (0x01D0 - 0x00A8)
class USmartObjectHelperComponent final : public USmartObjectUserComponent
{
public:
	struct FSmartObjectInteractionSettingsWrapper SmartObjectSettings;                               // 0x00A8(0x0018)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FSmartObjectClaimHandle                CurrentClaimHandle;                                // 0x00C0(0x0020)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_E0[0x20];                                      // 0x00E0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CurrentSlotTransforms;                             // 0x0100(0x0060)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInteractWithSmartObject*               CurrentInteractWithSmartObjectTask;                // 0x0160(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ABaseSmartObject>        NextSmartObject;                                   // 0x0168(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ABaseSmartObject>        CurrentSmartObject;                                // 0x0170(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bSuccess)> OnSmartObjectInteractionFinishedDelegate;          // 0x0178(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AActor* Actor)> OnCurrentSmartObjectRefUpdated;              // 0x0188(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UBehaviorTree*                          DebugBehaviorTree;                                 // 0x0198(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseDebugTreeOnBeginPlay;                          // 0x01A0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1A1[0x17];                                     // 0x01A1(0x0017)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInteractItemContext>           ItemsPool;                                         // 0x01B8(0x0010)(ZeroConstructor, SaveGame, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C8[0x8];                                      // 0x01C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AbortInteraction();
	void GetCurrentActivityTags(struct FGameplayTagContainer* Tags);
	void HandleInteractionFinished(bool bSuccess);
	void K2_StartSmartObjectInteractionFromSpline(const struct FEnchancedSplinePointParams& Params_0, float SearAreaSize);
	void OnSmartObjectInteractionFailed();
	void OnSmartObjectInteractionFinished();
	void SelectAndStartInteractSmartObject();
	void SelectNextSmartObject(struct FSmartObjectSlotHandle* SlotHandle);
	bool SetSmartObjectInstanceValues(const struct FBehaviorSettings& InSettings);
	void SetSmartObjectSplineSettings(class UDA_SmartObjectInteractionSettings* InSettings);
	class ASharedInteractItem* SetupInteractItem(class UStaticMesh* Mesh, class ABaseSmartObject* InstigatorSmartObject, class FName SocketName, EItemLifeTimeMode LifeTimeMode);
	void StartInteractWithSmartObjectsFromConfig();
	void StartSmartObjectInteraction(const struct FSmartObjectSlotHandle& SlotHandle);

	bool IsCurrentlyInteracting() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmartObjectHelperComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmartObjectHelperComponent")
	}
	static class USmartObjectHelperComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmartObjectHelperComponent>();
	}
};
DUMPER7_ASSERTS_USmartObjectHelperComponent;

// Class EnchancedSpline.SmartObjectInterface
// 0x0000 (0x0000 - 0x0000)
class ISmartObjectInterface final
{
public:
	void HandleCollision(bool bReset);
	void ResetItem(const class FString& ItemName);

	void GetLoopTime(float* Min, float* Max) const;
	void GetNotifyData(class FString* ItemName, class FName* SocketName, bool* bNewLogic) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmartObjectInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmartObjectInterface")
	}
	static class ISmartObjectInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<ISmartObjectInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ISmartObjectInterface;

// Class EnchancedSpline.SmartZoneBounds
// 0x0020 (0x02B8 - 0x0298)
class ASmartZoneBounds final : public AActor
{
public:
	struct FGameplayTag                           SmartAreaTag;                                      // 0x0298(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                          BoxCollision;                                      // 0x02A0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                         OverlappedActors;                                  // 0x02A8(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmartZoneBounds")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmartZoneBounds")
	}
	static class ASmartZoneBounds* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASmartZoneBounds>();
	}
};
DUMPER7_ASSERTS_ASmartZoneBounds;

// Class EnchancedSpline.SplineActor
// 0x0020 (0x02B8 - 0x0298)
class ASplineActor final : public AActor
{
public:
	bool                                          bUseDirectPath;                                    // 0x0298(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MovementDelta;                                     // 0x029C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLooped;                                           // 0x02A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnchancedSplineMetadata*               SplineMetadata;                                    // 0x02A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEnchancedSplineComponent*              SplineComponent;                                   // 0x02B0(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class UDA_ActionsSettings* GetActions(int32 PointIndex) const;
	ESplineMovementMode GetMovementMode(int32 PointIndex) const;
	bool GetOverrideMovementMode(int32 PointIndex) const;
	float GetStopTimeAtSplinePoint(int32 PointIndex) const;
	struct FRotator GetTargetRotation(int32 PointIndex) const;
	bool GetUsePointOnce(int32 PointIndex) const;
	bool GetUseTargetRotation(int32 PointIndex) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SplineActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SplineActor")
	}
	static class ASplineActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASplineActor>();
	}
};
DUMPER7_ASSERTS_ASplineActor;

// Class EnchancedSpline.SplineCrowdFollowingComponent
// 0x0000 (0x0318 - 0x0318)
class USplineCrowdFollowingComponent final : public UCrowdFollowingComponent
{
public:
	void OnSmartObjectInteractionFinished(bool bSuccess);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SplineCrowdFollowingComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SplineCrowdFollowingComponent")
	}
	static class USplineCrowdFollowingComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USplineCrowdFollowingComponent>();
	}
};
DUMPER7_ASSERTS_USplineCrowdFollowingComponent;

// Class EnchancedSpline.SplineMovementComponent
// 0x0140 (0x01E0 - 0x00A0)
class USplineMovementComponent : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(class AAIController* OwnerController, class ASplineActor* CurrentSplineActor)> OnSplineMovementStarted; // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AAIController* OwnerController, class ASplineActor* CurrentSplineActor)> OnSplineMovementStopped; // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AAIController* OwnerController, class ASplineActor* CurrentSplineActor)> OnSplineMovementFinished; // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AAIController* OwnerController, class ASplineActor* CurrentSplineActor, int32 PointIndex)> OnSplinePointReached; // 0x00D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ASplineActor>            CurrentSpline;                                     // 0x00E0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, SaveGame, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bStartSplineOnBeginPlay;                           // 0x0108(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NextSplinePointIndex;                              // 0x010C(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_110[0x4];                                      // 0x0110(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bCurrentlyOnSpline;                                // 0x0114(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_115[0xCB];                                     // 0x0115(0x00CB)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	TArray<struct FVector> GetSplinePath(int32* LastRoutePoint);
	bool IsLastPoint();
	void PauseSplineMovement();
	void ResetSplineMovementDirection();
	void ReturnToSpline(bool bFindClosestPoint);
	void SaveSplineMovementDirection(const struct FVector& Direction);
	void StartSplineMovement(class ASplineActor* SplineActor, bool bFindClosestPoint, bool ResetCurrentPoint);
	void StopSplineMovement(bool bResetSpline, bool bAborted);
	void UpdateMovementSpeed(const struct FEnchancedSplinePointParams& PointParams);

	bool GetCurrentPointMetaData(struct FEnchancedSplinePointParams* PointParams) const;
	bool GetNextPointMetaData(struct FEnchancedSplinePointParams* PointParams) const;
	struct FVector GetNextPointWorldLocation(bool* bValid) const;
	bool GetPointMetadataForIndex(int32 PointIndex, struct FEnchancedSplinePointParams* PointParams) const;
	bool IsCurrentlyOnSpline() const;
	bool IsSplineAvailable() const;
	bool IsSplineSetted() const;
	bool IsTargetPointReached() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SplineMovementComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SplineMovementComponent")
	}
	static class USplineMovementComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USplineMovementComponent>();
	}
};
DUMPER7_ASSERTS_USplineMovementComponent;

// Class EnchancedSpline.SplinePointAsyncAction
// 0x00B8 (0x00E8 - 0x0030)
class USplinePointAsyncAction final : public UCancellableAsyncAction
{
public:
	TMulticastInlineDelegate<void()>              OnComplete;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnFail;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x98];                                      // 0x0050(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USplinePointAsyncAction* SplinePointAsyncAction(const class UObject* WorldContextObject, class ACharacter* Character, const struct FEnchancedSplinePointParams& Params_0);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SplinePointAsyncAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SplinePointAsyncAction")
	}
	static class USplinePointAsyncAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<USplinePointAsyncAction>();
	}
};
DUMPER7_ASSERTS_USplinePointAsyncAction;

// Class EnchancedSpline.SplineUtilityFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class USplineUtilityFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SplineUtilityFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SplineUtilityFunctionLibrary")
	}
	static class USplineUtilityFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<USplineUtilityFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_USplineUtilityFunctionLibrary;

}

