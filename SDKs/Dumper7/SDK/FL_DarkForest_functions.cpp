#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FL_DarkForest

#include "Basic.hpp"

#include "FL_DarkForest_classes.hpp"
#include "FL_DarkForest_parameters.hpp"


namespace SDK
{

// Function FL_DarkForest.FL_DarkForest_C.Add New Article to Codex
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ArticleId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::Add_New_Article_to_Codex(class FName ArticleId, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "Add New Article to Codex");

	Params::FL_DarkForest_C_Add_New_Article_to_Codex Parms{};

	Parms.ArticleId = ArticleId;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_DarkForest.FL_DarkForest_C.Add Status On Character HUD
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBuff                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       StatusIcon                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  EndTime                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UWBP_StatusTest_C*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWBP_StatusTest_C* UFL_DarkForest_C::Add_Status_On_Character_HUD(bool IsBuff, class UTexture2D* StatusIcon, double StartTime, double EndTime, class UObject* __WorldContext, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "Add Status On Character HUD");

	Params::FL_DarkForest_C_Add_Status_On_Character_HUD Parms{};

	Parms.IsBuff = IsBuff;
	Parms.StatusIcon = StatusIcon;
	Parms.StartTime = StartTime;
	Parms.EndTime = EndTime;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	return Parms.ReturnValue;
}


// Function FL_DarkForest.FL_DarkForest_C.ClearCharacterEffects
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAbilitySystemComponent*          AbilityComponent                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::ClearCharacterEffects(class UAbilitySystemComponent* AbilityComponent, class ACharacter* Character, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "ClearCharacterEffects");

	Params::FL_DarkForest_C_ClearCharacterEffects Parms{};

	Parms.AbilityComponent = AbilityComponent;
	Parms.Character = Character;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_DarkForest.FL_DarkForest_C.DayNightFade
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Today                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InstantFade                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::DayNightFade(bool Today, bool InstantFade, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "DayNightFade");

	Params::FL_DarkForest_C_DayNightFade Parms{};

	Parms.Today = Today;
	Parms.InstantFade = InstantFade;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_DarkForest.FL_DarkForest_C.DayNightFadeSkip
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::DayNightFadeSkip(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "DayNightFadeSkip");

	Params::FL_DarkForest_C_DayNightFadeSkip Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_DarkForest.FL_DarkForest_C.End2DCutscene
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::End2DCutscene(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "End2DCutscene");

	Params::FL_DarkForest_C_End2DCutscene Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_DarkForest.FL_DarkForest_C.FL Dark Forest Get Day Night Controller
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_DayNightController_C**        DayNightController                                     (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::FL_Dark_Forest_Get_Day_Night_Controller(class UObject* __WorldContext, class ABP_DayNightController_C** DayNightController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "FL Dark Forest Get Day Night Controller");

	Params::FL_DarkForest_C_FL_Dark_Forest_Get_Day_Night_Controller Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (DayNightController != nullptr)
		*DayNightController = Parms.DayNightController;
}


// Function FL_DarkForest.FL_DarkForest_C.FL_DarkForest_itsNight
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Night                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::FL_DarkForest_itsNight(class UObject* __WorldContext, bool* Night)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "FL_DarkForest_itsNight");

	Params::FL_DarkForest_C_FL_DarkForest_itsNight Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Night != nullptr)
		*Night = Parms.Night;
}


// Function FL_DarkForest.FL_DarkForest_C.FLDark Forest Fade
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ShowTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DirectFadeIn                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UUI_fade_C*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UUI_fade_C* UFL_DarkForest_C::FLDark_Forest_Fade(double ShowTime, bool DirectFadeIn, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "FLDark Forest Fade");

	Params::FL_DarkForest_C_FLDark_Forest_Fade Parms{};

	Parms.ShowTime = ShowTime;
	Parms.DirectFadeIn = DirectFadeIn;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FL_DarkForest.FL_DarkForest_C.FLDarkForestGetCurrentBuildVersion
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            Build_Version                                          (Parm, OutParm)

void UFL_DarkForest_C::FLDarkForestGetCurrentBuildVersion(class UObject* __WorldContext, class FText* Build_Version)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "FLDarkForestGetCurrentBuildVersion");

	Params::FL_DarkForest_C_FLDarkForestGetCurrentBuildVersion Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Build_Version != nullptr)
		*Build_Version = std::move(Parms.Build_Version);
}


// Function FL_DarkForest.FL_DarkForest_C.FLDarkForestZoneNotifile
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::FLDarkForestZoneNotifile(const class FText& Name_0, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "FLDarkForestZoneNotifile");

	Params::FL_DarkForest_C_FLDarkForestZoneNotifile Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_DarkForest.FL_DarkForest_C.Get Actor Actions Asset
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UActionDataAsset**                ActionsDA                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::Get_Actor_Actions_Asset(class AActor* Actor, class UObject* __WorldContext, class UActionDataAsset** ActionsDA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "Get Actor Actions Asset");

	Params::FL_DarkForest_C_Get_Actor_Actions_Asset Parms{};

	Parms.Actor = Actor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ActionsDA != nullptr)
		*ActionsDA = Parms.ActionsDA;
}


// Function FL_DarkForest.FL_DarkForest_C.Get Actor Is Hostile To Player
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Test_Actor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   bIsHostile                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::Get_Actor_Is_Hostile_To_Player(class AActor* Test_Actor, class UObject* __WorldContext, bool* bIsHostile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "Get Actor Is Hostile To Player");

	Params::FL_DarkForest_C_Get_Actor_Is_Hostile_To_Player Parms{};

	Parms.Test_Actor = Test_Actor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bIsHostile != nullptr)
		*bIsHostile = Parms.bIsHostile;
}


// Function FL_DarkForest.FL_DarkForest_C.GetPlayerXP
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32*                                  Current_XP                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  CurrentLevel                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  XP_for_next_level                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::GetPlayerXP(class UObject* __WorldContext, int32* Current_XP, int32* CurrentLevel, int32* XP_for_next_level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "GetPlayerXP");

	Params::FL_DarkForest_C_GetPlayerXP Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Current_XP != nullptr)
		*Current_XP = Parms.Current_XP;

	if (CurrentLevel != nullptr)
		*CurrentLevel = Parms.CurrentLevel;

	if (XP_for_next_level != nullptr)
		*XP_for_next_level = Parms.XP_for_next_level;
}


// Function FL_DarkForest.FL_DarkForest_C.GiveXPToPlayer
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   XP                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::GiveXPToPlayer(int32 XP, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "GiveXPToPlayer");

	Params::FL_DarkForest_C_GiveXPToPlayer Parms{};

	Parms.XP = XP;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_DarkForest.FL_DarkForest_C.GrantEquipment
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UEquipmentSetInfo*                Equipment_Set_Info                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EEquipmentSlotType                      Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::GrantEquipment(class AActor* Actor, class UEquipmentSetInfo* Equipment_Set_Info, EEquipmentSlotType Slot, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "GrantEquipment");

	Params::FL_DarkForest_C_GrantEquipment Parms{};

	Parms.Actor = Actor;
	Parms.Equipment_Set_Info = Equipment_Set_Info;
	Parms.Slot = Slot;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_DarkForest.FL_DarkForest_C.IsCodexCategoryOpened
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FText&                      CategoryName                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Global                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Opened                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::IsCodexCategoryOpened(const class FText& CategoryName, bool Global, class UObject* __WorldContext, bool* Opened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "IsCodexCategoryOpened");

	Params::FL_DarkForest_C_IsCodexCategoryOpened Parms{};

	Parms.CategoryName = std::move(CategoryName);
	Parms.Global = Global;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Opened != nullptr)
		*Opened = Parms.Opened;
}


// Function FL_DarkForest.FL_DarkForest_C.Item Notification
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       InItemIcon                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class FText&                      InItemName                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   InAmount                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_NotificationItemType                  Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::Item_Notification(class UTexture2D* InItemIcon, const class FText& InItemName, int32 InAmount, E_NotificationItemType Type, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "Item Notification");

	Params::FL_DarkForest_C_Item_Notification Parms{};

	Parms.InItemIcon = InItemIcon;
	Parms.InItemName = std::move(InItemName);
	Parms.InAmount = InAmount;
	Parms.Type = Type;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_DarkForest.FL_DarkForest_C.Play2DCutscene
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMediaSource*                     MediaSource                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// E_HUDStates                             AfterCutsceneHUDState                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::Play2DCutscene(class UMediaSource* MediaSource, E_HUDStates AfterCutsceneHUDState, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "Play2DCutscene");

	Params::FL_DarkForest_C_Play2DCutscene Parms{};

	Parms.MediaSource = MediaSource;
	Parms.AfterCutsceneHUDState = AfterCutsceneHUDState;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_DarkForest.FL_DarkForest_C.Play2DCutscenes
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMediaSource*>&            MediaSource                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// E_HUDStates                             AfterCutsceneHUDState                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::Play2DCutscenes(TArray<class UMediaSource*>& MediaSource, E_HUDStates AfterCutsceneHUDState, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "Play2DCutscenes");

	Params::FL_DarkForest_C_Play2DCutscenes Parms{};

	Parms.MediaSource = std::move(MediaSource);
	Parms.AfterCutsceneHUDState = AfterCutsceneHUDState;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	MediaSource = std::move(Parms.MediaSource);
}


// Function FL_DarkForest.FL_DarkForest_C.Recharge Actors Consumables By Class
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UClass*                           ConsumableClass                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::Recharge_Actors_Consumables_By_Class(class AActor* Actor, class UClass* ConsumableClass, int32 Amount, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "Recharge Actors Consumables By Class");

	Params::FL_DarkForest_C_Recharge_Actors_Consumables_By_Class Parms{};

	Parms.Actor = Actor;
	Parms.ConsumableClass = ConsumableClass;
	Parms.Amount = Amount;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_DarkForest.FL_DarkForest_C.Recharge All Actors Consumables
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::Recharge_All_Actors_Consumables(class AActor* Actor, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "Recharge All Actors Consumables");

	Params::FL_DarkForest_C_Recharge_All_Actors_Consumables Parms{};

	Parms.Actor = Actor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_DarkForest.FL_DarkForest_C.RemoveEquipment
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EEquipmentSlotType                      Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::RemoveEquipment(class AActor* Actor, EEquipmentSlotType Slot, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "RemoveEquipment");

	Params::FL_DarkForest_C_RemoveEquipment Parms{};

	Parms.Actor = Actor;
	Parms.Slot = Slot;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_DarkForest.FL_DarkForest_C.SetNPCMovementMode
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADefaultCharacter*                DefaultCharacter                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EGroundMovementMode                     MovementMode                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::SetNPCMovementMode(class ADefaultCharacter* DefaultCharacter, class AController* Controller, EGroundMovementMode MovementMode, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "SetNPCMovementMode");

	Params::FL_DarkForest_C_SetNPCMovementMode Parms{};

	Parms.DefaultCharacter = DefaultCharacter;
	Parms.Controller = Controller;
	Parms.MovementMode = MovementMode;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_DarkForest.FL_DarkForest_C.SetRangeWeaponCooldown
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Cooldown                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              InColor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::SetRangeWeaponCooldown(bool Show, double Cooldown, const struct FLinearColor& InColor, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "SetRangeWeaponCooldown");

	Params::FL_DarkForest_C_SetRangeWeaponCooldown Parms{};

	Parms.Show = Show;
	Parms.Cooldown = Cooldown;
	Parms.InColor = std::move(InColor);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_DarkForest.FL_DarkForest_C.SetXPToPlayer
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   XP                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::SetXPToPlayer(int32 XP, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "SetXPToPlayer");

	Params::FL_DarkForest_C_SetXPToPlayer Parms{};

	Parms.XP = XP;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_DarkForest.FL_DarkForest_C.ShowBossBar
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ANPC_CH_NewBattleSystem_Boss_C*   Boss                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::ShowBossBar(class ANPC_CH_NewBattleSystem_Boss_C* Boss, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "ShowBossBar");

	Params::FL_DarkForest_C_ShowBossBar Parms{};

	Parms.Boss = Boss;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_DarkForest.FL_DarkForest_C.ShowHUDMessage
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::ShowHUDMessage(const class FText& InText, float Duration, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "ShowHUDMessage");

	Params::FL_DarkForest_C_ShowHUDMessage Parms{};

	Parms.InText = std::move(InText);
	Parms.Duration = Duration;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_DarkForest.FL_DarkForest_C.SkipHUDMessage
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Instant                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::SkipHUDMessage(bool Instant, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "SkipHUDMessage");

	Params::FL_DarkForest_C_SkipHUDMessage Parms{};

	Parms.Instant = Instant;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_DarkForest.FL_DarkForest_C.UpdateRagneWeaponCooldown
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  EndTime                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          WorldContextObject                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::UpdateRagneWeaponCooldown(double StartTime, double EndTime, class UObject* WorldContextObject, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_DarkForest_C", "UpdateRagneWeaponCooldown");

	Params::FL_DarkForest_C_UpdateRagneWeaponCooldown Parms{};

	Parms.StartTime = StartTime;
	Parms.EndTime = EndTime;
	Parms.WorldContextObject = WorldContextObject;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_DarkForest.FL_DarkForest_C.UpdateNPCMovementModeOnSpline
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAIController*                    Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FEnchancedSplinePointParams&Params_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_DarkForest_C::UpdateNPCMovementModeOnSpline(class AAIController* Controller, class APawn* Pawn, const struct FEnchancedSplinePointParams& Params_0, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FL_DarkForest_C", "UpdateNPCMovementModeOnSpline");

	Params::FL_DarkForest_C_UpdateNPCMovementModeOnSpline Parms{};

	Parms.Controller = Controller;
	Parms.Pawn = Pawn;
	Parms.Params_0 = std::move(Params_0);
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);
}

}

