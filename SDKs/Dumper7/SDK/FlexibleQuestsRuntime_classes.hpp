#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FlexibleQuestsRuntime

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "FlexibleQuestsRuntime_structs.hpp"
#include "Engine_classes.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// Class FlexibleQuestsRuntime.BaseQuest
// 0x0068 (0x0090 - 0x0028)
class UBaseQuest : public UObject
{
public:
	class FText                                   Name_0;                                            // 0x0028(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, SaveGame, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0040(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  Tags;                                              // 0x0058(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, SaveGame, NativeAccessSpecifierPublic)
	bool                                          bLoopsAllowed;                                     // 0x0078(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FObjectSaveData>                StepsSaveData;                                     // 0x0080(0x0010)(ZeroConstructor, SaveGame, Protected, NativeAccessSpecifierProtected)

public:
	void Print(bool ToConsole, bool ToScreen);
	void SetIsRuntimeChangeable(bool bNewChangeable);
	void StartQuest();

	void GetAllSteps(TArray<class UQuestStep*>* AllSteps) const;
	class UQuestStep* GetAssetQuestStep(const class FName QuestStepID) const;
	void GetDebugString(class FString* DebugString) const;
	bool GetIsRuntimeChangeable() const;
	void GetRootSteps(TArray<class UQuestStep*>* RootSteps) const;
	bool IsEqual(const class UBaseQuest* Other) const;
	bool IsMainQuest() const;
	bool IsTechQuest() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseQuest")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseQuest")
	}
	static class UBaseQuest* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseQuest>();
	}
};
DUMPER7_ASSERTS_UBaseQuest;

// Class FlexibleQuestsRuntime.QuestStep
// 0x0198 (0x01C0 - 0x0028)
class UQuestStep : public UObject
{
public:
	TMulticastInlineDelegate<void(class UQuestStep* QuestStep)> OnQuestStepFinishedDelegate;         // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FText                                   StepName;                                          // 0x0038(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, SaveGame, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0050(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, SaveGame, NativeAccessSpecifierPublic)
	bool                                          bEditableID;                                       // 0x0068(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   QuestStepID;                                       // 0x006C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHiddenStep;                                       // 0x0074(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLegacy;                                           // 0x0075(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bActivateTransitionsByOrder;                       // 0x0076(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UGenericQuest*                          OwningQuest;                                       // 0x0078(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UQuestStep*>                     ParentNodes;                                       // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UQuestStep*>                     ChildrenNodes;                                     // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class UQuestStep*, class UQuestStepTransition*> Edges;                                      // 0x00A0(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<class UQuestStepAction*>               PreActions;                                        // 0x00F0(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UQuestStepAction*>               PostActions;                                       // 0x0100(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<int32>                                 ParentNodesIndexes;                                // 0x0110(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TArray<int32>                                 ChildNodesIndexes;                                 // 0x0120(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TArray<class FName>                           ParentNodeIds;                                     // 0x0130(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TArray<class FName>                           ChildNodeIds;                                      // 0x0140(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TMap<int32, struct FObjectSaveData>           EdgesSaveData;                                     // 0x0150(0x0050)(SaveGame, NativeAccessSpecifierPublic)
	TArray<struct FObjectSaveData>                PreActionsSaveData;                                // 0x01A0(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TArray<struct FObjectSaveData>                PostActionsSaveData;                               // 0x01B0(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)

public:
	void EndStep();
	class UQuestStepTransition* GetEdge(class UQuestStep* ChildNode);
	void OnTransitionReady(class UQuestStepTransition* Transition);
	void StartStep();

	void GetDebugString(class FString* DebugString) const;
	class FText GetDescription() const;
	class UGenericQuest* GetQuest() const;
	class UQuestState* GetQuestState() const;
	class FText GetUniqueVisibleStepName() const;
	bool IsLeafNode() const;
	bool IsStepActive() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("QuestStep")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"QuestStep")
	}
	static class UQuestStep* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuestStep>();
	}
};
DUMPER7_ASSERTS_UQuestStep;

// Class FlexibleQuestsRuntime.FinishQuestStep
// 0x0008 (0x01C8 - 0x01C0)
class UFinishQuestStep final : public UQuestStep
{
public:
	EQuestResult                                  Result;                                            // 0x01C0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FinishQuestStep")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FinishQuestStep")
	}
	static class UFinishQuestStep* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFinishQuestStep>();
	}
};
DUMPER7_ASSERTS_UFinishQuestStep;

// Class FlexibleQuestsRuntime.MarkerManager
// 0x0060 (0x0090 - 0x0030)
class UMarkerManager final : public UWorldSubsystem
{
public:
	TMulticastInlineDelegate<void(class UQuestMarker* UpdatedMarker, EQuestMarkerState NewState)> OnMarkerUpdated; // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSet<class UQuestMarker*>                     ActiveMarkers;                                     // 0x0040(0x0050)(BlueprintVisible, ExportObject, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	void MarkerUpdateResponse(class UQuestMarker* marker, EQuestMarkerState NewState);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MarkerManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MarkerManager")
	}
	static class UMarkerManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMarkerManager>();
	}
};
DUMPER7_ASSERTS_UMarkerManager;

// Class FlexibleQuestsRuntime.QuestManager
// 0x0120 (0x0148 - 0x0028)
class UQuestManager final : public UObject
{
public:
	TMulticastInlineDelegate<void(class UGenericQuest* FinishedQuest, EQuestResult FinishResult)> OnQuestFinished; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayTagContainer& NewGlobalTags)> OnGlobalQuestTagsChanged; // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayTag& Tags, const bool bExist)> OnGlobalQuestTagChanged; // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UGenericQuest* StartedQuest)> OnQuestStarted;                // 0x0058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UQuestState*>                    ActiveQuests;                                      // 0x0068(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UQuestState*>                    FinishedQuests;                                    // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UQuestState*>                    TrackingQuests;                                    // 0x0088(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_98[0x50];                                      // 0x0098(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  GlobalTags;                                        // 0x00E8(0x0020)(SaveGame, Protected, NativeAccessSpecifierProtected)
	class FString                                 QuestsSaveGameName;                                // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FObjectSaveData>                SavedActiveQuests;                                 // 0x0118(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPrivate)
	TArray<struct FObjectSaveData>                SavedFinishedQuests;                               // 0x0128(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPrivate)
	TArray<int32>                                 SavedTrackingQuestsIndexes;                        // 0x0138(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPrivate)

public:
	void AddGlobalTag(const struct FGameplayTag& TagToAdd);
	void BindOnQuestEvent(const struct FGameplayTag& EventTag, const TDelegate<void(const struct FGameplayTag& Tag, const class UObject* EventCauser)>& Event);
	void CallQuestEvent(const struct FGameplayTag& EventTag, const class UObject* EventCauser);
	void FinishQuest(const class UGenericQuest* Quest, EQuestResult WithResult);
	void FinishQuestByName(const class FText& Name_0, EQuestResult WithResult);
	void QuestFinishedResponse(class UQuestState* FinishedQuest, EQuestResult Result);
	void RefreshCurrentGoals();
	void RemoveGlobalTag(const struct FGameplayTag& TagToRemove, bool bDeferParentTags);
	bool StartQuest(const class UGenericQuest* QuestToStart);
	void TrackQuest(const class UGenericQuest* QuestToTrack);
	void UnbindOnQuestEvent(const struct FGameplayTag& EventTag, const TDelegate<void(const struct FGameplayTag& Tag, const class UObject* EventCauser)>& Event);
	void UntrackQuest(const class UBaseQuest* QuestToUntrack);

	class UQuestState* GetActiveQuestState(const class UGenericQuest* InQuestObject) const;
	const struct FGameplayTagContainer GetGlobalTags() const;
	class UQuestState* GetQuestState(const class UGenericQuest* InQuestObject) const;
	class UQuestState* GetTrackingQuestInstance(const class UBaseQuest* InQuestObject) const;
	bool IsQuestActive(const class UGenericQuest* InQuest) const;
	bool IsQuestTracking(const class UGenericQuest* InQuest) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("QuestManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"QuestManager")
	}
	static class UQuestManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuestManager>();
	}
};
DUMPER7_ASSERTS_UQuestManager;

// Class FlexibleQuestsRuntime.QuestMarker
// 0x00B0 (0x07A0 - 0x06F0)
class UQuestMarker : public UWidgetComponent
{
public:
	TMulticastInlineDelegate<void(const EQuestMarkerState& NewState)> OnMarkerStateChanged;          // 0x06E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<EQuestMarkerState, TSubclassOf<class UUserWidget>> StatesWidgets;                           // 0x06F8(0x0050)(Edit, BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_748[0x58];                                     // 0x0748(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddStatusFromObject(EQuestMarkerState State, class UObject* Object);
	void RemoveStatusFromObject(EQuestMarkerState State, class UObject* Object);

	EQuestMarkerState GetCurrentState() const;
	class UGenericQuest* GetPendingQuest() const;
	class UQuestState* GetPendingQuestState() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("QuestMarker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"QuestMarker")
	}
	static class UQuestMarker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuestMarker>();
	}
};
DUMPER7_ASSERTS_UQuestMarker;

// Class FlexibleQuestsRuntime.QuestStepAction
// 0x0008 (0x0030 - 0x0028)
class UQuestStepAction : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnLoaded_K2(class UQuestStep* FromQuestStep);
	void RunAction_K2(class UQuestStep* FromQuestStep);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("QuestStepAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"QuestStepAction")
	}
	static class UQuestStepAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuestStepAction>();
	}
};
DUMPER7_ASSERTS_UQuestStepAction;

// Class FlexibleQuestsRuntime.QuestStepCondition
// 0x0030 (0x0058 - 0x0028)
class UQuestStepCondition : public UObject
{
public:
	TMulticastInlineDelegate<void(class UQuestStepCondition* Condition, bool bNewStatus)> QuestStepConditionChanged; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class AActor*>                         TargetActors;                                      // 0x0038(0x0010)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bConditionStatus;                                  // 0x0048(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_49[0xF];                                       // 0x0049(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ChangeStatus(bool bNewStatus);
	void EndCondition_K2();
	void OnLoaded();
	void PrepareForSaving();
	void StartCondition_K2();
	void TargetsUpdate();
	void Update();

	class FText GetConditionText() const;
	void GetDebugString(class FString* DebugString) const;
	class UGenericQuest* GetQuest() const;
	EQuestMarkerState GetQuestMarkerType() const;
	class UQuestState* GetQuestState() const;
	void GetTargetActors(TArray<class AActor*>* Targets) const;
	class UQuestStepTransition* GetTransition() const;
	bool IsConditionMet() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("QuestStepCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"QuestStepCondition")
	}
	static class UQuestStepCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuestStepCondition>();
	}
};
DUMPER7_ASSERTS_UQuestStepCondition;

// Class FlexibleQuestsRuntime.QuestStepTransition
// 0x0070 (0x0098 - 0x0028)
class UQuestStepTransition final : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UGenericQuest*                          Quest;                                             // 0x0038(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EConditionsRequirementMode                    ConditionsCheckMode;                               // 0x0040(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ActivationOrder;                                   // 0x0044(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowActivationOrder;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UQuestStepCondition*>            Conditions;                                        // 0x0050(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UQuestStep*                             StartNode;                                         // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UQuestStep*                             EndNode;                                           // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FObjectSaveData>                ConditionsSaveData;                                // 0x0070(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPrivate)
	int32                                         StartNodeIndex;                                    // 0x0080(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         EndNodeIndex;                                      // 0x0084(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   StartNodeId;                                       // 0x0088(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   EndNodeId;                                         // 0x0090(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnConditionUpdated(class UQuestStepCondition* ChangedCondition, bool bNewStatus);

	void GetDebugString(class FString* DebugString) const;
	class UQuestStep* GetOwningQuestStep() const;
	class UGenericQuest* GetQuest() const;
	class UQuestState* GetQuestState() const;
	bool IsActive() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("QuestStepTransition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"QuestStepTransition")
	}
	static class UQuestStepTransition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuestStepTransition>();
	}
};
DUMPER7_ASSERTS_UQuestStepTransition;

// Class FlexibleQuestsRuntime.QuestSubsystem
// 0x0028 (0x0058 - 0x0030)
class UQuestSubsystem final : public UGameInstanceSubsystem
{
public:
	class UQuestManager*                          QuestManager;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x20];                                      // 0x0038(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void ClearQuests(const class UObject* WorldContext);
	static class UQuestManager* GetQuestManager(const class UObject* WorldContext);
	static void TrackQuest(const class UObject* WorldContext, const class UGenericQuest* QuestToTrack);
	static void UntrackQuest(const class UObject* WorldContext, const class UBaseQuest* QuestToUntrack);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("QuestSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"QuestSubsystem")
	}
	static class UQuestSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuestSubsystem>();
	}
};
DUMPER7_ASSERTS_UQuestSubsystem;

// Class FlexibleQuestsRuntime.GenericQuest
// 0x0068 (0x00F8 - 0x0090)
class UGenericQuest : public UBaseQuest
{
public:
	TSubclassOf<class UQuestStep>                 QuestStepsClass;                                   // 0x0090(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UQuestStepTransition>       QuestTransitionType;                               // 0x0098(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UQuestStep*>                     RootSteps;                                         // 0x00A0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UQuestStep*>                     AllSteps;                                          // 0x00B0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bEdgeEnabled;                                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestStep*                             CurrentQuestStep;                                  // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int32>                                 StepsHistory;                                      // 0x00D0(0x0010)(ZeroConstructor, SaveGame, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                 RootStepsIndexes;                                  // 0x00E0(0x0010)(ZeroConstructor, SaveGame, Protected, NativeAccessSpecifierProtected)
	int32                                         CurrentQuestStepIndex;                             // 0x00F0(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void GetNodesByLevel(int32 Level, TArray<class UQuestStep*>* Nodes);

	int32 GetLevelNum() const;
	int32 GetQuestStepLevel(const class UQuestStep* QuestStep) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GenericQuest")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GenericQuest")
	}
	static class UGenericQuest* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGenericQuest>();
	}
};
DUMPER7_ASSERTS_UGenericQuest;

// Class FlexibleQuestsRuntime.QuestState
// 0x0068 (0x00F8 - 0x0090)
class UQuestState final : public UBaseQuest
{
public:
	TMulticastInlineDelegate<void(class UQuestState* Quest, EQuestResult Result)> QuestFinishedDelegate; // 0x0090(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_A0[0x18];                                      // 0x00A0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UQuestStep*>                     ActivatedSteps;                                    // 0x00B8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UGenericQuest>           QuestAsset;                                        // 0x00C8(0x0028)(BlueprintVisible, BlueprintReadOnly, SaveGame, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsTracking;                                       // 0x00F0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EQuestStatus                                  QuestStatus;                                       // 0x00F1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void MoveToStep(class UQuestStep* InStepToMove);
	void SetIsTracking(bool bNewIsTracking);

	class UQuestStep* GetActivatedQuestStep(const class FName QuestStepID) const;
	class UQuestStep* GetCurrentStep() const;
	class UQuestStep* GetCurrentStepNotHidden() const;
	bool GetIsTracking() const;
	class UQuestStep* GetLastVisibleQuestStep() const;
	class UQuestStep* GetNextVisibleQuestStep(const class UQuestStep* ForStep) const;
	class UGenericQuest* GetQuestAsset() const;
	const class FText GetQuestName() const;
	EQuestStatus GetQuestStatus() const;
	void GetStepsHistory(TArray<class UQuestStep*>* HistoricalSteps) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("QuestState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"QuestState")
	}
	static class UQuestState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuestState>();
	}
};
DUMPER7_ASSERTS_UQuestState;

}

