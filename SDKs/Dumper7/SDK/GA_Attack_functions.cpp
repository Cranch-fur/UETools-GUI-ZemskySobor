#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Attack

#include "Basic.hpp"

#include "GA_Attack_classes.hpp"
#include "GA_Attack_parameters.hpp"


namespace SDK
{

// Function GA_Attack.GA_Attack_C.ApplyDeflectedHitSoundEffect
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAttackHitData&            HitData                                                (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void UGA_Attack_C::ApplyDeflectedHitSoundEffect(const struct FAttackHitData& HitData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Attack_C", "ApplyDeflectedHitSoundEffect");

	Params::GA_Attack_C_ApplyDeflectedHitSoundEffect Parms{};

	Parms.HitData = std::move(HitData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Attack.GA_Attack_C.ApplyPostAttackEffects
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADefaultCharacter*                TargetCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTagContainer&     AttackTags                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FAttackHitData&            HitData                                                (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void UGA_Attack_C::ApplyPostAttackEffects(class ADefaultCharacter* TargetCharacter, const struct FGameplayTagContainer& AttackTags, const struct FAttackHitData& HitData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Attack_C", "ApplyPostAttackEffects");

	Params::GA_Attack_C_ApplyPostAttackEffects Parms{};

	Parms.TargetCharacter = TargetCharacter;
	Parms.AttackTags = std::move(AttackTags);
	Parms.HitData = std::move(HitData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Attack.GA_Attack_C.ApplySoundEffect
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAttackHitData&            HitData                                                (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void UGA_Attack_C::ApplySoundEffect(const struct FAttackHitData& HitData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Attack_C", "ApplySoundEffect");

	Params::GA_Attack_C_ApplySoundEffect Parms{};

	Parms.HitData = std::move(HitData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Attack.GA_Attack_C.ArmorCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class FName                       BoneName                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Armor                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Attack_C::ArmorCheck(class AActor* Target, const class FName BoneName, bool* Armor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Attack_C", "ArmorCheck");

	Params::GA_Attack_C_ArmorCheck Parms{};

	Parms.Target = Target;
	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);

	if (Armor != nullptr)
		*Armor = Parms.Armor;
}


// Function GA_Attack.GA_Attack_C.EndAbilityWithReason
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAttackAbilityEndReason                 Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Attack_C::EndAbilityWithReason(EAttackAbilityEndReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Attack_C", "EndAbilityWithReason");

	Params::GA_Attack_C_EndAbilityWithReason Parms{};

	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Attack.GA_Attack_C.ExecuteUbergraph_GA_Attack
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Attack_C::ExecuteUbergraph_GA_Attack(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Attack_C", "ExecuteUbergraph_GA_Attack");

	Params::GA_Attack_C_ExecuteUbergraph_GA_Attack Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Attack.GA_Attack_C.K2_ActivateAbility
// (Event, Protected, BlueprintEvent)

void UGA_Attack_C::K2_ActivateAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Attack_C", "K2_ActivateAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Attack.GA_Attack_C.K2_ActivateAbilityFromEvent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayEventData&        EventData                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UGA_Attack_C::K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Attack_C", "K2_ActivateAbilityFromEvent");

	Params::GA_Attack_C_K2_ActivateAbilityFromEvent Parms{};

	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Attack.GA_Attack_C.K2_CommitExecute
// (Event, Public, BlueprintEvent)

void UGA_Attack_C::K2_CommitExecute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Attack_C", "K2_CommitExecute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Attack.GA_Attack_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Attack_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Attack_C", "K2_OnEndAbility");

	Params::GA_Attack_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}

}

