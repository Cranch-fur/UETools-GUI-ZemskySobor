#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_InvestigationTracking

#include "Basic.hpp"

#include "GA_InvestigationTracking_classes.hpp"
#include "GA_InvestigationTracking_parameters.hpp"


namespace SDK
{

// Function GA_InvestigationTracking.GA_InvestigationTracking_C.ClearAsyncTask
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_InvestigationTracking_C::ClearAsyncTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_InvestigationTracking_C", "ClearAsyncTask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_InvestigationTracking.GA_InvestigationTracking_C.ExecuteUbergraph_GA_InvestigationTracking
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_InvestigationTracking_C::ExecuteUbergraph_GA_InvestigationTracking(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_InvestigationTracking_C", "ExecuteUbergraph_GA_InvestigationTracking");

	Params::GA_InvestigationTracking_C_ExecuteUbergraph_GA_InvestigationTracking Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_InvestigationTracking.GA_InvestigationTracking_C.InvestigationCamera
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           FocusToActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  TrackingTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// EInvestigationTrackingMode              TrackingMode                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_InvestigationTracking_C::InvestigationCamera(class AActor* FocusToActor, double TrackingTime, const struct FGameplayAbilitySpecHandle& AbilityHandle, EInvestigationTrackingMode TrackingMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_InvestigationTracking_C", "InvestigationCamera");

	Params::GA_InvestigationTracking_C_InvestigationCamera Parms{};

	Parms.FocusToActor = FocusToActor;
	Parms.TrackingTime = TrackingTime;
	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.TrackingMode = TrackingMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_InvestigationTracking.GA_InvestigationTracking_C.K2_ActivateAbility
// (Event, Protected, BlueprintEvent)

void UGA_InvestigationTracking_C::K2_ActivateAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_InvestigationTracking_C", "K2_ActivateAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_InvestigationTracking.GA_InvestigationTracking_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_InvestigationTracking_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_InvestigationTracking_C", "K2_OnEndAbility");

	Params::GA_InvestigationTracking_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_InvestigationTracking.GA_InvestigationTracking_C.OnFinished_032F18A44CCC792B135EEF8F66665D34
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ActionNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_InvestigationTracking_C::OnFinished_032F18A44CCC792B135EEF8F66665D34(int32 ActionNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_InvestigationTracking_C", "OnFinished_032F18A44CCC792B135EEF8F66665D34");

	Params::GA_InvestigationTracking_C_OnFinished_032F18A44CCC792B135EEF8F66665D34 Parms{};

	Parms.ActionNumber = ActionNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_InvestigationTracking.GA_InvestigationTracking_C.OnFinished_FBD9D62D4A0856DFED9F24AA9E10CB0C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ActionNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_InvestigationTracking_C::OnFinished_FBD9D62D4A0856DFED9F24AA9E10CB0C(int32 ActionNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_InvestigationTracking_C", "OnFinished_FBD9D62D4A0856DFED9F24AA9E10CB0C");

	Params::GA_InvestigationTracking_C_OnFinished_FBD9D62D4A0856DFED9F24AA9E10CB0C Parms{};

	Parms.ActionNumber = ActionNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_InvestigationTracking.GA_InvestigationTracking_C.OnPerformAction_032F18A44CCC792B135EEF8F66665D34
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ActionNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_InvestigationTracking_C::OnPerformAction_032F18A44CCC792B135EEF8F66665D34(int32 ActionNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_InvestigationTracking_C", "OnPerformAction_032F18A44CCC792B135EEF8F66665D34");

	Params::GA_InvestigationTracking_C_OnPerformAction_032F18A44CCC792B135EEF8F66665D34 Parms{};

	Parms.ActionNumber = ActionNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_InvestigationTracking.GA_InvestigationTracking_C.OnPerformAction_FBD9D62D4A0856DFED9F24AA9E10CB0C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ActionNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_InvestigationTracking_C::OnPerformAction_FBD9D62D4A0856DFED9F24AA9E10CB0C(int32 ActionNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_InvestigationTracking_C", "OnPerformAction_FBD9D62D4A0856DFED9F24AA9E10CB0C");

	Params::GA_InvestigationTracking_C_OnPerformAction_FBD9D62D4A0856DFED9F24AA9E10CB0C Parms{};

	Parms.ActionNumber = ActionNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_InvestigationTracking.GA_InvestigationTracking_C.Set View Yaw Min Max
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   YawRotationToTarget                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MinMaxValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_InvestigationTracking_C::Set_View_Yaw_Min_Max(float YawRotationToTarget, float MinMaxValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_InvestigationTracking_C", "Set View Yaw Min Max");

	Params::GA_InvestigationTracking_C_Set_View_Yaw_Min_Max Parms{};

	Parms.YawRotationToTarget = YawRotationToTarget;
	Parms.MinMaxValue = MinMaxValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_InvestigationTracking.GA_InvestigationTracking_C.TrackingCamera
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           FocusToActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  TrackingTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayAbilitySpecHandle&AbilityHandle                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// double                                  StartPitchOffset                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  StartYawOffset                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InPitchOffset                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InYawOffset                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_InvestigationTracking_C::TrackingCamera(class AActor* FocusToActor, double TrackingTime, const struct FGameplayAbilitySpecHandle& AbilityHandle, double StartPitchOffset, double StartYawOffset, double InPitchOffset, double InYawOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_InvestigationTracking_C", "TrackingCamera");

	Params::GA_InvestigationTracking_C_TrackingCamera Parms{};

	Parms.FocusToActor = FocusToActor;
	Parms.TrackingTime = TrackingTime;
	Parms.AbilityHandle = std::move(AbilityHandle);
	Parms.StartPitchOffset = StartPitchOffset;
	Parms.StartYawOffset = StartYawOffset;
	Parms.InPitchOffset = InPitchOffset;
	Parms.InYawOffset = InYawOffset;

	UObject::ProcessEvent(Func, &Parms);
}

}

