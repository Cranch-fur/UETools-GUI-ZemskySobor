#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_MeleeAttack_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GA_Attack_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_MeleeAttack_Base.GA_MeleeAttack_Base_C
// 0x0180 (0x0608 - 0x0488)
class UGA_MeleeAttack_Base_C : public UGA_Attack_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_MeleeAttack_Base_C;              // 0x0488(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayEventData                     ActivateAbilityEventData;                          // 0x0490(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UComboAttackDataPayload_C*              ComboAttackDataPayload;                            // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 RangeAttackTarget;                                 // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSet<class AActor*>                           DamagedActors;                                     // 0x0550(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	double                                        AttackDamage;                                      // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEquipmentComponent*                    EquipmentComponent;                                // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMotionWarpingComponent*                WarpComponent;                                     // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           AttackWarpingTimerHandle;                          // 0x05B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           PreAttackWarpingTimerHandle;                       // 0x05C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        WarpOffset;                                        // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           PostAttackWarpingTimerHandle;                      // 0x05D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        WarpLimit;                                         // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  InvulnerabilityTags;                               // 0x05E0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         TargetLocationPredictionTime;                      // 0x0600(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyDamageToEnemy(class UAbilitySystemComponent* DamageTarget);
	void ApplyPostAttackEffects(class ADefaultCharacter* TargetCharacter, const struct FGameplayTagContainer& AttackTags, const struct FAttackHitData& HitData);
	void ApplyVFXEffects(const struct FAttackHitData& HitData);
	void AttackWarp();
	void CanEnterWarpState(bool* Can);
	void CanWarp(class ACharacter* WarpTarget, double Offset, bool* bCan);
	void CheckTargetInvulnerability(class UAbilitySystemComponent* AbilitySystemComponent, bool* Invulnerability);
	void ClearWarpingTimers();
	void ClearWarpTargets();
	void DealDamageToActor(class AActor* Actor);
	void DisableVFXOverlayMaterial();
	void EnableVFXOverlayMaterial();
	void ExecuteUbergraph_GA_MeleeAttack_Base(int32 EntryPoint);
	struct FGameplayTagContainer GetAttackHitTag();
	void GetAttackMontage(class UAnimMontage** NewParam);
	void GetDamageEffect(class UClass** DamageEffect);
	void GetFinisherDamageEffect(class UClass** DamageEffect);
	void GetWarpLocationAndRotaion(class ADefaultCharacter* Target, struct FVector* WarpLocation, struct FRotator* WarpRotation);
	void GetWarpTarget(class ADefaultCharacter** WarpTarget_0);
	void HandleTags();
	void HandleWarping();
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void ManageBloodSplashes(class AActor* HitActor, const struct FAttackHitData& HitData);
	void NeedPostAttackWarp(class ACharacter* WarpTarget, bool* bCan);
	void OnAttackHitInflicted(const struct FAttackHitData& AttackHitData);
	void OnBlendOut_9288978249CE095123C14CB618FCF42F(class FName NotifyName, const class UAnimNotifyState* AnimNotifyState);
	void OnCompleted_9288978249CE095123C14CB618FCF42F(class FName NotifyName, const class UAnimNotifyState* AnimNotifyState);
	void OnInterrupted_9288978249CE095123C14CB618FCF42F(class FName NotifyName, const class UAnimNotifyState* AnimNotifyState);
	void OnMontageNotify(class FName NotifyName, bool Ends, const class UAnimNotifyState* Notify);
	void OnNotifyBegin_9288978249CE095123C14CB618FCF42F(class FName NotifyName, const class UAnimNotifyState* AnimNotifyState);
	void OnNotifyEnd_9288978249CE095123C14CB618FCF42F(class FName NotifyName, const class UAnimNotifyState* AnimNotifyState);
	void PlayAttackAnimation(class UAnimMontage* Animation);
	void PostAttackWarp();
	void PreAttackWarp();
	void SendAttackFinishEvent(bool InputPin);
	void WarpTarget(class FName WarpTargetName);
	void WarpToInputDirection();
	void K2_OnEndAbility(bool bWasCancelled);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("GA_MeleeAttack_Base_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GA_MeleeAttack_Base_C")
	}
	static class UGA_MeleeAttack_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_MeleeAttack_Base_C>();
	}
};
DUMPER7_ASSERTS_UGA_MeleeAttack_Base_C;

}

