#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_RangeAttack_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GA_Attack_classes.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_RangeAttack_Base.GA_RangeAttack_Base_C
// 0x0070 (0x04F8 - 0x0488)
class UGA_RangeAttack_Base_C : public UGA_Attack_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_RangeAttack_Base_C;              // 0x0488(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UComboAttackDataPayload_C*              ComboAttackDataPayload;                            // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UEquipmentComponent*                    EquipmentComponent;                                // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitInputActionPressed*    WaitInputActionAbilityTask;                        // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitDelay*                 AimModeTimer;                                      // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitInputActionPressed*    WaitShootInputAbilityTask;                         // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAimShootDataPayload_C*                 AimShootDataPayload;                               // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class URangeEquipmentSet*                     RangeEquipmentSet;                                 // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class URangeWeaponItem*                       ActiveRangeWeapon;                                 // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        AttackDamageForNonASC;                             // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             RangeAttackTarget;                                 // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           PreAttackWarpingTimerHandle;                       // 0x04E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMotionWarpingComponent*                WarpComponent;                                     // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             DataTableSound;                                    // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void CalculateHitDirection(const struct FHitResult& Hit, const struct FGameplayTagContainer& DirectionTagCont, struct FGameplayTagContainer* InstigatorTags);
	struct FRotator CalculateProjectilePositionAndRotation(class USceneComponent* WeaponMesh, const struct FHitResult& Hit, struct FVector* OutputPin);
	void CheckEffectConditions(const struct FHitResult& HitResult, bool* bDamagePossible);
	void DealDamageToTarget(const struct FHitResult& HitResult);
	void ExecuteUbergraph_GA_RangeAttack_Base(int32 EntryPoint);
	void GetDamageEffect(const struct FHitResult& Hit, class UClass** DamageEffect);
	void GetHitTypeTags(struct FGameplayTagContainer* OutTags);
	void GetMontageStartSection(class FName* Result);
	void GetRangeAttackTarget(class ACharacter** Target);
	void GetWarpLocationAndRotaion(class ACharacter* Target, struct FVector* WarpLocation, struct FRotator* WarpRotation);
	void GetWarpTarget(class ACharacter** WarpTarget);
	void HandleWarping();
	void Initialize(bool* Result);
	void InitilizePayload(const struct FGameplayEventData& GameplayEventData, bool* Result);
	bool IsHeadShot(const struct FHitResult& Hit);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void OnAbilityEnded(bool bWasCancelled);
	void OnBlendOut_A7C3D00442CFB9327FAB61A7F544AF4E(class FName NotifyName, const class UAnimNotifyState* AnimNotifyState);
	void OnCompleted_A7C3D00442CFB9327FAB61A7F544AF4E(class FName NotifyName, const class UAnimNotifyState* AnimNotifyState);
	void OnInterrupted_A7C3D00442CFB9327FAB61A7F544AF4E(class FName NotifyName, const class UAnimNotifyState* AnimNotifyState);
	void OnMontageNotify(class FName NotifyName, bool Ends, const class UAnimNotifyState* Notify);
	void OnNotifyBegin_A7C3D00442CFB9327FAB61A7F544AF4E(class FName NotifyName, const class UAnimNotifyState* AnimNotifyState);
	void OnNotifyEnd_A7C3D00442CFB9327FAB61A7F544AF4E(class FName NotifyName, const class UAnimNotifyState* AnimNotifyState);
	void PlayImpactVFX(const struct FHitResult& Hit, const TMap<EPhysicalSurface, class UNiagaraSystem*>& VFX);
	void PlayRangeAttackAnimation(class UAnimMontage* Animation);
	void PreAttackWarp();
	void SendHitEvent(const struct FGameplayTagContainer& InstigatorTags, class AActor* Actor, const struct FGameplayTagContainer& HitTypeTags);
	void ShootWeapon();
	void SpawnHitSound(const struct FHitResult& Hit);
	void SpawnNoise(const struct FHitResult& Hit);
	void SpawnVFX(const struct FHitResult& HitResult);
	void ThrowProjectile(const struct FHitResult& HitResult);
	void TraceToTarget(class ACharacter* Target, struct FHitResult* HitResult);
	void WarpTarget(class FName WarpTargetName);
	void K2_OnEndAbility(bool bWasCancelled);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("GA_RangeAttack_Base_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GA_RangeAttack_Base_C")
	}
	static class UGA_RangeAttack_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_RangeAttack_Base_C>();
	}
};
DUMPER7_ASSERTS_UGA_RangeAttack_Base_C;

}

