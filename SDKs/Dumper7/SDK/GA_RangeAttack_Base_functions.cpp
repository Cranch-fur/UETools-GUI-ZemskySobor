#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_RangeAttack_Base

#include "Basic.hpp"

#include "GA_RangeAttack_Base_classes.hpp"
#include "GA_RangeAttack_Base_parameters.hpp"


namespace SDK
{

// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.CalculateHitDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// const struct FGameplayTagContainer&     DirectionTagCont                                       (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FGameplayTagContainer*           InstigatorTags                                         (Parm, OutParm)

void UGA_RangeAttack_Base_C::CalculateHitDirection(const struct FHitResult& Hit, const struct FGameplayTagContainer& DirectionTagCont, struct FGameplayTagContainer* InstigatorTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "CalculateHitDirection");

	Params::GA_RangeAttack_Base_C_CalculateHitDirection Parms{};

	Parms.Hit = std::move(Hit);
	Parms.DirectionTagCont = std::move(DirectionTagCont);

	UObject::ProcessEvent(Func, &Parms);

	if (InstigatorTags != nullptr)
		*InstigatorTags = std::move(Parms.InstigatorTags);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.CalculateProjectilePositionAndRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USceneComponent*                  WeaponMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FVector*                         OutputPin                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator UGA_RangeAttack_Base_C::CalculateProjectilePositionAndRotation(class USceneComponent* WeaponMesh, const struct FHitResult& Hit, struct FVector* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "CalculateProjectilePositionAndRotation");

	Params::GA_RangeAttack_Base_C_CalculateProjectilePositionAndRotation Parms{};

	Parms.WeaponMesh = WeaponMesh;
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);

	if (OutputPin != nullptr)
		*OutputPin = std::move(Parms.OutputPin);

	return Parms.ReturnValue;
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.CheckEffectConditions
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool*                                   bDamagePossible                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_RangeAttack_Base_C::CheckEffectConditions(const struct FHitResult& HitResult, bool* bDamagePossible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "CheckEffectConditions");

	Params::GA_RangeAttack_Base_C_CheckEffectConditions Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (bDamagePossible != nullptr)
		*bDamagePossible = Parms.bDamagePossible;
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.DealDamageToTarget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UGA_RangeAttack_Base_C::DealDamageToTarget(const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "DealDamageToTarget");

	Params::GA_RangeAttack_Base_C_DealDamageToTarget Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.ExecuteUbergraph_GA_RangeAttack_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_RangeAttack_Base_C::ExecuteUbergraph_GA_RangeAttack_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "ExecuteUbergraph_GA_RangeAttack_Base");

	Params::GA_RangeAttack_Base_C_ExecuteUbergraph_GA_RangeAttack_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.GetDamageEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FHitResult&                Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class UClass**                          DamageEffect                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_RangeAttack_Base_C::GetDamageEffect(const struct FHitResult& Hit, class UClass** DamageEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "GetDamageEffect");

	Params::GA_RangeAttack_Base_C_GetDamageEffect Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);

	if (DamageEffect != nullptr)
		*DamageEffect = Parms.DamageEffect;
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.GetHitTypeTags
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTagContainer*           OutTags                                                (Parm, OutParm)

void UGA_RangeAttack_Base_C::GetHitTypeTags(struct FGameplayTagContainer* OutTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "GetHitTypeTags");

	Params::GA_RangeAttack_Base_C_GetHitTypeTags Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutTags != nullptr)
		*OutTags = std::move(Parms.OutTags);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.GetMontageStartSection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName*                            Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_RangeAttack_Base_C::GetMontageStartSection(class FName* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "GetMontageStartSection");

	Params::GA_RangeAttack_Base_C_GetMontageStartSection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.GetRangeAttackTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter**                      Target                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_RangeAttack_Base_C::GetRangeAttackTarget(class ACharacter** Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "GetRangeAttackTarget");

	Params::GA_RangeAttack_Base_C_GetRangeAttackTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Target != nullptr)
		*Target = Parms.Target;
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.GetWarpLocationAndRotaion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         WarpLocation                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        WarpRotation                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGA_RangeAttack_Base_C::GetWarpLocationAndRotaion(class ACharacter* Target, struct FVector* WarpLocation, struct FRotator* WarpRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "GetWarpLocationAndRotaion");

	Params::GA_RangeAttack_Base_C_GetWarpLocationAndRotaion Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (WarpLocation != nullptr)
		*WarpLocation = std::move(Parms.WarpLocation);

	if (WarpRotation != nullptr)
		*WarpRotation = std::move(Parms.WarpRotation);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.GetWarpTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ACharacter**                      WarpTarget                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_RangeAttack_Base_C::GetWarpTarget(class ACharacter** WarpTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "GetWarpTarget");

	Params::GA_RangeAttack_Base_C_GetWarpTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WarpTarget != nullptr)
		*WarpTarget = Parms.WarpTarget;
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.HandleWarping
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGA_RangeAttack_Base_C::HandleWarping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "HandleWarping");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.Initialize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_RangeAttack_Base_C::Initialize(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "Initialize");

	Params::GA_RangeAttack_Base_C_Initialize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.InitilizePayload
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayEventData&        GameplayEventData                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_RangeAttack_Base_C::InitilizePayload(const struct FGameplayEventData& GameplayEventData, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "InitilizePayload");

	Params::GA_RangeAttack_Base_C_InitilizePayload Parms{};

	Parms.GameplayEventData = std::move(GameplayEventData);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.IsHeadShot
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FHitResult&                Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UGA_RangeAttack_Base_C::IsHeadShot(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "IsHeadShot");

	Params::GA_RangeAttack_Base_C_IsHeadShot Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.K2_ActivateAbilityFromEvent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayEventData&        EventData                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UGA_RangeAttack_Base_C::K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "K2_ActivateAbilityFromEvent");

	Params::GA_RangeAttack_Base_C_K2_ActivateAbilityFromEvent Parms{};

	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.OnAbilityEnded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_RangeAttack_Base_C::OnAbilityEnded(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "OnAbilityEnded");

	Params::GA_RangeAttack_Base_C_OnAbilityEnded Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.OnBlendOut_A7C3D00442CFB9327FAB61A7F544AF4E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UAnimNotifyState*           AnimNotifyState                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_RangeAttack_Base_C::OnBlendOut_A7C3D00442CFB9327FAB61A7F544AF4E(class FName NotifyName, const class UAnimNotifyState* AnimNotifyState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "OnBlendOut_A7C3D00442CFB9327FAB61A7F544AF4E");

	Params::GA_RangeAttack_Base_C_OnBlendOut_A7C3D00442CFB9327FAB61A7F544AF4E Parms{};

	Parms.NotifyName = NotifyName;
	Parms.AnimNotifyState = AnimNotifyState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.OnCompleted_A7C3D00442CFB9327FAB61A7F544AF4E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UAnimNotifyState*           AnimNotifyState                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_RangeAttack_Base_C::OnCompleted_A7C3D00442CFB9327FAB61A7F544AF4E(class FName NotifyName, const class UAnimNotifyState* AnimNotifyState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "OnCompleted_A7C3D00442CFB9327FAB61A7F544AF4E");

	Params::GA_RangeAttack_Base_C_OnCompleted_A7C3D00442CFB9327FAB61A7F544AF4E Parms{};

	Parms.NotifyName = NotifyName;
	Parms.AnimNotifyState = AnimNotifyState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.OnInterrupted_A7C3D00442CFB9327FAB61A7F544AF4E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UAnimNotifyState*           AnimNotifyState                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_RangeAttack_Base_C::OnInterrupted_A7C3D00442CFB9327FAB61A7F544AF4E(class FName NotifyName, const class UAnimNotifyState* AnimNotifyState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "OnInterrupted_A7C3D00442CFB9327FAB61A7F544AF4E");

	Params::GA_RangeAttack_Base_C_OnInterrupted_A7C3D00442CFB9327FAB61A7F544AF4E Parms{};

	Parms.NotifyName = NotifyName;
	Parms.AnimNotifyState = AnimNotifyState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.OnMontageNotify
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ends                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UAnimNotifyState*           Notify                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_RangeAttack_Base_C::OnMontageNotify(class FName NotifyName, bool Ends, const class UAnimNotifyState* Notify)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "OnMontageNotify");

	Params::GA_RangeAttack_Base_C_OnMontageNotify Parms{};

	Parms.NotifyName = NotifyName;
	Parms.Ends = Ends;
	Parms.Notify = Notify;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.OnNotifyBegin_A7C3D00442CFB9327FAB61A7F544AF4E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UAnimNotifyState*           AnimNotifyState                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_RangeAttack_Base_C::OnNotifyBegin_A7C3D00442CFB9327FAB61A7F544AF4E(class FName NotifyName, const class UAnimNotifyState* AnimNotifyState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "OnNotifyBegin_A7C3D00442CFB9327FAB61A7F544AF4E");

	Params::GA_RangeAttack_Base_C_OnNotifyBegin_A7C3D00442CFB9327FAB61A7F544AF4E Parms{};

	Parms.NotifyName = NotifyName;
	Parms.AnimNotifyState = AnimNotifyState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.OnNotifyEnd_A7C3D00442CFB9327FAB61A7F544AF4E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UAnimNotifyState*           AnimNotifyState                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_RangeAttack_Base_C::OnNotifyEnd_A7C3D00442CFB9327FAB61A7F544AF4E(class FName NotifyName, const class UAnimNotifyState* AnimNotifyState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "OnNotifyEnd_A7C3D00442CFB9327FAB61A7F544AF4E");

	Params::GA_RangeAttack_Base_C_OnNotifyEnd_A7C3D00442CFB9327FAB61A7F544AF4E Parms{};

	Parms.NotifyName = NotifyName;
	Parms.AnimNotifyState = AnimNotifyState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.PlayImpactVFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// const TMap<EPhysicalSurface, class UNiagaraSystem*>&VFX                                                    (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_RangeAttack_Base_C::PlayImpactVFX(const struct FHitResult& Hit, const TMap<EPhysicalSurface, class UNiagaraSystem*>& VFX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "PlayImpactVFX");

	Params::GA_RangeAttack_Base_C_PlayImpactVFX Parms{};

	Parms.Hit = std::move(Hit);
	Parms.VFX = std::move(VFX);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.PlayRangeAttackAnimation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Animation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_RangeAttack_Base_C::PlayRangeAttackAnimation(class UAnimMontage* Animation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "PlayRangeAttackAnimation");

	Params::GA_RangeAttack_Base_C_PlayRangeAttackAnimation Parms{};

	Parms.Animation = Animation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.PreAttackWarp
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_RangeAttack_Base_C::PreAttackWarp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "PreAttackWarp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.SendHitEvent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTagContainer&     InstigatorTags                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTagContainer&     HitTypeTags                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_RangeAttack_Base_C::SendHitEvent(const struct FGameplayTagContainer& InstigatorTags, class AActor* Actor, const struct FGameplayTagContainer& HitTypeTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "SendHitEvent");

	Params::GA_RangeAttack_Base_C_SendHitEvent Parms{};

	Parms.InstigatorTags = std::move(InstigatorTags);
	Parms.Actor = Actor;
	Parms.HitTypeTags = std::move(HitTypeTags);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.ShootWeapon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGA_RangeAttack_Base_C::ShootWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "ShootWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.SpawnHitSound
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UGA_RangeAttack_Base_C::SpawnHitSound(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "SpawnHitSound");

	Params::GA_RangeAttack_Base_C_SpawnHitSound Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.SpawnNoise
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UGA_RangeAttack_Base_C::SpawnNoise(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "SpawnNoise");

	Params::GA_RangeAttack_Base_C_SpawnNoise Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.SpawnVFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UGA_RangeAttack_Base_C::SpawnVFX(const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "SpawnVFX");

	Params::GA_RangeAttack_Base_C_SpawnVFX Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.ThrowProjectile
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UGA_RangeAttack_Base_C::ThrowProjectile(const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "ThrowProjectile");

	Params::GA_RangeAttack_Base_C_ThrowProjectile Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.TraceToTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FHitResult*                      HitResult                                              (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UGA_RangeAttack_Base_C::TraceToTarget(class ACharacter* Target, struct FHitResult* HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "TraceToTarget");

	Params::GA_RangeAttack_Base_C_TraceToTarget Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (HitResult != nullptr)
		*HitResult = std::move(Parms.HitResult);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.WarpTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             WarpTargetName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_RangeAttack_Base_C::WarpTarget(class FName WarpTargetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "WarpTarget");

	Params::GA_RangeAttack_Base_C_WarpTarget Parms{};

	Parms.WarpTargetName = WarpTargetName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_RangeAttack_Base.GA_RangeAttack_Base_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_RangeAttack_Base_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_RangeAttack_Base_C", "K2_OnEndAbility");

	Params::GA_RangeAttack_Base_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}

}

