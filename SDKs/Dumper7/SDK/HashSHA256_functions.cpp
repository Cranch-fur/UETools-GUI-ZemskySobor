#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HashSHA256

#include "Basic.hpp"

#include "HashSHA256_classes.hpp"
#include "HashSHA256_parameters.hpp"


namespace SDK
{

// Function HashSHA256.HashSHA256BPLibrary.FromArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSHA256Hash&                     SHA256                                                 (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<uint8>&                    Arr                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UHashSHA256BPLibrary::FromArray(struct FSHA256Hash& SHA256, const TArray<uint8>& Arr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HashSHA256BPLibrary", "FromArray");

	Params::HashSHA256BPLibrary_FromArray Parms{};

	Parms.SHA256 = std::move(SHA256);
	Parms.Arr = std::move(Arr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	SHA256 = std::move(Parms.SHA256);
}


// Function HashSHA256.HashSHA256BPLibrary.FromFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSHA256Hash&                     SHA256                                                 (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHashSHA256BPLibrary::FromFile(struct FSHA256Hash& SHA256, const class FString& Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HashSHA256BPLibrary", "FromFile");

	Params::HashSHA256BPLibrary_FromFile Parms{};

	Parms.SHA256 = std::move(SHA256);
	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	SHA256 = std::move(Parms.SHA256);
}


// Function HashSHA256.HashSHA256BPLibrary.FromString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSHA256Hash&                     SHA256                                                 (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    Str                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHashSHA256BPLibrary::FromString(struct FSHA256Hash& SHA256, const class FString& Str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HashSHA256BPLibrary", "FromString");

	Params::HashSHA256BPLibrary_FromString Parms{};

	Parms.SHA256 = std::move(SHA256);
	Parms.Str = std::move(Str);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	SHA256 = std::move(Parms.SHA256);
}


// Function HashSHA256.HashSHA256BPLibrary.GetHash
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSHA256Hash&                     SHA256                                                 (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UHashSHA256BPLibrary::GetHash(struct FSHA256Hash& SHA256)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HashSHA256BPLibrary", "GetHash");

	Params::HashSHA256BPLibrary_GetHash Parms{};

	Parms.SHA256 = std::move(SHA256);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	SHA256 = std::move(Parms.SHA256);

	return Parms.ReturnValue;
}

}

