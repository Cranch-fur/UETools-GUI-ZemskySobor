#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InputPresetSystem

#include "Basic.hpp"

#include "InputPresetSystem_classes.hpp"
#include "InputPresetSystem_parameters.hpp"


namespace SDK
{

// Function InputPresetSystem.InputPresetSubsystem.GetIconFromKey
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FKey&                      Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECommonInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      GamepadName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateBrush*                     OutBrush                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInputPresetSubsystem::GetIconFromKey(const struct FKey& Key, ECommonInputType InputType, const class FName& GamepadName, struct FSlateBrush* OutBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("InputPresetSubsystem", "GetIconFromKey");

	Params::InputPresetSubsystem_GetIconFromKey Parms{};

	Parms.Key = std::move(Key);
	Parms.InputType = InputType;
	Parms.GamepadName = GamepadName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBrush != nullptr)
		*OutBrush = std::move(Parms.OutBrush);

	return Parms.ReturnValue;
}


// Function InputPresetSystem.InputPresetSubsystem.AddMappingContextByTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     Tags                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FModifyContextOptions&     Options                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UInputPresetSubsystem::AddMappingContextByTag(const struct FGameplayTagContainer& Tags, int32 Priority, const struct FModifyContextOptions& Options)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InputPresetSubsystem", "AddMappingContextByTag");

	Params::InputPresetSubsystem_AddMappingContextByTag Parms{};

	Parms.Tags = std::move(Tags);
	Parms.Priority = Priority;
	Parms.Options = std::move(Options);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function InputPresetSystem.InputPresetSubsystem.RegisterAllMappingsInSettingsSystem
// (Final, Native, Public, BlueprintCallable)

void UInputPresetSubsystem::RegisterAllMappingsInSettingsSystem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InputPresetSubsystem", "RegisterAllMappingsInSettingsSystem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function InputPresetSystem.InputPresetSubsystem.ReloadPreset
// (Final, Native, Public, BlueprintCallable)

void UInputPresetSubsystem::ReloadPreset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InputPresetSubsystem", "ReloadPreset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function InputPresetSystem.InputPresetSubsystem.RemoveMappingContextByTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     Tags                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FModifyContextOptions&     Options                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UInputPresetSubsystem::RemoveMappingContextByTag(const struct FGameplayTagContainer& Tags, const struct FModifyContextOptions& Options)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InputPresetSubsystem", "RemoveMappingContextByTag");

	Params::InputPresetSubsystem_RemoveMappingContextByTag Parms{};

	Parms.Tags = std::move(Tags);
	Parms.Options = std::move(Options);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function InputPresetSystem.InputPresetSubsystem.SetMappingsByTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     Tags                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UInputPresetSubsystem::SetMappingsByTags(const struct FGameplayTagContainer& Tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InputPresetSubsystem", "SetMappingsByTags");

	Params::InputPresetSubsystem_SetMappingsByTags Parms{};

	Parms.Tags = std::move(Tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function InputPresetSystem.InputPresetSubsystem.SetPreset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UInputMappingPreset*              NewPreset                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInputPresetSubsystem::SetPreset(class UInputMappingPreset* NewPreset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InputPresetSubsystem", "SetPreset");

	Params::InputPresetSubsystem_SetPreset Parms{};

	Parms.NewPreset = NewPreset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

