#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InventorySystemModule

#include "Basic.hpp"


namespace SDK
{

// Enum InventorySystemModule.EEquipmentSlotType
// NumValues: 0x0008
enum class EEquipmentSlotType : uint8
{
	EST_None                                 = 0,
	EST_Main                                 = 1,
	EST_Secondary                            = 2,
	EST_Stealth                              = 3,
	EST_Range                                = 4,
	EST_Consumable                           = 5,
	EST_SmartObject                          = 6,
	EST_MAX                                  = 7,
};

// Enum InventorySystemModule.EConsumableUseType
// NumValues: 0x0005
enum class EConsumableUseType : uint8
{
	CUST_None                                = 0,
	CUST_Drink                               = 1,
	CUST_Throw                               = 2,
	CUST_Drip                                = 3,
	CUST_MAX                                 = 4,
};

// Enum InventorySystemModule.EPostProcessType
// NumValues: 0x000A
enum class EPostProcessType : uint8
{
	None                                     = 0,
	Fisheye                                  = 1,
	CombatEncounter                          = 2,
	Damage                                   = 3,
	Heal                                     = 4,
	Adrenaline                               = 5,
	Adrenaline_Negative                      = 6,
	LowHP                                    = 7,
	Concentration                            = 8,
	EPostProcessType_MAX                     = 9,
};

// Enum InventorySystemModule.EEquipmentDefenceStyle
// NumValues: 0x0004
enum class EEquipmentDefenceStyle : uint8
{
	DAS_RightHandDefence                     = 0,
	DAS_LeftHandDefence                      = 1,
	DAS_TwoHandedDefence                     = 2,
	DAS_MAX                                  = 3,
};

// Enum InventorySystemModule.EHand
// NumValues: 0x0007
enum class EHand : uint8
{
	Right                                    = 0,
	Left                                     = 1,
	Back                                     = 2,
	ESP_RightFoot                            = 3,
	ESP_LeftFoot                             = 4,
	ESP_Undefined                            = 5,
	EHand_MAX                                = 6,
};

// Enum InventorySystemModule.EEquipmentType
// NumValues: 0x0023
enum class EEquipmentType : uint8
{
	WT_None                                  = 0,
	WT_Axe                                   = 1,
	WT_Saber                                 = 2,
	WT_Bow                                   = 3,
	WT_Berdish                               = 4,
	WT_Knife                                 = 5,
	WT_Spear                                 = 6,
	WT_Sword                                 = 7,
	WT_SaberShield                           = 8,
	WT_Musket                                = 9,
	WT_Pistol                                = 10,
	WT_Rapier                                = 11,
	WT_TwoHandSword                          = 12,
	WT_Oslop                                 = 13,
	WT_AxeOnly                               = 14,
	WT_Boss_Kruchina                         = 15,
	WT_Boss_Mhishek                          = 16,
	WT_Dual_Saber                            = 17,
	WT_Boss_Gregory                          = 18,
	WT_Saber_Pole                            = 19,
	WT_Berdish_Pole                          = 20,
	WT_Oslop_Pole                            = 21,
	WT_AxeOnly_Pole                          = 22,
	WT_Sword_Pole                            = 23,
	WT_Spear_Pole                            = 24,
	WT_Musket_Pole                           = 25,
	WT_DaggerBonus                           = 26,
	WT_ShestoperBonus                        = 27,
	WT_SmallShield                           = 28,
	WT_Shield                                = 29,
	WT_Shestoper                             = 30,
	WT_Rogatina                              = 31,
	WT_ShestoperShield                       = 32,
	WT_Dual_Sword                            = 33,
	WT_MAX                                   = 34,
};

// Enum InventorySystemModule.EWeaponLength
// NumValues: 0x0003
enum class EWeaponLength : uint8
{
	Short                                    = 0,
	Long                                     = 1,
	EWeaponLength_MAX                        = 2,
};

// Enum InventorySystemModule.EEquipmentHandType
// NumValues: 0x0004
enum class EEquipmentHandType : uint8
{
	None                                     = 0,
	SingleHand                               = 1,
	TwoHand                                  = 2,
	EEquipmentHandType_MAX                   = 3,
};

// Enum InventorySystemModule.EAvailableInImagery
// NumValues: 0x0008
enum class EAvailableInImagery : uint8
{
	NONE                                     = 0,
	SHISH                                    = 1,
	BOYAR                                    = 2,
	STRELETC                                 = 4,
	MERCENARY                                = 8,
	BONUS                                    = 16,
	ALL                                      = 255,
	EAvailableInImagery_MAX                  = 256,
};

// ScriptStruct InventorySystemModule.NaturalWeaponData
// 0x0040 (0x0040 - 0x0000)
struct FNaturalWeaponData final
{
public:
	EHand                                         EquipmentSlotPlace;                                // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UStaticMesh>             Mesh;                                              // 0x0008(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MeshAttachmentSlotName;                            // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVisible;                                          // 0x0038(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FNaturalWeaponData;

// ScriptStruct InventorySystemModule.EquipInfo
// 0x0040 (0x0040 - 0x0000)
struct FEquipInfo final
{
public:
	TSoftObjectPtr<class UStaticMesh>             Mesh;                                              // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DefaultSocket;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipmentType                                Type;                                              // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWeaponLength                                 WeaponLength;                                      // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedShow;                                         // 0x0032(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedHaveAdditionalWeapon;                         // 0x0033(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseAsAdditionalWeapon;                            // 0x0034(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAvailableInImagery                           Availability;                                      // 0x0035(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipmentItemAdditionalAnimSettings*   EquipmentAdditionalAnimSettings;                   // 0x0038(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FEquipInfo;

// ScriptStruct InventorySystemModule.EquipmentParameters
// 0x0010 (0x0010 - 0x0000)
struct FEquipmentParameters final
{
public:
	TArray<TSubclassOf<class UGameplayEffect>>    WeaponEffects;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FEquipmentParameters;

}

