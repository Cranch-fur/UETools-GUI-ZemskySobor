#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MM_SixSenseScale

#include "Basic.hpp"

#include "MM_SixSenseScale_classes.hpp"
#include "MM_SixSenseScale_parameters.hpp"


namespace SDK
{

// Function MM_SixSenseScale.MM_SixSenseScale_C.GetCurveFromTraits
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UAITraitsBase*                    Traits                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat**                     Curve                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UMM_SixSenseScale_C::GetCurveFromTraits(class UAITraitsBase* Traits, class UCurveFloat** Curve) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_SixSenseScale_C", "GetCurveFromTraits");

	Params::MM_SixSenseScale_C_GetCurveFromTraits Parms{};

	Parms.Traits = Traits;

	UObject::ProcessEvent(Func, &Parms);

	if (Curve != nullptr)
		*Curve = Parms.Curve;
}


// Function MM_SixSenseScale.MM_SixSenseScale_C.GetSightRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UAIPerceptionComponent*           PerceptionComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double*                                 Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMM_SixSenseScale_C::GetSightRadius(class UAIPerceptionComponent* PerceptionComponent, double* Radius) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_SixSenseScale_C", "GetSightRadius");

	Params::MM_SixSenseScale_C_GetSightRadius Parms{};

	Parms.PerceptionComponent = PerceptionComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (Radius != nullptr)
		*Radius = Parms.Radius;
}

}

