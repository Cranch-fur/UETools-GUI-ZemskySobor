#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NPC_CH_NewBattleSystem_Boss

#include "Basic.hpp"

#include "NPC_CH_NewBattleSystem_Boss_classes.hpp"
#include "NPC_CH_NewBattleSystem_Boss_parameters.hpp"


namespace SDK
{

// Function NPC_CH_NewBattleSystem_Boss.NPC_CH_NewBattleSystem_Boss_C.ExecuteUbergraph_NPC_CH_NewBattleSystem_Boss
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_CH_NewBattleSystem_Boss_C::ExecuteUbergraph_NPC_CH_NewBattleSystem_Boss(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_CH_NewBattleSystem_Boss_C", "ExecuteUbergraph_NPC_CH_NewBattleSystem_Boss");

	Params::NPC_CH_NewBattleSystem_Boss_C_ExecuteUbergraph_NPC_CH_NewBattleSystem_Boss Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_CH_NewBattleSystem_Boss.NPC_CH_NewBattleSystem_Boss_C.OnTagChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              UpdatedTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    Exists                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_CH_NewBattleSystem_Boss_C::OnTagChanged(const struct FGameplayTag& UpdatedTag, bool Exists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_CH_NewBattleSystem_Boss_C", "OnTagChanged");

	Params::NPC_CH_NewBattleSystem_Boss_C_OnTagChanged Parms{};

	Parms.UpdatedTag = std::move(UpdatedTag);
	Parms.Exists = Exists;

	UObject::ProcessEvent(Func, &Parms);
}

}

