#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QC_KillMultipleByPassport

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FlexibleQuestsRuntime_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass QC_KillMultipleByPassport.QC_KillMultipleByPassport_C
// 0x0030 (0x0088 - 0x0058)
class UQC_KillMultipleByPassport_C final : public UQuestStepCondition
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0058(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPassport_C*                            Passport;                                          // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberToKill;                                      // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         AlreadyKilled;                                     // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         AlreadyKilledActors;                               // 0x0070(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          ConsiderSleepingAsKilled;                          // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddKilled(class AActor* KilledActor);
	void EndCondition_K2();
	void ExecuteUbergraph_QC_KillMultipleByPassport(int32 EntryPoint);
	void HandleCharacterWakeUp(class ADefaultCharacter* Character);
	void OnCharacterDefeated(class ADefaultCharacter* Character);
	void StartCondition_K2();
	void TargetsUpdate();
	void TryRegisterCharacter(const class ADefaultCharacter*& Character);
	void TryUpdateTargets(class ADefaultCharacter* Character);

	class FText GetConditionText() const;

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("QC_KillMultipleByPassport_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"QC_KillMultipleByPassport_C")
	}
	static class UQC_KillMultipleByPassport_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQC_KillMultipleByPassport_C>();
	}
};
DUMPER7_ASSERTS_UQC_KillMultipleByPassport_C;

}

