#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QC_KillMultipleByPassport

#include "Basic.hpp"

#include "QC_KillMultipleByPassport_classes.hpp"
#include "QC_KillMultipleByPassport_parameters.hpp"


namespace SDK
{

// Function QC_KillMultipleByPassport.QC_KillMultipleByPassport_C.AddKilled
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           KilledActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UQC_KillMultipleByPassport_C::AddKilled(class AActor* KilledActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_KillMultipleByPassport_C", "AddKilled");

	Params::QC_KillMultipleByPassport_C_AddKilled Parms{};

	Parms.KilledActor = KilledActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QC_KillMultipleByPassport.QC_KillMultipleByPassport_C.EndCondition_K2
// (Event, Protected, BlueprintEvent)

void UQC_KillMultipleByPassport_C::EndCondition_K2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_KillMultipleByPassport_C", "EndCondition_K2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QC_KillMultipleByPassport.QC_KillMultipleByPassport_C.ExecuteUbergraph_QC_KillMultipleByPassport
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQC_KillMultipleByPassport_C::ExecuteUbergraph_QC_KillMultipleByPassport(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_KillMultipleByPassport_C", "ExecuteUbergraph_QC_KillMultipleByPassport");

	Params::QC_KillMultipleByPassport_C_ExecuteUbergraph_QC_KillMultipleByPassport Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QC_KillMultipleByPassport.QC_KillMultipleByPassport_C.HandleCharacterWakeUp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADefaultCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UQC_KillMultipleByPassport_C::HandleCharacterWakeUp(class ADefaultCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_KillMultipleByPassport_C", "HandleCharacterWakeUp");

	Params::QC_KillMultipleByPassport_C_HandleCharacterWakeUp Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QC_KillMultipleByPassport.QC_KillMultipleByPassport_C.OnCharacterDefeated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADefaultCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UQC_KillMultipleByPassport_C::OnCharacterDefeated(class ADefaultCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_KillMultipleByPassport_C", "OnCharacterDefeated");

	Params::QC_KillMultipleByPassport_C_OnCharacterDefeated Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QC_KillMultipleByPassport.QC_KillMultipleByPassport_C.StartCondition_K2
// (Event, Protected, BlueprintEvent)

void UQC_KillMultipleByPassport_C::StartCondition_K2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_KillMultipleByPassport_C", "StartCondition_K2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QC_KillMultipleByPassport.QC_KillMultipleByPassport_C.TargetsUpdate
// (Event, Protected, BlueprintEvent)

void UQC_KillMultipleByPassport_C::TargetsUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_KillMultipleByPassport_C", "TargetsUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QC_KillMultipleByPassport.QC_KillMultipleByPassport_C.TryRegisterCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class ADefaultCharacter*&         Character                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UQC_KillMultipleByPassport_C::TryRegisterCharacter(const class ADefaultCharacter*& Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_KillMultipleByPassport_C", "TryRegisterCharacter");

	Params::QC_KillMultipleByPassport_C_TryRegisterCharacter Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QC_KillMultipleByPassport.QC_KillMultipleByPassport_C.TryUpdateTargets
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADefaultCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UQC_KillMultipleByPassport_C::TryUpdateTargets(class ADefaultCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_KillMultipleByPassport_C", "TryUpdateTargets");

	Params::QC_KillMultipleByPassport_C_TryUpdateTargets Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QC_KillMultipleByPassport.QC_KillMultipleByPassport_C.GetConditionText
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UQC_KillMultipleByPassport_C::GetConditionText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_KillMultipleByPassport_C", "GetConditionText");

	Params::QC_KillMultipleByPassport_C_GetConditionText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

