#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QC_Overlap

#include "Basic.hpp"

#include "QC_Overlap_classes.hpp"
#include "QC_Overlap_parameters.hpp"


namespace SDK
{

// Function QC_Overlap.QC_Overlap_C.EndCondition_K2
// (Event, Protected, BlueprintEvent)

void UQC_Overlap_C::EndCondition_K2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_Overlap_C", "EndCondition_K2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QC_Overlap.QC_Overlap_C.ExecuteUbergraph_QC_Overlap
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQC_Overlap_C::ExecuteUbergraph_QC_Overlap(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_Overlap_C", "ExecuteUbergraph_QC_Overlap");

	Params::QC_Overlap_C_ExecuteUbergraph_QC_Overlap Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QC_Overlap.QC_Overlap_C.OnTargetOverlapBegin
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UQC_Overlap_C::OnTargetOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_Overlap_C", "OnTargetOverlapBegin");

	Params::QC_Overlap_C_OnTargetOverlapBegin Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QC_Overlap.QC_Overlap_C.OnTargetOverlapEnd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UQC_Overlap_C::OnTargetOverlapEnd(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_Overlap_C", "OnTargetOverlapEnd");

	Params::QC_Overlap_C_OnTargetOverlapEnd Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QC_Overlap.QC_Overlap_C.TargetsUpdate
// (Event, Protected, BlueprintEvent)

void UQC_Overlap_C::TargetsUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_Overlap_C", "TargetsUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QC_Overlap.QC_Overlap_C.GetConditionText
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UQC_Overlap_C::GetConditionText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_Overlap_C", "GetConditionText");

	Params::QC_Overlap_C_GetConditionText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

