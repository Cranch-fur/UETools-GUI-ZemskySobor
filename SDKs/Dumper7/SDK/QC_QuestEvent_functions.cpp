#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QC_QuestEvent

#include "Basic.hpp"

#include "QC_QuestEvent_classes.hpp"
#include "QC_QuestEvent_parameters.hpp"


namespace SDK
{

// Function QC_QuestEvent.QC_QuestEvent_C.DuplicateSideMarker
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ANPC_CH_C*                        NPC                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UQC_QuestEvent_C::DuplicateSideMarker(class ANPC_CH_C* NPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_QuestEvent_C", "DuplicateSideMarker");

	Params::QC_QuestEvent_C_DuplicateSideMarker Parms{};

	Parms.NPC = NPC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QC_QuestEvent.QC_QuestEvent_C.EndCondition_K2
// (Event, Protected, BlueprintEvent)

void UQC_QuestEvent_C::EndCondition_K2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_QuestEvent_C", "EndCondition_K2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QC_QuestEvent.QC_QuestEvent_C.ExecuteUbergraph_QC_QuestEvent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQC_QuestEvent_C::ExecuteUbergraph_QC_QuestEvent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_QuestEvent_C", "ExecuteUbergraph_QC_QuestEvent");

	Params::QC_QuestEvent_C_ExecuteUbergraph_QC_QuestEvent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QC_QuestEvent.QC_QuestEvent_C.Find available dialogue targets
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UQC_QuestEvent_C::Find_available_dialogue_targets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_QuestEvent_C", "Find available dialogue targets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QC_QuestEvent.QC_QuestEvent_C.TagEvent
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// const class UObject*                    EventCauser                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UQC_QuestEvent_C::TagEvent(const struct FGameplayTag& Tag, const class UObject* EventCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_QuestEvent_C", "TagEvent");

	Params::QC_QuestEvent_C_TagEvent Parms{};

	Parms.Tag = std::move(Tag);
	Parms.EventCauser = EventCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QC_QuestEvent.QC_QuestEvent_C.TargetsUpdate
// (Event, Protected, BlueprintEvent)

void UQC_QuestEvent_C::TargetsUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_QuestEvent_C", "TargetsUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QC_QuestEvent.QC_QuestEvent_C.GetConditionText
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UQC_QuestEvent_C::GetConditionText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_QuestEvent_C", "GetConditionText");

	Params::QC_QuestEvent_C_GetConditionText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

