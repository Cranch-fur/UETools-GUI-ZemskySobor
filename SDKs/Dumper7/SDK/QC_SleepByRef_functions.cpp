#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QC_SleepByRef

#include "Basic.hpp"

#include "QC_SleepByRef_classes.hpp"
#include "QC_SleepByRef_parameters.hpp"


namespace SDK
{

// Function QC_SleepByRef.QC_SleepByRef_C.EndCondition_K2
// (Event, Protected, BlueprintEvent)

void UQC_SleepByRef_C::EndCondition_K2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_SleepByRef_C", "EndCondition_K2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QC_SleepByRef.QC_SleepByRef_C.ExecuteUbergraph_QC_SleepByRef
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQC_SleepByRef_C::ExecuteUbergraph_QC_SleepByRef(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_SleepByRef_C", "ExecuteUbergraph_QC_SleepByRef");

	Params::QC_SleepByRef_C_ExecuteUbergraph_QC_SleepByRef Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QC_SleepByRef.QC_SleepByRef_C.OnTagChanged_Event
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              UpdatedTag                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    Exists                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQC_SleepByRef_C::OnTagChanged_Event(const struct FGameplayTag& UpdatedTag, bool Exists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_SleepByRef_C", "OnTagChanged_Event");

	Params::QC_SleepByRef_C_OnTagChanged_Event Parms{};

	Parms.UpdatedTag = std::move(UpdatedTag);
	Parms.Exists = Exists;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QC_SleepByRef.QC_SleepByRef_C.TargetsUpdate
// (Event, Protected, BlueprintEvent)

void UQC_SleepByRef_C::TargetsUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_SleepByRef_C", "TargetsUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QC_SleepByRef.QC_SleepByRef_C.GetConditionText
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UQC_SleepByRef_C::GetConditionText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QC_SleepByRef_C", "GetConditionText");

	Params::QC_SleepByRef_C_GetConditionText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

