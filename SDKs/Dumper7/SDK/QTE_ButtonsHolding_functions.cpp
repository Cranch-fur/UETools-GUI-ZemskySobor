#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QTE_ButtonsHolding

#include "Basic.hpp"

#include "QTE_ButtonsHolding_classes.hpp"
#include "QTE_ButtonsHolding_parameters.hpp"


namespace SDK
{

// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.BndEvt__A_Arm_A2_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AQTE_ButtonsHolding_C::BndEvt__A_Arm_A2_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "BndEvt__A_Arm_A2_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::QTE_ButtonsHolding_C_BndEvt__A_Arm_A2_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.CheckPassString
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AQTE_ButtonsHolding_C::CheckPassString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "CheckPassString");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.CheckPressed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EQTE_Direction                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Left                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   res                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Wrong                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::CheckPressed(EQTE_Direction Direction, bool Left, bool* res, bool* Wrong)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "CheckPressed");

	Params::QTE_ButtonsHolding_C_CheckPressed Parms{};

	Parms.Direction = Direction;
	Parms.Left = Left;

	UObject::ProcessEvent(Func, &Parms);

	if (res != nullptr)
		*res = Parms.res;

	if (Wrong != nullptr)
		*Wrong = Parms.Wrong;
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.ExecuteUbergraph_QTE_ButtonsHolding
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::ExecuteUbergraph_QTE_ButtonsHolding(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "ExecuteUbergraph_QTE_ButtonsHolding");

	Params::QTE_ButtonsHolding_C_ExecuteUbergraph_QTE_ButtonsHolding Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.GetInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString*                          Value                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::GetInfo(class FString* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "GetInfo");

	Params::QTE_ButtonsHolding_C_GetInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = std::move(Parms.Value);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.IncreaseScore
// (BlueprintCallable, BlueprintEvent)

void AQTE_ButtonsHolding_C::IncreaseScore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "IncreaseScore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InitKeys
// (BlueprintCallable, BlueprintEvent)

void AQTE_ButtonsHolding_C::InitKeys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InitKeys");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_AnyKey_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_AnyKey_K2Node_InputKeyEvent_0");

	Params::QTE_ButtonsHolding_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_AnyKey_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_AnyKey_K2Node_InputKeyEvent_1");

	Params::QTE_ButtonsHolding_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_BHDown_K2Node_EnhancedInputActionEvent_18
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_BHDown_K2Node_EnhancedInputActionEvent_18(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_BHDown_K2Node_EnhancedInputActionEvent_18");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_BHDown_K2Node_EnhancedInputActionEvent_18 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_BHDown_K2Node_EnhancedInputActionEvent_19
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_BHDown_K2Node_EnhancedInputActionEvent_19(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_BHDown_K2Node_EnhancedInputActionEvent_19");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_BHDown_K2Node_EnhancedInputActionEvent_19 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_BHLeft_K2Node_EnhancedInputActionEvent_22
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_BHLeft_K2Node_EnhancedInputActionEvent_22(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_BHLeft_K2Node_EnhancedInputActionEvent_22");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_BHLeft_K2Node_EnhancedInputActionEvent_22 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_BHLeft_K2Node_EnhancedInputActionEvent_23
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_BHLeft_K2Node_EnhancedInputActionEvent_23(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_BHLeft_K2Node_EnhancedInputActionEvent_23");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_BHLeft_K2Node_EnhancedInputActionEvent_23 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_BHRight_K2Node_EnhancedInputActionEvent_20
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_BHRight_K2Node_EnhancedInputActionEvent_20(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_BHRight_K2Node_EnhancedInputActionEvent_20");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_BHRight_K2Node_EnhancedInputActionEvent_20 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_BHRight_K2Node_EnhancedInputActionEvent_21
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_BHRight_K2Node_EnhancedInputActionEvent_21(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_BHRight_K2Node_EnhancedInputActionEvent_21");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_BHRight_K2Node_EnhancedInputActionEvent_21 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_BHUp_K2Node_EnhancedInputActionEvent_16
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_BHUp_K2Node_EnhancedInputActionEvent_16(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_BHUp_K2Node_EnhancedInputActionEvent_16");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_BHUp_K2Node_EnhancedInputActionEvent_16 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_BHUp_K2Node_EnhancedInputActionEvent_17
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_BHUp_K2Node_EnhancedInputActionEvent_17(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_BHUp_K2Node_EnhancedInputActionEvent_17");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_BHUp_K2Node_EnhancedInputActionEvent_17 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_GiveUp_K2Node_EnhancedInputActionEvent_24
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_GiveUp_K2Node_EnhancedInputActionEvent_24(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_GiveUp_K2Node_EnhancedInputActionEvent_24");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_GiveUp_K2Node_EnhancedInputActionEvent_24 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_GiveUp_K2Node_EnhancedInputActionEvent_25
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_GiveUp_K2Node_EnhancedInputActionEvent_25(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_GiveUp_K2Node_EnhancedInputActionEvent_25");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_GiveUp_K2Node_EnhancedInputActionEvent_25 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_TumbstikLeftDown_K2Node_EnhancedInputActionEvent_14
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_TumbstikLeftDown_K2Node_EnhancedInputActionEvent_14(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_TumbstikLeftDown_K2Node_EnhancedInputActionEvent_14");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_TumbstikLeftDown_K2Node_EnhancedInputActionEvent_14 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_TumbstikLeftDown_K2Node_EnhancedInputActionEvent_15
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_TumbstikLeftDown_K2Node_EnhancedInputActionEvent_15(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_TumbstikLeftDown_K2Node_EnhancedInputActionEvent_15");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_TumbstikLeftDown_K2Node_EnhancedInputActionEvent_15 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_TumbstikLeftLeft_K2Node_EnhancedInputActionEvent_12
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_TumbstikLeftLeft_K2Node_EnhancedInputActionEvent_12(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_TumbstikLeftLeft_K2Node_EnhancedInputActionEvent_12");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_TumbstikLeftLeft_K2Node_EnhancedInputActionEvent_12 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_TumbstikLeftLeft_K2Node_EnhancedInputActionEvent_13
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_TumbstikLeftLeft_K2Node_EnhancedInputActionEvent_13(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_TumbstikLeftLeft_K2Node_EnhancedInputActionEvent_13");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_TumbstikLeftLeft_K2Node_EnhancedInputActionEvent_13 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_TumbstikLeftRight_K2Node_EnhancedInputActionEvent_10
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_TumbstikLeftRight_K2Node_EnhancedInputActionEvent_10(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_TumbstikLeftRight_K2Node_EnhancedInputActionEvent_10");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_TumbstikLeftRight_K2Node_EnhancedInputActionEvent_10 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_TumbstikLeftRight_K2Node_EnhancedInputActionEvent_11
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_TumbstikLeftRight_K2Node_EnhancedInputActionEvent_11(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_TumbstikLeftRight_K2Node_EnhancedInputActionEvent_11");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_TumbstikLeftRight_K2Node_EnhancedInputActionEvent_11 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_TumbstikLeftUp_K2Node_EnhancedInputActionEvent_8
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_TumbstikLeftUp_K2Node_EnhancedInputActionEvent_8(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_TumbstikLeftUp_K2Node_EnhancedInputActionEvent_8");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_TumbstikLeftUp_K2Node_EnhancedInputActionEvent_8 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_TumbstikLeftUp_K2Node_EnhancedInputActionEvent_9
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_TumbstikLeftUp_K2Node_EnhancedInputActionEvent_9(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_TumbstikLeftUp_K2Node_EnhancedInputActionEvent_9");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_TumbstikLeftUp_K2Node_EnhancedInputActionEvent_9 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_TumbstikRightDown_K2Node_EnhancedInputActionEvent_6
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_TumbstikRightDown_K2Node_EnhancedInputActionEvent_6(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_TumbstikRightDown_K2Node_EnhancedInputActionEvent_6");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_TumbstikRightDown_K2Node_EnhancedInputActionEvent_6 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_TumbstikRightDown_K2Node_EnhancedInputActionEvent_7
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_TumbstikRightDown_K2Node_EnhancedInputActionEvent_7(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_TumbstikRightDown_K2Node_EnhancedInputActionEvent_7");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_TumbstikRightDown_K2Node_EnhancedInputActionEvent_7 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_TumbstikRightLeft_K2Node_EnhancedInputActionEvent_4
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_TumbstikRightLeft_K2Node_EnhancedInputActionEvent_4(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_TumbstikRightLeft_K2Node_EnhancedInputActionEvent_4");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_TumbstikRightLeft_K2Node_EnhancedInputActionEvent_4 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_TumbstikRightLeft_K2Node_EnhancedInputActionEvent_5
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_TumbstikRightLeft_K2Node_EnhancedInputActionEvent_5(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_TumbstikRightLeft_K2Node_EnhancedInputActionEvent_5");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_TumbstikRightLeft_K2Node_EnhancedInputActionEvent_5 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_TumbstikRightRight_K2Node_EnhancedInputActionEvent_2
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_TumbstikRightRight_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_TumbstikRightRight_K2Node_EnhancedInputActionEvent_2");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_TumbstikRightRight_K2Node_EnhancedInputActionEvent_2 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_TumbstikRightRight_K2Node_EnhancedInputActionEvent_3
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_TumbstikRightRight_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_TumbstikRightRight_K2Node_EnhancedInputActionEvent_3");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_TumbstikRightRight_K2Node_EnhancedInputActionEvent_3 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_TumbstikRightUp_K2Node_EnhancedInputActionEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_TumbstikRightUp_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_TumbstikRightUp_K2Node_EnhancedInputActionEvent_0");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_TumbstikRightUp_K2Node_EnhancedInputActionEvent_0 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.InpActEvt_IA_TumbstikRightUp_K2Node_EnhancedInputActionEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::InpActEvt_IA_TumbstikRightUp_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "InpActEvt_IA_TumbstikRightUp_K2Node_EnhancedInputActionEvent_1");

	Params::QTE_ButtonsHolding_C_InpActEvt_IA_TumbstikRightUp_K2Node_EnhancedInputActionEvent_1 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.Minigameresult
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::Minigameresult(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "Minigameresult");

	Params::QTE_ButtonsHolding_C_Minigameresult Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.NextStage
// (BlueprintCallable, BlueprintEvent)

void AQTE_ButtonsHolding_C::NextStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "NextStage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.PlayFailedAnimation
// (BlueprintCallable, BlueprintEvent)

void AQTE_ButtonsHolding_C::PlayFailedAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "PlayFailedAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AQTE_ButtonsHolding_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.ReceiveUnpossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      OldController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::ReceiveUnpossessed(class AController* OldController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "ReceiveUnpossessed");

	Params::QTE_ButtonsHolding_C_ReceiveUnpossessed Parms{};

	Parms.OldController = OldController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.Reset Score
// (BlueprintCallable, BlueprintEvent)

void AQTE_ButtonsHolding_C::Reset_Score()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "Reset Score");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.RoadTimer
// (BlueprintCallable, BlueprintEvent)

void AQTE_ButtonsHolding_C::RoadTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "RoadTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.Set Round Time
// (Public, BlueprintCallable, BlueprintEvent)

void AQTE_ButtonsHolding_C::Set_Round_Time()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "Set Round Time");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.SetTargetKeys
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AQTE_ButtonsHolding_C::SetTargetKeys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "SetTargetKeys");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.Start Game
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AQTE_Station_C*                   QTEStation_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    AutoWin                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PreviewTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::Start_Game(class APawn* Player_0, class AQTE_Station_C* QTEStation_0, bool AutoWin, double PreviewTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "Start Game");

	Params::QTE_ButtonsHolding_C_Start_Game Parms{};

	Parms.Player_0 = Player_0;
	Parms.QTEStation_0 = QTEStation_0;
	Parms.AutoWin = AutoWin;
	Parms.PreviewTime = PreviewTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.Start Increase Score
// (BlueprintCallable, BlueprintEvent)

void AQTE_ButtonsHolding_C::Start_Increase_Score()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "Start Increase Score");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.StopGame
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PlayerWin_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Canceled_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::StopGame(bool PlayerWin_0, bool Canceled_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "StopGame");

	Params::QTE_ButtonsHolding_C_StopGame Parms{};

	Parms.PlayerWin_0 = PlayerWin_0;
	Parms.Canceled_0 = Canceled_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.Timer
// (BlueprintCallable, BlueprintEvent)

void AQTE_ButtonsHolding_C::Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QTE_ButtonsHolding.QTE_ButtonsHolding_C.UpdateInput
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Pressed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AQTE_ButtonsHolding_C::UpdateInput(bool Pressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_ButtonsHolding_C", "UpdateInput");

	Params::QTE_ButtonsHolding_C_UpdateInput Parms{};

	Parms.Pressed = Pressed;

	UObject::ProcessEvent(Func, &Parms);
}

}

