#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QTE_QuickTapping

#include "Basic.hpp"

#include "QTE_QuickTapping_classes.hpp"
#include "QTE_QuickTapping_parameters.hpp"


namespace SDK
{

// Function QTE_QuickTapping.QTE_QuickTapping_C.BndEvt__A_Arm_A2_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AQTE_QuickTapping_C::BndEvt__A_Arm_A2_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_QuickTapping_C", "BndEvt__A_Arm_A2_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::QTE_QuickTapping_C_BndEvt__A_Arm_A2_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_QuickTapping.QTE_QuickTapping_C.ExecuteUbergraph_QTE_QuickTapping
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AQTE_QuickTapping_C::ExecuteUbergraph_QTE_QuickTapping(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_QuickTapping_C", "ExecuteUbergraph_QTE_QuickTapping");

	Params::QTE_QuickTapping_C_ExecuteUbergraph_QTE_QuickTapping Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_QuickTapping.QTE_QuickTapping_C.Finished_CFE56B8442249EEEC1F467B86B638ECC
// (BlueprintCallable, BlueprintEvent)

void AQTE_QuickTapping_C::Finished_CFE56B8442249EEEC1F467B86B638ECC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_QuickTapping_C", "Finished_CFE56B8442249EEEC1F467B86B638ECC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QTE_QuickTapping.QTE_QuickTapping_C.GetInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString*                          Value                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void AQTE_QuickTapping_C::GetInfo(class FString* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_QuickTapping_C", "GetInfo");

	Params::QTE_QuickTapping_C_GetInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = std::move(Parms.Value);
}


// Function QTE_QuickTapping.QTE_QuickTapping_C.GivePoints
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ToAdd                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AQTE_QuickTapping_C::GivePoints(double ToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_QuickTapping_C", "GivePoints");

	Params::QTE_QuickTapping_C_GivePoints Parms{};

	Parms.ToAdd = ToAdd;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_QuickTapping.QTE_QuickTapping_C.Hit Progress
// (BlueprintCallable, BlueprintEvent)

void AQTE_QuickTapping_C::Hit_Progress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_QuickTapping_C", "Hit Progress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QTE_QuickTapping.QTE_QuickTapping_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AQTE_QuickTapping_C::InpActEvt_AnyKey_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_QuickTapping_C", "InpActEvt_AnyKey_K2Node_InputKeyEvent_0");

	Params::QTE_QuickTapping_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_QuickTapping.QTE_QuickTapping_C.InpActEvt_IA_GiveUp_K2Node_EnhancedInputActionEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_QuickTapping_C::InpActEvt_IA_GiveUp_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_QuickTapping_C", "InpActEvt_IA_GiveUp_K2Node_EnhancedInputActionEvent_0");

	Params::QTE_QuickTapping_C_InpActEvt_IA_GiveUp_K2Node_EnhancedInputActionEvent_0 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_QuickTapping.QTE_QuickTapping_C.InpActEvt_IA_GiveUp_K2Node_EnhancedInputActionEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_QuickTapping_C::InpActEvt_IA_GiveUp_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_QuickTapping_C", "InpActEvt_IA_GiveUp_K2Node_EnhancedInputActionEvent_1");

	Params::QTE_QuickTapping_C_InpActEvt_IA_GiveUp_K2Node_EnhancedInputActionEvent_1 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_QuickTapping.QTE_QuickTapping_C.InpActEvt_IA_QuickTappingAction_K2Node_EnhancedInputActionEvent_2
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_QuickTapping_C::InpActEvt_IA_QuickTappingAction_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_QuickTapping_C", "InpActEvt_IA_QuickTappingAction_K2Node_EnhancedInputActionEvent_2");

	Params::QTE_QuickTapping_C_InpActEvt_IA_QuickTappingAction_K2Node_EnhancedInputActionEvent_2 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_QuickTapping.QTE_QuickTapping_C.InpActEvt_IA_QuickTappingAction_K2Node_EnhancedInputActionEvent_3
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_QuickTapping_C::InpActEvt_IA_QuickTappingAction_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_QuickTapping_C", "InpActEvt_IA_QuickTappingAction_K2Node_EnhancedInputActionEvent_3");

	Params::QTE_QuickTapping_C_InpActEvt_IA_QuickTappingAction_K2Node_EnhancedInputActionEvent_3 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_QuickTapping.QTE_QuickTapping_C.Minigameresult
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AQTE_QuickTapping_C::Minigameresult(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_QuickTapping_C", "Minigameresult");

	Params::QTE_QuickTapping_C_Minigameresult Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_QuickTapping.QTE_QuickTapping_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AQTE_QuickTapping_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_QuickTapping_C", "ReceiveTick");

	Params::QTE_QuickTapping_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_QuickTapping.QTE_QuickTapping_C.ReceiveUnpossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      OldController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AQTE_QuickTapping_C::ReceiveUnpossessed(class AController* OldController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_QuickTapping_C", "ReceiveUnpossessed");

	Params::QTE_QuickTapping_C_ReceiveUnpossessed Parms{};

	Parms.OldController = OldController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_QuickTapping.QTE_QuickTapping_C.RoadTimer
// (BlueprintCallable, BlueprintEvent)

void AQTE_QuickTapping_C::RoadTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_QuickTapping_C", "RoadTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QTE_QuickTapping.QTE_QuickTapping_C.Start Game
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AQTE_Station_C*                   QTEStation_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    AutoWin                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PreviewTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AQTE_QuickTapping_C::Start_Game(class APawn* Player_0, class AQTE_Station_C* QTEStation_0, bool AutoWin, double PreviewTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_QuickTapping_C", "Start Game");

	Params::QTE_QuickTapping_C_Start_Game Parms{};

	Parms.Player_0 = Player_0;
	Parms.QTEStation_0 = QTEStation_0;
	Parms.AutoWin = AutoWin;
	Parms.PreviewTime = PreviewTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_QuickTapping.QTE_QuickTapping_C.Stop GameInternal
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PlayerWin_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Canceled_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AQTE_QuickTapping_C::Stop_GameInternal(bool PlayerWin_0, bool Canceled_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_QuickTapping_C", "Stop GameInternal");

	Params::QTE_QuickTapping_C_Stop_GameInternal Parms{};

	Parms.PlayerWin_0 = PlayerWin_0;
	Parms.Canceled_0 = Canceled_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_QuickTapping.QTE_QuickTapping_C.StopGame
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PlayerWin_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Canceled_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AQTE_QuickTapping_C::StopGame(bool PlayerWin_0, bool Canceled_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_QuickTapping_C", "StopGame");

	Params::QTE_QuickTapping_C_StopGame Parms{};

	Parms.PlayerWin_0 = PlayerWin_0;
	Parms.Canceled_0 = Canceled_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_QuickTapping.QTE_QuickTapping_C.TimedLog
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    InStr                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AQTE_QuickTapping_C::TimedLog(const class FString& InStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_QuickTapping_C", "TimedLog");

	Params::QTE_QuickTapping_C_TimedLog Parms{};

	Parms.InStr = std::move(InStr);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QTE_QuickTapping.QTE_QuickTapping_C.Timer
// (BlueprintCallable, BlueprintEvent)

void AQTE_QuickTapping_C::Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QTE_QuickTapping_C", "Timer");

	UObject::ProcessEvent(Func, nullptr);
}

}

