#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Smuta

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayAbilities_classes.hpp"
#include "Smuta_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "InventorySystemModule_structs.hpp"
#include "InventorySystemModule_classes.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FlexibleQuestsRuntime_structs.hpp"
#include "FlexibleQuestsRuntime_classes.hpp"
#include "UMG_classes.hpp"
#include "EnchancedSpline_classes.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "GameDifficultyModule_structs.hpp"
#include "AITeamFight_structs.hpp"
#include "AITeamFight_classes.hpp"
#include "CommonUI_classes.hpp"
#include "InteractionSystem_classes.hpp"
#include "SmutaCommon_structs.hpp"
#include "AnimGraphRuntime_classes.hpp"
#include "CombatHitDetection_structs.hpp"
#include "DeveloperSettings_classes.hpp"
#include "EasyMultiSave_classes.hpp"
#include "SubtitlesSystem_structs.hpp"
#include "DlgSystem_classes.hpp"
#include "PhysicsCore_structs.hpp"
#include "MotionWarping_classes.hpp"
#include "SettingsSystem_classes.hpp"
#include "EnhancedInput_classes.hpp"
#include "SignificanceManager_classes.hpp"
#include "AnimToTexture_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK
{

// Class Smuta.ReactionCondition
// 0x0010 (0x0038 - 0x0028)
class UReactionCondition : public UObject
{
public:
	class AActor*                                 Owner;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool CheckCondition();
	void StartCondition(class AActor* OwnerActor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReactionCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReactionCondition")
	}
	static class UReactionCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReactionCondition>();
	}
};
DUMPER7_ASSERTS_UReactionCondition;

// Class Smuta.ActorTagCondition
// 0x0058 (0x0090 - 0x0038)
class UActorTagCondition : public UReactionCondition
{
public:
	bool                                          Result;                                            // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_39[0x57];                                      // 0x0039(0x0057)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void InitCondition(const struct FGameplayTagQuery& InQuery, class AActor* InActor);
	void OnActorTagChanged(const struct FGameplayTag& UpdatedTag, bool Exists);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActorTagCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActorTagCondition")
	}
	static class UActorTagCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActorTagCondition>();
	}
};
DUMPER7_ASSERTS_UActorTagCondition;

// Class Smuta.AbilityBase
// 0x00A8 (0x0460 - 0x03B8)
class UAbilityBase : public UGameplayAbility
{
public:
	EAbilityInputID                               AbilityInputID;                                    // 0x03B8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bActivateOnInput;                                  // 0x03B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3BA[0x6];                                      // 0x03BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AchievementID;                                     // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputAction*                           InputAction;                                       // 0x03D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             Icon;                                              // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   AbilityInfo;                                       // 0x03E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FGameplayTagContainer> CancelAbilitiesByTagWithConditions;      // 0x03F8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGameplayTagContainer>          ActivationBlockedTagsConditions;                   // 0x0448(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	EEquipmentSlotType                            EquipmentSlot;                                     // 0x0458(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CancelAllASCAbilities(class UAbilitySystemComponent* ASC, const struct FGameplayTagContainer& WithTags, const struct FGameplayTagContainer& WithoutTags);
	bool CommitAbilityWithAttributeCheck(const struct FGameplayAttribute& Attribute, TSubclassOf<class UGameplayEffect> CostEffect);
	void GetInputAxisValues(float* Forward, float* Right);
	void SetEffectStackLimit(int32 LimitMax, TSubclassOf<class UGameplayEffect> CostEffect);

	float GetCostValue() const;
	struct FGameplayEffectContextHandle MakeEffectContextForInstigator(class AActor* Instigator) const;
	void OnAbilityInputComplete(const struct FInputActionValue& InputActionValue) const;
	void OnAbilityInputStart(const struct FInputActionValue& InputActionValue) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityBase")
	}
	static class UAbilityBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityBase>();
	}
};
DUMPER7_ASSERTS_UAbilityBase;

// Class Smuta.AbilityCancelerComponent
// 0x0088 (0x0128 - 0x00A0)
class UAbilityCancelerComponent final : public UActorComponent
{
public:
	class ACharacter*                             CharacterOwner;                                    // 0x00A0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBaseAbilitiesComponent*                AbilityComponent;                                  // 0x00A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  AbilityTagsToCancel;                               // 0x00B0(0x0020)(BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<class UAnimMontage*, struct FGameplayTagContainer> MontageToAbilityTagMap;                  // 0x00D0(0x0050)(BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         MontagesBlendOutTime;                              // 0x0120(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddAbilityTagsToCancel(const struct FGameplayTagContainer& AbilityTags, class UAnimMontage* Montage);
	void CancelAbilities();
	struct FGameplayTagContainer GetAbilityTagsToCancel();
	bool Initialize();
	void OnMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted);
	void OnMontageEnded(class UAnimMontage* Montage, bool bInterrupted);
	void RemoveAbilityTagsToCancel(const struct FGameplayTagContainer& AbilityTags, class UAnimMontage* Montage);
	bool ShouldCancelAbility();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityCancelerComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityCancelerComponent")
	}
	static class UAbilityCancelerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityCancelerComponent>();
	}
};
DUMPER7_ASSERTS_UAbilityCancelerComponent;

// Class Smuta.AITraitsBase
// 0x01A8 (0x01D8 - 0x0030)
class UAITraitsBase : public UPrimaryDataAsset
{
public:
	class UBehaviorTree*                          BattleBehaviorTree;                                // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBehaviorTree*                          PeacefulBehaviorTree;                              // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBehaviorTree*                          BattleFleeBehaviorTree;                            // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EGameDifficulty, struct FAITraits_Global> Traits;                                           // 0x0048(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FEnemyFightZoneSettingsWrapper         TeamFightSettings;                                 // 0x0098(0x0018)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UAgroTraitsPresetWrapper*               AgroSettings;                                      // 0x00B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAITraits_Peaceful                     PeacefulSettings;                                  // 0x00B8(0x0068)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAITraits_BattleFlee                   BattleFleeSettings;                                // 0x0120(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_170[0x8];                                      // 0x0170(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AAIController>              AIControllerClass;                                 // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAITraitsPreset*                        AITraitsPreset;                                    // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPeacefulAITraitsPreset*                PeacefulAITraitsPreset;                            // 0x0188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USimpleAITraitsPreset*                  BattleFleeAITraitsPreset;                          // 0x0190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>    StartupEffects;                                    // 0x0198(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class AAIController*                          AIController;                                      // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBaseAbilitiesComponent*                OwnerASC;                                          // 0x01B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADefaultCharacter*                      OwnerCharacter;                                    // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1C0[0x18];                                     // 0x01C0(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAITraitsBase* Initialize(class UAITraitsBase* AITraits, class AActor* Owner);

	void ApplyPerceptionSettings();
	void OnDetectionStateChanged(class UEnemyDetectionComponent* Component, EDetectionAIState NewState);
	void SetIsDay(bool bIsDay);
	void SetPerceptionDebuff(bool Val);
	void UpdateGameDifficulty(EGameDifficulty NewDifficulty);

	struct FAITraits_Attributes GetAttributes() const;
	struct FAITraits_Behavior GetBehavior() const;
	bool GetGeneralDetectionTraits(struct FAITraits_DetectionGeneral* OutTraits) const;
	bool GetPerceptionV2(struct FAITraits_PerceptionV2* OutPerception) const;
	class UObject* GetSettingsDataByTag(const struct FGameplayTag& Tag) const;
	bool IsDay() const;
	bool IsInitialized() const;
	bool IsPerceptionDebuff() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AITraitsBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AITraitsBase")
	}
	static class UAITraitsBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAITraitsBase>();
	}
};
DUMPER7_ASSERTS_UAITraitsBase;

// Class Smuta.AgroTraitsPresetWrapper
// 0x0018 (0x0040 - 0x0028)
class UAgroTraitsPresetWrapper final : public UObject
{
public:
	class UAgroTraitsPreset*                      Settings;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAgroTraitsPreset*                      InstancedSettings;                                 // 0x0030(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideSettings;                                 // 0x0038(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AgroTraitsPresetWrapper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AgroTraitsPresetWrapper")
	}
	static class UAgroTraitsPresetWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAgroTraitsPresetWrapper>();
	}
};
DUMPER7_ASSERTS_UAgroTraitsPresetWrapper;

// Class Smuta.AsyncTaskAttributeChanged
// 0x0060 (0x0090 - 0x0030)
class UAsyncTaskAttributeChanged final : public UBlueprintAsyncActionBase
{
public:
	TMulticastInlineDelegate<void(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue)> OnAttributeChanged; // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UAbilitySystemComponent*                ASC;                                               // 0x0040(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_48[0x48];                                      // 0x0048(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAsyncTaskAttributeChanged* ListenForAttributeChange(class UAbilitySystemComponent* AbilitySystemComponent, const struct FGameplayAttribute& Attribute);
	static class UAsyncTaskAttributeChanged* ListenForAttributesChange(class UAbilitySystemComponent* AbilitySystemComponent, const TArray<struct FGameplayAttribute>& Attributes);

	void EndTask();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AsyncTaskAttributeChanged")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AsyncTaskAttributeChanged")
	}
	static class UAsyncTaskAttributeChanged* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAsyncTaskAttributeChanged>();
	}
};
DUMPER7_ASSERTS_UAsyncTaskAttributeChanged;

// Class Smuta.SpawnerPointBase
// 0x0050 (0x02E8 - 0x0298)
class ASpawnerPointBase : public AActor
{
public:
	class UBehaviorTree*                          BehaviorTree;                                      // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBillboardComponent*                    BillboardComponent;                                // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                        SceneComponent;                                    // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBillboardComponent*                    SpawnBoard;                                        // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplineComponent*                       Spline;                                            // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrowComponent*                        Arrow;                                             // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ADefaultCharacter>          CharacterClass;                                    // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADefaultCharacter*                      Character;                                         // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpawnOptimizationComponent*            SpawnOptimizationComponent;                        // 0x02D8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          DayOnly;                                           // 0x02E0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          NightOnly;                                         // 0x02E1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E2[0x6];                                      // 0x02E2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Destroy();

	class ADefaultCharacter* GetCharacter() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpawnerPointBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpawnerPointBase")
	}
	static class ASpawnerPointBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASpawnerPointBase>();
	}
};
DUMPER7_ASSERTS_ASpawnerPointBase;

// Class Smuta.MatrixSpawnerBase
// 0x0030 (0x0318 - 0x02E8)
class AMatrixSpawnerBase : public ASpawnerPointBase
{
public:
	bool                                          CanAutoAgro;                                       // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFractionComponent*                     FractionComponent;                                 // 0x02F0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                 DayNightController;                                // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                     DayNightClass;                                     // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMatrixDataAsset*                       SpawnData;                                         // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EGenderType                                   Gender;                                            // 0x0310(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class AActor* GetDNCClass();
	class ADefaultCharacter* Spawn(class UMatrixDataAsset* MatrixDataAsset);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatrixSpawnerBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatrixSpawnerBase")
	}
	static class AMatrixSpawnerBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMatrixSpawnerBase>();
	}
};
DUMPER7_ASSERTS_AMatrixSpawnerBase;

// Class Smuta.AnimalMatrixSpawner
// 0x0010 (0x0328 - 0x0318)
class AAnimalMatrixSpawner final : public AMatrixSpawnerBase
{
public:
	class AForestAnimalPOI*                       PointOfInterest;                                   // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAnimalType                                   AnimalType;                                        // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EAnimalState                                  AnimalState;                                       // 0x0321(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EForestRestState                              RestState;                                         // 0x0322(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EForestEatState                               EatState;                                          // 0x0323(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimalMatrixSpawner")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimalMatrixSpawner")
	}
	static class AAnimalMatrixSpawner* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAnimalMatrixSpawner>();
	}
};
DUMPER7_ASSERTS_AAnimalMatrixSpawner;

// Class Smuta.EquipmentFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UEquipmentFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool CanReloadWeapon(class UAbilitySystemComponent* OwnerASC, class URangeWeaponItem* Weapon, float* NeedToRestoreAmmo);
	static bool IsEnoughWeaponAmmo(class UAbilitySystemComponent* OwnerASC, class URangeWeaponItem* Weapon);
	static bool ReduceWeaponAmmo(class UAbilitySystemComponent* OwnerASC, class URangeWeaponItem* Weapon, float AmmoCount);
	static void ReloadWeapon(class UAbilitySystemComponent* OwnerASC, class URangeWeaponItem* Weapon);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EquipmentFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EquipmentFunctionLibrary")
	}
	static class UEquipmentFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEquipmentFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UEquipmentFunctionLibrary;

// Class Smuta.AbilityFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UAbilityFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FActiveGameplayEffectHandle ApplyGameplayEffectByClass(const class UAbilitySystemComponent* AbilitySystemComponent, TSubclassOf<class UGameplayEffect> EffectClass);
	static void ChangeAttributeValue(class UAbilitySystemComponent* Target, const struct FGameplayAttribute& Attribute, float NewValue, EGameplayModOp ModifierOp);
	static TSubclassOf<class UGameplayAbility> GetAbilityFromSpec(const struct FGameplayAbilitySpecDef& Spec);
	static float GetAttributeMagnitude(const struct FGameplayEffectSpecHandle& SpecHandle, class UAbilitySystemComponent* Source, class UAbilitySystemComponent* Target, const struct FGameplayAttribute& Attribute);
	static class UBaseAbilitiesComponent* GetBaseAbilityComponent(const class AActor* Target, bool* Result);
	static bool GetCapturedAttributeMagnitudePure(const class UGameplayModMagnitudeCalculation* ModMagnitude, const struct FGameplayEffectSpec& Spec, const struct FGameplayAttribute& Attribute, EGameplayEffectAttributeCaptureSource AttributeSource, float* OutMagnitude);
	static ELegsPosition GetCharacterMeshLegsPosition(class USkeletalMeshComponent* CharacterMesh, class FName LeftLegBoneName, class FName RightLegBoneName);
	static EEnemyPosition GetEnemyDirection(class AActor* Source, class AActor* Target);
	static class AActor* GetInstigatorFromSpec(const struct FGameplayEffectSpec& Spec);
	static const struct FGameplayTagContainer GetSourceActorTags(const struct FGameplayEffectSpec& Spec);
	static const struct FGameplayTagContainer GetTargetActorTags(const struct FGameplayEffectSpec& Spec);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityFunctionLibrary")
	}
	static class UAbilityFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UAbilityFunctionLibrary;

// Class Smuta.ActivatedActorChangeStateCondition
// 0x0030 (0x0088 - 0x0058)
class UActivatedActorChangeStateCondition final : public UQuestStepCondition
{
public:
	TSoftObjectPtr<class AActivatedActor>         Actor;                                             // 0x0058(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, SaveGame, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EActivatedObjectState                         WaitForState;                                      // 0x0080(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnActorStateChanged(EActivatedObjectState NewState);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActivatedActorChangeStateCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActivatedActorChangeStateCondition")
	}
	static class UActivatedActorChangeStateCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivatedActorChangeStateCondition>();
	}
};
DUMPER7_ASSERTS_UActivatedActorChangeStateCondition;

// Class Smuta.AbilityTask_OnTick
// 0x0018 (0x0098 - 0x0080)
class UAbilityTask_OnTick final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void(float DeltaTime)> OnTick;                                          // 0x0080(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_90[0x8];                                       // 0x0090(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_OnTick* AbilityTaskOnTick(class UGameplayAbility* OwningAbility, class FName TaskInstanceName);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_OnTick")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_OnTick")
	}
	static class UAbilityTask_OnTick* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_OnTick>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_OnTick;

// Class Smuta.BaseActionData
// 0x0008 (0x0030 - 0x0028)
class UBaseActionData : public UObject
{
public:
	struct FGameplayTag                           ActionTag;                                         // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	TSoftObjectPtr<class UAnimMontage> GetMontage(EEquipmentType EquipmentType, const struct FGameplayTagContainer& Tags, float PairDistance) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseActionData")
	}
	static class UBaseActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseActionData>();
	}
};
DUMPER7_ASSERTS_UBaseActionData;

// Class Smuta.ChanceSettings
// 0x0008 (0x0030 - 0x0028)
class UChanceSettings final : public UObject
{
public:
	float                                         Chance;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ChanceSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ChanceSettings")
	}
	static class UChanceSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChanceSettings>();
	}
};
DUMPER7_ASSERTS_UChanceSettings;

// Class Smuta.AbilityTask_WaitInputActionPressed
// 0x0038 (0x00B8 - 0x0080)
class UAbilityTask_WaitInputActionPressed final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void(float TimeWaited)> OnPress;                                        // 0x0080(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UInputComponent*                        InputComponent;                                    // 0x0090(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_98[0x20];                                      // 0x0098(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_WaitInputActionPressed* WaitInputActionPressed(class UGameplayAbility* OwningAbility, bool bTestAlreadyPressed, class FName ActionName, EInputEvent EventType);

	void OnPressCallback();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_WaitInputActionPressed")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_WaitInputActionPressed")
	}
	static class UAbilityTask_WaitInputActionPressed* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_WaitInputActionPressed>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_WaitInputActionPressed;

// Class Smuta.CombatTrickAbility
// 0x0000 (0x0460 - 0x0460)
class UCombatTrickAbility : public UAbilityBase
{
public:
	void OnTrickFailed();
	void OnTrickSucceed();
	void SetTrickFail(float FailRate);
	void SetTrickSuccess(float SuccessRate, class AActor* AgainstCharacter);

	class UBaseAbilitiesComponent* GetAttackerAbilityComponent() const;
	class ADefaultCharacter* GetAttackerActor() const;
	class UBaseAbilitiesComponent* GetDefenderAbilityComponent() const;
	class ADefaultCharacter* GetDefenderActor() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CombatTrickAbility")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CombatTrickAbility")
	}
	static class UCombatTrickAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCombatTrickAbility>();
	}
};
DUMPER7_ASSERTS_UCombatTrickAbility;

// Class Smuta.ActionAnimationEffectComponent
// 0x0020 (0x0048 - 0x0028)
class UActionAnimationEffectComponent final : public UGameplayEffectComponent
{
public:
	TSubclassOf<class UBaseActionData>            ActionDataClass;                                   // 0x0028(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           ActionTag;                                         // 0x0030(0x0008)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EMontageTagSelectionApproach                  MontageTagSelectionApproach;                       // 0x0038(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DefaultMontageTag;                                 // 0x003C(0x0008)(Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bConsiderDistanceToInstigator;                     // 0x0044(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bStretchMontageToEffectDuration;                   // 0x0045(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bRemoveEffectAfterMontageStopped;                  // 0x0046(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_47[0x1];                                       // 0x0047(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnActionMontageEnded(class UAnimMontage* Montage, bool bInterrupted) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActionAnimationEffectComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActionAnimationEffectComponent")
	}
	static class UActionAnimationEffectComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActionAnimationEffectComponent>();
	}
};
DUMPER7_ASSERTS_UActionAnimationEffectComponent;

// Class Smuta.WidgetComponentUMG
// 0x0008 (0x02C8 - 0x02C0)
class UWidgetComponentUMG : public UUserWidget
{
public:
	class UTargetedWidgetComponent*               OwningComponent;                                   // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	class AActor* GetOwningActor() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WidgetComponentUMG")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WidgetComponentUMG")
	}
	static class UWidgetComponentUMG* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidgetComponentUMG>();
	}
};
DUMPER7_ASSERTS_UWidgetComponentUMG;

// Class Smuta.ComboActionData
// 0x00F0 (0x0120 - 0x0030)
class UComboActionData final : public UBaseActionData
{
public:
	TMap<EEquipmentType, struct FNextMontages>    Starters;                                          // 0x0030(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<EEquipmentType, struct FMontagesByEnemyPosition> RangeAttackMontages;                       // 0x0080(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<EEquipmentType, struct FMontagesByEnemyPosition> KickAttackMontages;                        // 0x00D0(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UAnimMetaData* GetAnimMetaData(TSubclassOf<class UAnimMetaData> DataTypeClass, TSoftObjectPtr<class UAnimMontage> Montage);
	static class UAnimMetaData* GetAnimMetaDataFromMontagePtr(TSubclassOf<class UAnimMetaData> DataTypeClass, class UAnimMontage* Montage);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ComboActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ComboActionData")
	}
	static class UComboActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComboActionData>();
	}
};
DUMPER7_ASSERTS_UComboActionData;

// Class Smuta.ActionDataAsset
// 0x0060 (0x0090 - 0x0030)
class UActionDataAsset final : public UDataAsset
{
public:
	TMap<class USkeleton*, struct FActions>       Data;                                              // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnDataChanged;                                     // 0x0080(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UBaseActionData* GetActionData(class UActionDataAsset* DataAsset, class USkeleton* Skeleton, TSubclassOf<class UBaseActionData> ActionClass, const struct FGameplayTag& ActionTag);

	void CallOnDataChanged();

	class UBaseActionData* GetActionDataWithTag(class USkeleton* Skeleton, TSubclassOf<class UBaseActionData> ActionClass, const struct FGameplayTag& ActionTag) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActionDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActionDataAsset")
	}
	static class UActionDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActionDataAsset>();
	}
};
DUMPER7_ASSERTS_UActionDataAsset;

// Class Smuta.AimModeWidget
// 0x0000 (0x02C0 - 0x02C0)
class UAimModeWidget final : public UUserWidget
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AimModeWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AimModeWidget")
	}
	static class UAimModeWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAimModeWidget>();
	}
};
DUMPER7_ASSERTS_UAimModeWidget;

// Class Smuta.BasePOI
// 0x0018 (0x02B0 - 0x0298)
class ABasePOI : public AActor
{
public:
	class UBillboardComponent*                    BillboardComponent;                                // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                        SceneComponent;                                    // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBillboardComponent*                    Point;                                             // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BasePOI")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BasePOI")
	}
	static class ABasePOI* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABasePOI>();
	}
};
DUMPER7_ASSERTS_ABasePOI;

// Class Smuta.AppearanceDataAsset
// 0x0008 (0x0038 - 0x0030)
class UAppearanceDataAsset final : public UDataAsset
{
public:
	TSubclassOf<class UAppearanceItem>            AppearanceItem;                                    // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static void SetPlayerAppearance(const class UAppearanceDataAsset* Appearance, const class UObject* WorldContext);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AppearanceDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AppearanceDataAsset")
	}
	static class UAppearanceDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAppearanceDataAsset>();
	}
};
DUMPER7_ASSERTS_UAppearanceDataAsset;

// Class Smuta.SmutaEquipmentComponent
// 0x0008 (0x0360 - 0x0358)
class USmutaEquipmentComponent : public UEquipmentComponent
{
public:
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void TagChangedResponse(const struct FGameplayTag& UpdatedTag, bool bExists);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaEquipmentComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaEquipmentComponent")
	}
	static class USmutaEquipmentComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmutaEquipmentComponent>();
	}
};
DUMPER7_ASSERTS_USmutaEquipmentComponent;

// Class Smuta.CharacterEquipmentComponent
// 0x0020 (0x0380 - 0x0360)
class UCharacterEquipmentComponent final : public USmutaEquipmentComponent
{
public:
	class UCharacterAppearanceItem*               CurrentAppearance;                                 // 0x0360(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCharacterAppearanceItem>   DefaultAppearanceClass;                            // 0x0368(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayAbility>           TakeOnEquipmentAbility;                            // 0x0370(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayAbility>           TakeOffEquipmentAbility;                           // 0x0378(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CharacterEquipmentComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CharacterEquipmentComponent")
	}
	static class UCharacterEquipmentComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterEquipmentComponent>();
	}
};
DUMPER7_ASSERTS_UCharacterEquipmentComponent;

// Class Smuta.HumanPOI
// 0x0020 (0x02D0 - 0x02B0)
class AHumanPOI : public ABasePOI
{
public:
	EHumanPOIState                                StatePOI;                                          // 0x02B0(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UArrowComponent*                        Arrow;                                             // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADefaultCharacter*                      User;                                              // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrowComponent*                        AnimPoint;                                         // 0x02C8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class UMatrixDialogue* FilterDialogue(EHumanRoleType FirstCharType, EHumanRoleType SecondCharType, EGenderType FirstCharGender, EGenderType SecondCharGender, const TArray<class UMatrixDialogue*>& Dialogues);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HumanPOI")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HumanPOI")
	}
	static class AHumanPOI* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHumanPOI>();
	}
};
DUMPER7_ASSERTS_AHumanPOI;

// Class Smuta.AISenseConfig_SixSense
// 0x0000 (0x0070 - 0x0070)
class UAISenseConfig_SixSense final : public UAISenseConfig_Sight
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AISenseConfig_SixSense")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AISenseConfig_SixSense")
	}
	static class UAISenseConfig_SixSense* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAISenseConfig_SixSense>();
	}
};
DUMPER7_ASSERTS_UAISenseConfig_SixSense;

// Class Smuta.ActionHumanPOI
// 0x0058 (0x0328 - 0x02D0)
class AActionHumanPOI : public AHumanPOI
{
public:
	TMap<EGenderType, class UMatrixProfDataAsset*> ActionData;                                       // 0x02D0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	EDayNightState                                DayNightState;                                     // 0x0320(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActionHumanPOI")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActionHumanPOI")
	}
	static class AActionHumanPOI* GetDefaultObj()
	{
		return GetDefaultObjImpl<AActionHumanPOI>();
	}
};
DUMPER7_ASSERTS_AActionHumanPOI;

// Class Smuta.ActionRollComponent
// 0x00B0 (0x0150 - 0x00A0)
class UActionRollComponent : public UActorComponent
{
public:
	bool                                          bShowDebug;                                        // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0xA7];                                      // 0x00A1(0x00A7)(Fixing Size After Last Property [ Dumper-7 ])
	class UAITraitsBase*                          OwnerTraits;                                       // 0x0148(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void InitializeTraits(class UAITraitsBase* Traits);
	bool RollAction(Smuta::ENPCAction Action, bool OverrideBaseChance, float BaseChanceOverridedValue);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActionRollComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActionRollComponent")
	}
	static class UActionRollComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActionRollComponent>();
	}
};
DUMPER7_ASSERTS_UActionRollComponent;

// Class Smuta.ActionWorkPOI
// 0x0068 (0x0338 - 0x02D0)
class AActionWorkPOI : public AHumanPOI
{
public:
	TMap<EGenderType, class UMatrixProfDataAsset*> ActionData;                                       // 0x02D0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	class ASpeakerHumanPOI*                       Speaker;                                           // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ActivateAnimals;                                   // 0x0328(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEatVillagePOI*                         AnimalPOI;                                         // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActionWorkPOI")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActionWorkPOI")
	}
	static class AActionWorkPOI* GetDefaultObj()
	{
		return GetDefaultObjImpl<AActionWorkPOI>();
	}
};
DUMPER7_ASSERTS_AActionWorkPOI;

// Class Smuta.ActivateAbilitiesEffectComponent
// 0x0000 (0x0038 - 0x0038)
class UActivateAbilitiesEffectComponent final : public UAbilitiesGameplayEffectComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActivateAbilitiesEffectComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActivateAbilitiesEffectComponent")
	}
	static class UActivateAbilitiesEffectComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivateAbilitiesEffectComponent>();
	}
};
DUMPER7_ASSERTS_UActivateAbilitiesEffectComponent;

// Class Smuta.ActivatedActor
// 0x0060 (0x02F8 - 0x0298)
class AActivatedActor : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	EActivatedObjectState                         CurrentState;                                      // 0x02A0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(EActivatedObjectState State)> OnObjectStateChanged;                // 0x02A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          ShouldRaiseNoiseOnStateChange;                     // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DetectionScaleValue;                               // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NoiseRadius;                                       // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NoiseMaxRange;                                     // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShouldChangeStateFromMelee;                        // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShouldChangeStateFromRange;                        // 0x02C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShouldChangeStateFromHit;                          // 0x02CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CB[0x1];                                      // 0x02CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxHitPointsToChangeState;                         // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EActivatedObjectState                         StateToChange;                                     // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        SceneComponent;                                    // 0x02D8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class AActivatedActor>> ChildActors;                                       // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	float                                         ReceivedHitPoints;                                 // 0x02F0(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ChangeActivateObjectState(EActivatedObjectState NewState);
	class UPrimitiveComponent* GetHitPointReceiverComponent();
	void OnReceiverComponentHit(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void PreChangeActivateObjectState(EActivatedObjectState NewState);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActivatedActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActivatedActor")
	}
	static class AActivatedActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AActivatedActor>();
	}
};
DUMPER7_ASSERTS_AActivatedActor;

// Class Smuta.SignificanceActorComponent
// 0x0018 (0x00B8 - 0x00A0)
class USignificanceActorComponent : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x9];                                       // 0x00A0(0x0009)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bSkipOptimization;                                 // 0x00A9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_AA[0xE];                                       // 0x00AA(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DisableOptimization();
	bool GetSkipOtimization();
	void SetSkipOptimization(bool bSkip);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SignificanceActorComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SignificanceActorComponent")
	}
	static class USignificanceActorComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USignificanceActorComponent>();
	}
};
DUMPER7_ASSERTS_USignificanceActorComponent;

// Class Smuta.ActorOptimizationComponent
// 0x0018 (0x00D0 - 0x00B8)
class UActorOptimizationComponent final : public USignificanceActorComponent
{
public:
	float                                         MeshUpdateRateLowReductionScore;                   // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MeshUpdateRateMediumReductionScore;                // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MeshUpdateRateHighReductionScore;                  // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ActorTickReductionUpdateScore;                     // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DisableWidgetsScore;                               // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActorOptimizationComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActorOptimizationComponent")
	}
	static class UActorOptimizationComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActorOptimizationComponent>();
	}
};
DUMPER7_ASSERTS_UActorOptimizationComponent;

// Class Smuta.AdditionalEffectsToSourceEffectComponent
// 0x0000 (0x0070 - 0x0070)
class UAdditionalEffectsToSourceEffectComponent final : public UAdditionalEffectsGameplayEffectComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AdditionalEffectsToSourceEffectComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AdditionalEffectsToSourceEffectComponent")
	}
	static class UAdditionalEffectsToSourceEffectComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAdditionalEffectsToSourceEffectComponent>();
	}
};
DUMPER7_ASSERTS_UAdditionalEffectsToSourceEffectComponent;

// Class Smuta.AdditionalEquipmentData
// 0x0000 (0x0028 - 0x0028)
class UAdditionalEquipmentData final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AdditionalEquipmentData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AdditionalEquipmentData")
	}
	static class UAdditionalEquipmentData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAdditionalEquipmentData>();
	}
};
DUMPER7_ASSERTS_UAdditionalEquipmentData;

// Class Smuta.AggroActionData
// 0x0050 (0x0080 - 0x0030)
class UAggroActionData final : public UBaseActionData
{
public:
	TMap<EEquipmentType, struct FAggroActionMontages> Montages;                                      // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AggroActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AggroActionData")
	}
	static class UAggroActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAggroActionData>();
	}
};
DUMPER7_ASSERTS_UAggroActionData;

// Class Smuta.AgroTraitsPreset
// 0x0048 (0x0078 - 0x0030)
class UAgroTraitsPreset final : public UDataAsset
{
public:
	struct FAITraits_AgroSettings                 AgroSettings;                                      // 0x0030(0x0048)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AgroTraitsPreset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AgroTraitsPreset")
	}
	static class UAgroTraitsPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAgroTraitsPreset>();
	}
};
DUMPER7_ASSERTS_UAgroTraitsPreset;

// Class Smuta.AimActionData
// 0x0050 (0x0080 - 0x0030)
class UAimActionData final : public UBaseActionData
{
public:
	TMap<EEquipmentType, struct FAimStandActionMontages> Data;                                       // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AimActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AimActionData")
	}
	static class UAimActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAimActionData>();
	}
};
DUMPER7_ASSERTS_UAimActionData;

// Class Smuta.AimSettingsDataAsset
// 0x01D8 (0x0208 - 0x0030)
class UAimSettingsDataAsset final : public UDataAsset
{
public:
	struct FVector2D                              AimBaseSize;                                       // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAimCenterElementAppearanceSettings    AimCenterElementAppearanceSettings;                // 0x0040(0x00C8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<ETeamAttitude, struct FColor>            AimCenterAttitudeColors;                           // 0x0108(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EAimCenterMoveAnimationType                   AimCenterSizeAnimationType;                        // 0x0158(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EAimNotchElementPosition, struct FAimNotchElementAppearanceSettings> NotchAppearanceSettings; // 0x0160(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<ETeamAttitude, struct FColor>            NotchAttitudeColors;                               // 0x01B0(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EAimNotchMoveAnimationType                    AimNotchMoveAnimationType;                         // 0x0200(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAimNotchSizeAnimationType                    AimNotchSizeAnimationType;                         // 0x0201(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AimSettingsDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AimSettingsDataAsset")
	}
	static class UAimSettingsDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAimSettingsDataAsset>();
	}
};
DUMPER7_ASSERTS_UAimSettingsDataAsset;

// Class Smuta.BaseAITraitsPreset
// 0x0008 (0x0038 - 0x0030)
class UBaseAITraitsPreset : public UPrimaryDataAsset
{
public:
	class UBehaviorTree*                          BehaviorTree;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseAITraitsPreset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseAITraitsPreset")
	}
	static class UBaseAITraitsPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseAITraitsPreset>();
	}
};
DUMPER7_ASSERTS_UBaseAITraitsPreset;

// Class Smuta.SimpleAITraitsPreset
// 0x0058 (0x0090 - 0x0038)
class USimpleAITraitsPreset : public UBaseAITraitsPreset
{
public:
	struct FBehaviorTreePreset                    PresetSettings;                                    // 0x0038(0x0058)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SimpleAITraitsPreset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SimpleAITraitsPreset")
	}
	static class USimpleAITraitsPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USimpleAITraitsPreset>();
	}
};
DUMPER7_ASSERTS_USimpleAITraitsPreset;

// Class Smuta.PeacefulAITraitsPreset
// 0x0010 (0x00A0 - 0x0090)
class UPeacefulAITraitsPreset final : public USimpleAITraitsPreset
{
public:
	TArray<struct FNPCReaction>                   Reactions;                                         // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PeacefulAITraitsPreset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PeacefulAITraitsPreset")
	}
	static class UPeacefulAITraitsPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPeacefulAITraitsPreset>();
	}
};
DUMPER7_ASSERTS_UPeacefulAITraitsPreset;

// Class Smuta.AISenseConfig_ImmediateDetection
// 0x0000 (0x0070 - 0x0070)
class UAISenseConfig_ImmediateDetection final : public UAISenseConfig_Sight
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AISenseConfig_ImmediateDetection")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AISenseConfig_ImmediateDetection")
	}
	static class UAISenseConfig_ImmediateDetection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAISenseConfig_ImmediateDetection>();
	}
};
DUMPER7_ASSERTS_UAISenseConfig_ImmediateDetection;

// Class Smuta.AISenseConfig_SmutaSight
// 0x0008 (0x0078 - 0x0070)
class UAISenseConfig_SmutaSight final : public UAISenseConfig_Sight
{
public:
	float                                         VerticalVisionAngleDegreesUpper;                   // 0x0070(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VerticalVisionAngleDegreesLower;                   // 0x0074(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AISenseConfig_SmutaSight")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AISenseConfig_SmutaSight")
	}
	static class UAISenseConfig_SmutaSight* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAISenseConfig_SmutaSight>();
	}
};
DUMPER7_ASSERTS_UAISenseConfig_SmutaSight;

// Class Smuta.AISenseConfig_Smuta_Hearing
// 0x0010 (0x0058 - 0x0048)
class UAISenseConfig_Smuta_Hearing final : public UAISenseConfig
{
public:
	TSubclassOf<class UAISense_Smuta_Hearing>     Implementation;                                    // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, NoClear, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HearingRange;                                      // 0x0050(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAISenseAffiliationFilter              DetectionByAffiliation;                            // 0x0054(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AISenseConfig_Smuta_Hearing")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AISenseConfig_Smuta_Hearing")
	}
	static class UAISenseConfig_Smuta_Hearing* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAISenseConfig_Smuta_Hearing>();
	}
};
DUMPER7_ASSERTS_UAISenseConfig_Smuta_Hearing;

// Class Smuta.AISenseEvent_Smuta_Hearing
// 0x0040 (0x0068 - 0x0028)
class UAISenseEvent_Smuta_Hearing final : public UAISenseEvent
{
public:
	struct FAISmutaNoiseEvent                     Event;                                             // 0x0028(0x0040)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AISenseEvent_Smuta_Hearing")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AISenseEvent_Smuta_Hearing")
	}
	static class UAISenseEvent_Smuta_Hearing* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAISenseEvent_Smuta_Hearing>();
	}
};
DUMPER7_ASSERTS_UAISenseEvent_Smuta_Hearing;

// Class Smuta.AISense_ImmediateDetection
// 0x0000 (0x01A8 - 0x01A8)
class UAISense_ImmediateDetection final : public UAISense_Sight
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AISense_ImmediateDetection")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AISense_ImmediateDetection")
	}
	static class UAISense_ImmediateDetection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAISense_ImmediateDetection>();
	}
};
DUMPER7_ASSERTS_UAISense_ImmediateDetection;

// Class Smuta.AISense_SmutaSight
// 0x0000 (0x01A8 - 0x01A8)
class UAISense_SmutaSight : public UAISense_Sight
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AISense_SmutaSight")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AISense_SmutaSight")
	}
	static class UAISense_SmutaSight* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAISense_SmutaSight>();
	}
};
DUMPER7_ASSERTS_UAISense_SmutaSight;

// Class Smuta.AISense_SixSense
// 0x0000 (0x01A8 - 0x01A8)
class UAISense_SixSense final : public UAISense_SmutaSight
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AISense_SixSense")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AISense_SixSense")
	}
	static class UAISense_SixSense* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAISense_SixSense>();
	}
};
DUMPER7_ASSERTS_UAISense_SixSense;

// Class Smuta.AISense_Smuta_Hearing
// 0x0068 (0x00E0 - 0x0078)
class UAISense_Smuta_Hearing final : public UAISense
{
public:
	TArray<struct FAISmutaNoiseEvent>             NoiseEvents;                                       // 0x0078(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                         SpeedOfSoundSq;                                    // 0x0088(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_8C[0x54];                                      // 0x008C(0x0054)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void ReportSmutaNoiseEvent(class UObject* WorldContextObject, const struct FVector& NoiseLocation, float NoiseRadius, class AActor* Instigator, float MaxRange, class FName Tag);
	static void ReportSmutaProlongedNoiseEvent(class UObject* WorldContextObject, const struct FVector& NoiseLocation, float NoiseDuration, float NoiseRadius, class AActor* Instigator, float MaxRange, class FName Tag);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AISense_Smuta_Hearing")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AISense_Smuta_Hearing")
	}
	static class UAISense_Smuta_Hearing* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAISense_Smuta_Hearing>();
	}
};
DUMPER7_ASSERTS_UAISense_Smuta_Hearing;

// Class Smuta.BehaviourTreeSettingInterface
// 0x0000 (0x0000 - 0x0000)
class IBehaviourTreeSettingInterface final
{
public:
	TSubclassOf<class UObject> GetSettingsDataObjectClass(struct FGameplayTag* DataTag);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BehaviourTreeSettingInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BehaviourTreeSettingInterface")
	}
	static class IBehaviourTreeSettingInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBehaviourTreeSettingInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IBehaviourTreeSettingInterface;

// Class Smuta.AITraitsPreset
// 0x0050 (0x0088 - 0x0038)
class UAITraitsPreset final : public UBaseAITraitsPreset
{
public:
	TMap<EGameDifficulty, struct FBehaviorTreePreset> PresetSettings;                                // 0x0038(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AITraitsPreset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AITraitsPreset")
	}
	static class UAITraitsPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAITraitsPreset>();
	}
};
DUMPER7_ASSERTS_UAITraitsPreset;

// Class Smuta.AIUtilsStatics
// 0x0000 (0x0028 - 0x0028)
class UAIUtilsStatics final : public UBlueprintFunctionLibrary
{
public:
	static class AActor* GetActorCurrentEnemy(class AActor* Actor);
	static class AActor* GetCurrentEnemy(class AAIController* Controller);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AIUtilsStatics")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AIUtilsStatics")
	}
	static class UAIUtilsStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAIUtilsStatics>();
	}
};
DUMPER7_ASSERTS_UAIUtilsStatics;

// Class Smuta.AmmoStationBase
// 0x0048 (0x02E0 - 0x0298)
class AAmmoStationBase final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractionComponent*                  InteractionComponent;                              // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       InteractionLookOn;                                 // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       InteractionOverlap;                                // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBillboardComponent*                    Billboard;                                         // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                        DirectionArrow;                                    // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInteractionWidgetComponent*            InteractionWidgetComponent;                        // 0x02C8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bActiveAtStart;                                    // 0x02D0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableAfterInteraction;                          // 0x02D1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D2[0xE];                                      // 0x02D2(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnInteracted(class AActor* InteractedActor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AmmoStationBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AmmoStationBase")
	}
	static class AAmmoStationBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAmmoStationBase>();
	}
};
DUMPER7_ASSERTS_AAmmoStationBase;

// Class Smuta.AnimFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UAnimFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static float GetAngleBeforeRotation(class ACharacter* ActorSelf, const struct FVector& TargetLocation);
	static float GetAngleToArrowRotation(class ACharacter* ActorSelf, const struct FRotator& RotationDirection);
	static float GetCurrentMontageLength(const class UAnimInstance* AnimInstance);
	static ERoute GetDirectionFromAngle(float Angle);
	static ERoute GetDirectionToTarget(const class UAnimInstance* AnimInstance);
	static void GetEyesAndHeadDirection(const class UAnimInstance* AnimInstance, class AActor* ActorTarget, class FName SocketName, float* HeadOffset, struct FVector* EyesLocation);
	static void GetEyesDirection(const class UAnimInstance* AnimInstance, class AActor* ActorTarget, class FName SocketName, struct FVector* LeftEye, struct FVector* RightEye);
	static void GetGroundNormal(const class UAnimInstance* AnimInstance, float* Right, float* Forward);
	static void GetGroundNormalAtFourPoints(const class UAnimInstance* AnimInstance, float CapsuleHalfHeight, bool Debug, float* Right, float* Forward, float* Up, float FBOffset, float RLOffset);
	static void GetGroundNormalByFeetPos(const class UAnimInstance* AnimInstance, const TArray<class FName>& BoneNames, bool bDebug, float* RightAngle, float* ForwardAngle);
	static void GetHysteresisHeadAngle(float LookDirectionAngle, float* HeadAngle, bool& LookAlongCamera, float LeftThresholdAngle, float RightThresholdAngle, float ThresholdAngleRange);
	static struct FVector2D GetInputVector(const class UAnimInstance* AnimInstance);
	static struct FVector2D GetLocalInputVector(const class UAnimInstance* AnimInstance);
	static void GetMovementDirection(const class UAnimInstance* AnimInstance, struct FVector2D* Direction);
	static float GetRotationRate(const class UAnimInstance* AnimInstance);
	static TSoftObjectPtr<class UAnimSequence> GetSoftToLipsync(const class FString& Path, const TArray<class FString>& LipsyncList);
	static TSoftObjectPtr<class UAnimSequence> GetSoftToNewLipsync(const class FString& Path, const TArray<class FString>& LipsyncList, const class FString& NewLipsyncPrefix);
	static class UTargetedCharacterMovementComponent* GetTargetedMovementComponent(const class UAnimInstance* AnimInstance);
	static bool HasAnyMatchingGameplayTags(const class UAnimInstance* AnimInstance, const struct FGameplayTagContainer& GameplayTags);
	static bool IsTargetLocked(const class UAnimInstance* AnimInstance);
	static float RotationRateWeight(const class UAnimInstance* AnimInstance);
	static void UnlinkSelfThreadSafe(class UAnimInstance* AnimInstance);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimFunctionLibrary")
	}
	static class UAnimFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UAnimFunctionLibrary;

// Class Smuta.ApplyEffectsNotify
// 0x0068 (0x0098 - 0x0030)
class UApplyEffectsNotify final : public UAnimNotifyState
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UGameplayEffect>>    GameplayEffects;                                   // 0x0038(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_48[0x50];                                      // 0x0048(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ApplyEffectsNotify")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ApplyEffectsNotify")
	}
	static class UApplyEffectsNotify* GetDefaultObj()
	{
		return GetDefaultObjImpl<UApplyEffectsNotify>();
	}
};
DUMPER7_ASSERTS_UApplyEffectsNotify;

// Class Smuta.AssetManagerBase
// 0x0000 (0x04D0 - 0x04D0)
class UAssetManagerBase final : public UAssetManager
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AssetManagerBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AssetManagerBase")
	}
	static class UAssetManagerBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAssetManagerBase>();
	}
};
DUMPER7_ASSERTS_UAssetManagerBase;

// Class Smuta.AttackAbility
// 0x0010 (0x0470 - 0x0460)
class UAttackAbility : public UCombatTrickAbility
{
public:
	ECollisionChannel                             CollisionObjectType;                               // 0x0460(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_461[0xF];                                      // 0x0461(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ActivateWeaponCollisionDetection(bool bInflictDamage, EHand Hands);
	void DeactivateWeaponCollisionDetection(EHand Hands);
	void OnAttackHitInflicted(const struct FAttackHitData& AttackHitData);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AttackAbility")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AttackAbility")
	}
	static class UAttackAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAttackAbility>();
	}
};
DUMPER7_ASSERTS_UAttackAbility;

// Class Smuta.BaseOptionalAbilityObject
// 0x0000 (0x0028 - 0x0028)
class UBaseOptionalAbilityObject : public UObject
{
public:
	class UBaseOptionalAbilityObject* GenerateOptionalDataObject(class ACharacter* AICharacter);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseOptionalAbilityObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseOptionalAbilityObject")
	}
	static class UBaseOptionalAbilityObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseOptionalAbilityObject>();
	}
};
DUMPER7_ASSERTS_UBaseOptionalAbilityObject;

// Class Smuta.AttackAbilityOptionalObject
// 0x0038 (0x0060 - 0x0028)
class UAttackAbilityOptionalObject final : public UBaseOptionalAbilityObject
{
public:
	class UActionDataAsset*                       ActionDataAsset;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                   AttackMontagesTags;                                // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	EAttackAnimationRandomType                    AnimationRandomType;                               // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HistoryLength;                                     // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           CurrentAnimationTag;                               // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FGameplayTag GetAttackMontageTag();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AttackAbilityOptionalObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AttackAbilityOptionalObject")
	}
	static class UAttackAbilityOptionalObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAttackAbilityOptionalObject>();
	}
};
DUMPER7_ASSERTS_UAttackAbilityOptionalObject;

// Class Smuta.AttackActionData
// 0x0050 (0x0080 - 0x0030)
class UAttackActionData final : public UBaseActionData
{
public:
	TMap<class UEquipmentData*, struct FAttackActionMontages> Montages;                              // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AttackActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AttackActionData")
	}
	static class UAttackActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAttackActionData>();
	}
};
DUMPER7_ASSERTS_UAttackActionData;

// Class Smuta.AttackDistanceData
// 0x0008 (0x0030 - 0x0028)
class UAttackDistanceData final : public UAnimMetaData
{
public:
	float                                         AttackDistance;                                    // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AttackDistanceData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AttackDistanceData")
	}
	static class UAttackDistanceData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAttackDistanceData>();
	}
};
DUMPER7_ASSERTS_UAttackDistanceData;

// Class Smuta.AttackStageNotifyState
// 0x0060 (0x0090 - 0x0030)
class UAttackStageNotifyState final : public UAnimNotifyState
{
public:
	EAttackStage                                  AttackStage;                                       // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StagePlayRate;                                     // 0x0034(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AllStagesDuration;                                 // 0x0038(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x54];                                      // 0x003C(0x0054)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AttackStageNotifyState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AttackStageNotifyState")
	}
	static class UAttackStageNotifyState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAttackStageNotifyState>();
	}
};
DUMPER7_ASSERTS_UAttackStageNotifyState;

// Class Smuta.AttributeBarWidget
// 0x0078 (0x0340 - 0x02C8)
class UAttributeBarWidget : public UWidgetComponentUMG
{
public:
	class UProgressBar*                           AttributeBar;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                     Attribute;                                         // 0x02D0(0x0038)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                     AttributeMax;                                      // 0x0308(0x0038)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void UpdateAttributeBar();

	float GetAttributeBarPercent() const;
	class AActor* GetProgressBarTarget() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AttributeBarWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AttributeBarWidget")
	}
	static class UAttributeBarWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAttributeBarWidget>();
	}
};
DUMPER7_ASSERTS_UAttributeBarWidget;

// Class Smuta.BaseAbilitiesComponent
// 0x0158 (0x13A8 - 0x1250)
class UBaseAbilitiesComponent final : public UAbilitySystemComponent
{
public:
	uint8                                         Pad_1250[0x8];                                     // 0x1250(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UGameplayAbility>>   DefaultAbilities;                                  // 0x1258(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>    StartupEffects;                                    // 0x1268(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayAbility>>   StartupPassiveAbilities;                           // 0x1278(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class UGameplayAbility* EndedAbility)> OnAbilityEndedDynamic; // 0x1288(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayTag& UpdatedTag, bool Exists)> OnTagChanged; // 0x1298(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UAbilitySystemComponent* Source, const struct FGameplayEffectSpec& SpecApplied, const struct FActiveGameplayEffectHandle& ActiveHandle)> OnAppliedEffect; // 0x12A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UAbilitySystemComponent* ASC, const struct FGameplayTag& UpdatedTag, bool Exists)> OnTagChangedWithASC; // 0x12B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 StatValue)> OnXPChangedDelegate;                             // 0x12C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 XpValue)> OnXPInfoDelegate;                                  // 0x12D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 StatValue, bool bLevelUp)> OnLevelChangedDelegate;           // 0x12E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float BarPercent, float ActualXP, float RequirementXP)> OnXPPercentChanged; // 0x12F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1308[0x10];                                    // 0x1308(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 StatValue)> OnSpellPointsChangedDelegate;                    // 0x1318(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class UBaseAbilitiesComponent* ASC)> OnAttackStarted;        // 0x1328(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class UBaseAbilitiesComponent* ASC)> OnAttackFinished;       // 0x1338(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnComponentLoaded;                                 // 0x1348(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class ULevelUpInfo*                           LevelUpInfo;                                       // 0x1358(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAttributeSaveData>             SavedAttributes;                                   // 0x1360(0x0010)(ZeroConstructor, SaveGame, Protected, NativeAccessSpecifierProtected)
	struct FPlayerProgressSaveData                SavePlayerProgress;                                // 0x1370(0x000C)(SaveGame, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_137C[0x4];                                     // 0x137C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEffectSaveData>                SavedEffects;                                      // 0x1380(0x0010)(ZeroConstructor, SaveGame, Protected, NativeAccessSpecifierProtected)
	int32                                         Level;                                             // 0x1390(0x0004)(Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         XP;                                                // 0x1394(0x0004)(Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         AttributePoints;                                   // 0x1398(0x0004)(Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         SpellPoints;                                       // 0x139C(0x0004)(Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_13A0[0x8];                                     // 0x13A0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddCustomGameplayTags(const struct FGameplayTagContainer& Tags);
	void BP_AddLooseGameplayTag(const struct FGameplayTag& Tag);
	void BP_AddLooseGameplayTags(const struct FGameplayTagContainer& Tags);
	void BP_RemoveLooseGameplayTag(const struct FGameplayTag& Tag);
	void BP_RemoveLooseGameplayTags(const struct FGameplayTagContainer& Tags);
	void CallOnAttackFinished();
	void CallOnAttackStarted();
	bool CanActivateAbility(TSubclassOf<class UGameplayAbility> Ability);
	void CancelAbilitiesWithTags(const struct FGameplayTagContainer& WithTags, const struct FGameplayTagContainer& WithoutTags, class UGameplayAbility* Ignore);
	void ChangeEffectDuration(const struct FActiveGameplayEffectHandle& Handle, float TimeDiff);
	void GetGameplayTagsByTag(const struct FGameplayTag& Tag, struct FGameplayTagContainer* OutContainer);
	bool IsAbilityGranted(TSubclassOf<class UGameplayAbility> Ability);
	void OnRep_AttributePoints(int32 OldAttributePoints);
	void OnRep_Level(int32 OldLevel);
	void OnRep_SpellPoints(int32 OldSpellPoints);
	void OnRep_XP(int32 OldXP);
	void RemoveCustomGameplayTags(const struct FGameplayTagContainer& Tags);
	void RemoveOneActiveGameplayEffectByClass(TSubclassOf<class UGameplayEffect> GameplayEffect, class UAbilitySystemComponent* InstigatorAbilitySystemComponent);
	void SetDefaultStartingData(const struct FAITraits_Attributes& Attributes);
	void SetLevel(int32 InLevel);
	void SetSpellPoints(int32 InPoints);
	void SetXP(int32 InXP);

	int32 GetDeltaRequirementXP() const;
	void GetGameplayEffectStartTimeAndDuration(const struct FActiveGameplayEffectHandle& Handle, float* EffectStartTime, float* EffectDuration) const;
	int32 GetMaxLevel() const;
	int32 GetPlayerLevel() const;
	int32 GetSpellPoints() const;
	int32 GetXP() const;
	int32 GetXPForThisLevel() const;
	bool IsAtMaxLevel() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseAbilitiesComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseAbilitiesComponent")
	}
	static class UBaseAbilitiesComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseAbilitiesComponent>();
	}
};
DUMPER7_ASSERTS_UBaseAbilitiesComponent;

// Class Smuta.EquipmentDefinedActionData
// 0x0050 (0x0080 - 0x0030)
class UEquipmentDefinedActionData : public UBaseActionData
{
public:
	TMap<EEquipmentType, struct FTaggedMontages>  EquipmentMontagesData;                             // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EquipmentDefinedActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EquipmentDefinedActionData")
	}
	static class UEquipmentDefinedActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEquipmentDefinedActionData>();
	}
};
DUMPER7_ASSERTS_UEquipmentDefinedActionData;

// Class Smuta.EquipmentDefinedPairedActionData
// 0x0050 (0x0080 - 0x0030)
class UEquipmentDefinedPairedActionData : public UBaseActionData
{
public:
	TMap<EEquipmentType, struct FPairedMontagesData> EquipmentPairedMontagesData;                    // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

public:
	void GetMontagesData(struct FPairedTaggedMontages* ResultPairedTaggedMontages, EEquipmentType EquipmentType, float PairDistance) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EquipmentDefinedPairedActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EquipmentDefinedPairedActionData")
	}
	static class UEquipmentDefinedPairedActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEquipmentDefinedPairedActionData>();
	}
};
DUMPER7_ASSERTS_UEquipmentDefinedPairedActionData;

// Class Smuta.BaseAnimInstance
// 0x0070 (0x03C0 - 0x0350)
#pragma pack(push, 0x1)
class alignas(0x10) UBaseAnimInstance : public UAnimInstance
{
public:
	struct FVector2D                              LookRotationVerticalBounds;                        // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              LookRotationHorizontalBounds;                      // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagBlueprintPropertyMap       GameplayTagPropertyMap;                            // 0x0368(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UEffectAnimInstance>        HitResponseAnimation;                              // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UAnimInstance>              DeathAnimation;                                    // 0x0390(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bMoveInWater;                                      // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EWaterSurfaceType                             WaterType;                                         // 0x0399(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_39A[0x2];                                      // 0x039A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaterDepth;                                        // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         WaterDepthLimitShallow;                            // 0x03A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         WaterDepthLimitDeep;                               // 0x03A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         WaterDepthLimitChoke;                              // 0x03A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSunkDeath;                                        // 0x03AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bTrapDeath;                                        // 0x03AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCanClimb;                                         // 0x03AE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3AF[0x1];                                      // 0x03AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ClimbHeight;                                       // 0x03B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bWalk;                                             // 0x03B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B5[0x3];                                      // 0x03B5(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FVector2D GetMovementDirection();
	void StopDialogAnimation();

	struct FVector2D GetLookDirectionAngle() const;
	struct FVector2D GetMovementAxis() const;
	ERootMotionMode GetRootMotionMode() const;
	bool IsMoving() const;
	bool IsMovingForward() const;
	bool IsSprint() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseAnimInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseAnimInstance")
	}
	static class UBaseAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseAnimInstance>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_UBaseAnimInstance;

// Class Smuta.BaseAttributes
// 0x0470 (0x04A0 - 0x0030)
class UBaseAttributes final : public UAttributeSet
{
public:
	TMulticastInlineDelegate<void(const float& Health)> OnMaxHealth;                                 // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const float& Damage)> OnDamageReceived;                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const float& Health)> OnHealthReceived;                            // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayModifierEvaluatedData& ModifierEvaluatedData, const struct FGameplayEffectSpec& EffectSpec)> OnHealthChangeEffectDelegate; // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const float& Damage)> OnPredictedDamageReceived;                   // 0x0070(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnPreZeroHealth;                                   // 0x0080(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const float& OldValue, const float& NewValue)> OnKnifeAmmoChanged; // 0x0090(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const float& OldValue, const float& NewValue)> OnPistolAmmoChanged; // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const float& OldValue, const float& NewValue)> OnPistolClipCapacityChanged; // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const float& OldValue, const float& NewValue)> OnHPPotionAmountChanged; // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const float& OldValue, const float& NewValue)> OnMaxHealthChanged; // 0x00D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 MaxHealthModifier;                                 // 0x00E0(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 MaxHealth;                                         // 0x00F0(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 Health;                                            // 0x0100(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 HealthRegenerationDelay;                           // 0x0110(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 HealthRegenerationSpeed;                           // 0x0120(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 MaxHunger;                                         // 0x0130(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 Hunger;                                            // 0x0140(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 MaxDodges;                                         // 0x0150(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 DodgeIndex;                                        // 0x0160(0x0010)(BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 MaxNightMissChance;                                // 0x0170(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 NightMissChance;                                   // 0x0180(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 IncomingXP;                                        // 0x0190(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 MaxNoiseRange;                                     // 0x01A0(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 NoiseRange;                                        // 0x01B0(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 MaxStealthRange;                                   // 0x01C0(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 StealthRange;                                      // 0x01D0(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 StealthRangeRestore;                               // 0x01E0(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 StealthRangeConsumptionThrowStone;                 // 0x01F0(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 StealthRangeConsumptionSilentKill;                 // 0x0200(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 AccuracyCapacity;                                  // 0x0210(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 AccuracySmallCapacity;                             // 0x0220(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 AccuracyBigCapacity;                               // 0x0230(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 AgilityCapacity;                                   // 0x0240(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 AgilitySmallCapacity;                              // 0x0250(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 AgilityBigCapacity;                                // 0x0260(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 HPPotionAmount;                                    // 0x0270(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 HPPotionMaxAmount;                                 // 0x0280(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 HPPotionCapacity;                                  // 0x0290(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 HPPotionSmallCapacity;                             // 0x02A0(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 HPPotionBigCapacity;                               // 0x02B0(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 PoisonCapacity;                                    // 0x02C0(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 PoisonSmallCapacity;                               // 0x02D0(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 PoisonBigCapacity;                                 // 0x02E0(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 ProtectionCapacity;                                // 0x02F0(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 ProtectionSmallCapacity;                           // 0x0300(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 ProtectionBigCapacity;                             // 0x0310(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 SleepCapacity;                                     // 0x0320(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 SleepSmallCapacity;                                // 0x0330(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 SleepBigCapacity;                                  // 0x0340(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 Slot1Capacity;                                     // 0x0350(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 Slot1Cooldown;                                     // 0x0360(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 Slot1Used;                                         // 0x0370(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 Slot2Capacity;                                     // 0x0380(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 Slot2Cooldown;                                     // 0x0390(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 Slot2Used;                                         // 0x03A0(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 PistolMaxAmmo;                                     // 0x03B0(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 PistolAmmo;                                        // 0x03C0(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 PistolMaxClipCapacity;                             // 0x03D0(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 PistolClipCapacity;                                // 0x03E0(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 MushketMaxAmmo;                                    // 0x03F0(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 MushketAmmo;                                       // 0x0400(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 MushketMaxClipCapacity;                            // 0x0410(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 MushketClipCapacity;                               // 0x0420(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 KnifeMaxAmmo;                                      // 0x0430(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 KnifeAmmo;                                         // 0x0440(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 Mercy;                                             // 0x0450(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 Anger;                                             // 0x0460(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 IntuitionRadius;                                   // 0x0470(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 PredictedDamage;                                   // 0x0480(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         Pad_490[0x10];                                     // 0x0490(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_MaxNoiseRange(const struct FGameplayAttributeData& OldMaxNoiseRange) const;
	void OnRep_MaxStealthRange(const struct FGameplayAttributeData& OldMaxStealthRange) const;
	void OnRep_NoiseRange(const struct FGameplayAttributeData& OldNoiseRange) const;
	void OnRep_StealthRange(const struct FGameplayAttributeData& OldStealthRange) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseAttributes")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseAttributes")
	}
	static class UBaseAttributes* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseAttributes>();
	}
};
DUMPER7_ASSERTS_UBaseAttributes;

// Class Smuta.DieInterface
// 0x0000 (0x0000 - 0x0000)
class IDieInterface final
{
public:
	void Die();

	bool IsDead() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DieInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DieInterface")
	}
	static class IDieInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IDieInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IDieInterface;

// Class Smuta.BaseCheatManager
// 0x0010 (0x0098 - 0x0088)
class UBaseCheatManager : public UCheatManager
{
public:
	TArray<TSubclassOf<class UBaseCheatManagerExtension>> Cheats;                                    // 0x0088(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static void LogBenchmarkResult(const TArray<struct FStringValuePair>& Results);
	static void OnLevelSequencePlayerCameraCut(class UCameraComponent* CameraComponent);
	static void StartBenchmarkTest();
	static void StopBenchmarkTest();

	void SetCodexArticleOpened(const class FName& ArticleId);
	void SetCodexArticlesOpened(const TArray<class FName>& Articles);
	void StartFPSCounter(const TArray<class FString>& Args);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseCheatManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseCheatManager")
	}
	static class UBaseCheatManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseCheatManager>();
	}
};
DUMPER7_ASSERTS_UBaseCheatManager;

// Class Smuta.GameSettingPressAnyKey
// 0x0038 (0x0448 - 0x0410)
class UGameSettingPressAnyKey final : public UCommonActivatableWidget
{
public:
	TMulticastInlineDelegate<void(const struct FKey& Key)> OnKeySelected;                            // 0x0410(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnKeySelectionCanceled;                            // 0x0420(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_430[0x18];                                     // 0x0430(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameSettingPressAnyKey")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameSettingPressAnyKey")
	}
	static class UGameSettingPressAnyKey* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameSettingPressAnyKey>();
	}
};
DUMPER7_ASSERTS_UGameSettingPressAnyKey;

// Class Smuta.BaseCheatManagerExtension
// 0x0000 (0x0028 - 0x0028)
class UBaseCheatManagerExtension : public UCheatManagerExtension
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseCheatManagerExtension")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseCheatManagerExtension")
	}
	static class UBaseCheatManagerExtension* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseCheatManagerExtension>();
	}
};
DUMPER7_ASSERTS_UBaseCheatManagerExtension;

// Class Smuta.BaseEffect
// 0x0008 (0x0A78 - 0x0A70)
class UBaseEffect : public UGameplayEffect
{
public:
	TSubclassOf<class UEffectAnimInstance>        AnimationToApply;                                  // 0x0A70(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseEffect")
	}
	static class UBaseEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseEffect>();
	}
};
DUMPER7_ASSERTS_UBaseEffect;

// Class Smuta.BaseHitAbility
// 0x0000 (0x0460 - 0x0460)
class UBaseHitAbility : public UAbilityBase
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseHitAbility")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseHitAbility")
	}
	static class UBaseHitAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseHitAbility>();
	}
};
DUMPER7_ASSERTS_UBaseHitAbility;

// Class Smuta.BaseMapMarkWidget
// 0x0000 (0x02C0 - 0x02C0)
class UBaseMapMarkWidget : public UUserWidget
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseMapMarkWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseMapMarkWidget")
	}
	static class UBaseMapMarkWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseMapMarkWidget>();
	}
};
DUMPER7_ASSERTS_UBaseMapMarkWidget;

// Class Smuta.BaseModMagnitudeCalculation
// 0x0000 (0x0040 - 0x0040)
class UBaseModMagnitudeCalculation : public UGameplayModMagnitudeCalculation
{
public:
	class AActor* GetInstigatorActor(const struct FGameplayEffectSpec& Spec) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseModMagnitudeCalculation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseModMagnitudeCalculation")
	}
	static class UBaseModMagnitudeCalculation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseModMagnitudeCalculation>();
	}
};
DUMPER7_ASSERTS_UBaseModMagnitudeCalculation;

// Class Smuta.BaseUIContainer
// 0x0000 (0x02E8 - 0x02E8)
class UBaseUIContainer : public UCommonUserWidget
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseUIContainer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseUIContainer")
	}
	static class UBaseUIContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseUIContainer>();
	}
};
DUMPER7_ASSERTS_UBaseUIContainer;

// Class Smuta.BaseUpgradeObject
// 0x00C0 (0x00E8 - 0x0028)
class UBaseUpgradeObject final : public UObject
{
public:
	TArray<TSubclassOf<class UGameplayEffect>>    UpgradeEffects;                                    // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<EEquipmentSlotType, TSubclassOf<class UCharacterEquipmentSetInfo>> GrantingEquipment;       // 0x0038(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FUpgradeUIData                         UIData;                                            // 0x0088(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseUpgradeObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseUpgradeObject")
	}
	static class UBaseUpgradeObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseUpgradeObject>();
	}
};
DUMPER7_ASSERTS_UBaseUpgradeObject;

// Class Smuta.BaseVertexActor
// 0x0108 (0x03A0 - 0x0298)
#pragma pack(push, 0x1)
class alignas(0x10) ABaseVertexActor : public AActor
{
public:
	bool                                          bAffectNavigation;                                 // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        SceneComponent;                                    // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBillboardComponent*                    BillboardComponent;                                // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBillboardComponent*                    BillboardStateComponent;                           // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                             IconVAT;                                           // 0x02B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHideBillboard;                                    // 0x02C0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C1[0xF];                                      // 0x02C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             BillboardOffset;                                   // 0x02D0(0x0060)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTransform                             BillboardStateOffset;                              // 0x0330(0x0060)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bActiveVAT;                                        // 0x0390(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsPlay;                                           // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_392[0x6];                                      // 0x0392(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BlueprintSetupVAT();
	void BlueprintStatusVAT(bool Activate);
	void DebugInfo(bool ShowInfo);
	bool GetActiveVAT();
	bool GetHideBillboard();
	void SetHideBillboard(bool NewValue);
	void SetupVAT();
	void StatusVAT(bool Activate);

	class UBillboardComponent* GetBillboardComponent() const;
	class UBillboardComponent* GetBillboardStateComponent() const;
	bool GetIsPlay() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseVertexActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseVertexActor")
	}
	static class ABaseVertexActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABaseVertexActor>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_ABaseVertexActor;

// Class Smuta.BattleAssistanceComponent
// 0x0170 (0x0210 - 0x00A0)
class UBattleAssistanceComponent final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(int32 Stacks)>  OnHitStacksUpdated;                                // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_B0[0x8];                                       // 0x00B0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StacksResetTime;                                   // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BC[0x9];                                       // 0x00BC(0x0009)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bUseTags;                                          // 0x00C5(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, EFightAction>       ActionsMap;                                        // 0x00C8(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  HitList;                                           // 0x0118(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_138[0xD8];                                     // 0x0138(0x00D8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BindOnHitActions();
	void BindOnTargetActions(class AActor* NewAgroTarget);
	float GetTimeAfterLastHit();
	void HandleHitTagChanged(const struct FGameplayTag& UpdatedTag, bool bExists);
	bool IsInHit();
	void OnActionStageChanged(const struct FGameplayTag& GameplayTag, int32 Count);
	void OnTargetTagChanged(const struct FGameplayTag& UpdatedTag, bool bExists);
	void OnWeaponMeshHitRecieved(class UEquipmentComponent* InstigatorEquipmentComponent, const struct FCombatHitData& WeaponHitData, const EHand WeaponHand);
	void ResetStacks();

	int32 GetHitStacks() const;
	int32 GetKickHitStacks() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BattleAssistanceComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BattleAssistanceComponent")
	}
	static class UBattleAssistanceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleAssistanceComponent>();
	}
};
DUMPER7_ASSERTS_UBattleAssistanceComponent;

// Class Smuta.BattleMovementActionData
// 0x0050 (0x0080 - 0x0030)
class UBattleMovementActionData final : public UBaseActionData
{
public:
	TMap<class UEquipmentData*, struct FBattleMovementMontages> Montages;                            // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BattleMovementActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BattleMovementActionData")
	}
	static class UBattleMovementActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleMovementActionData>();
	}
};
DUMPER7_ASSERTS_UBattleMovementActionData;

// Class Smuta.BattleStateEffect
// 0x0008 (0x0A78 - 0x0A70)
class UBattleStateEffect : public UGameplayEffect
{
public:
	uint8                                         Pad_A70[0x8];                                      // 0x0A70(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BattleStateEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BattleStateEffect")
	}
	static class UBattleStateEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleStateEffect>();
	}
};
DUMPER7_ASSERTS_UBattleStateEffect;

// Class Smuta.BattleStateWithPlayer
// 0x0000 (0x0A78 - 0x0A78)
class UBattleStateWithPlayer final : public UBattleStateEffect
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BattleStateWithPlayer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BattleStateWithPlayer")
	}
	static class UBattleStateWithPlayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleStateWithPlayer>();
	}
};
DUMPER7_ASSERTS_UBattleStateWithPlayer;

// Class Smuta.BattleStats
// 0x01F0 (0x0220 - 0x0030)
class UBattleStats final : public UAttributeSet
{
public:
	struct FGameplayAttributeData                 Damage;                                            // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 HeavyDamage;                                       // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 Armor;                                             // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 ArmorIgnore;                                       // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 CritChance;                                        // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 StunChance;                                        // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 LightComboLength;                                  // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 HeavyComboLength;                                  // 0x00A0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 MixedComboLength;                                  // 0x00B0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 KillExperience;                                    // 0x00C0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 ArmoredHitDamageReduction;                         // 0x00D0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 DeflectedHitsLimitForProbableStun;                 // 0x00E0(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 DeflectedHitsLimitForGrantedStun;                  // 0x00F0(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 DeflectedHitStunProbability;                       // 0x0100(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 MaxConcentration;                                  // 0x0110(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 Concentration;                                     // 0x0120(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 ConcentrationModeCost;                             // 0x0130(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 ConcentrationPassiveRegenAmount;                   // 0x0140(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 ConcentrationPassiveRegenTiming;                   // 0x0150(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 VigorValue;                                        // 0x0160(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 VigorMaxLimit;                                     // 0x0170(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 VigorRestoreLimit;                                 // 0x0180(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 VigorRaiseMultiplier;                              // 0x0190(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 VigorDeclineMultiplier;                            // 0x01A0(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 VigorConcentrationCorrelation;                     // 0x01B0(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const float& OldValue, const float& NewValue)> OnConcentrationChangedDelegate; // 0x01C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const float& OldValue, const float& NewValue)> OnMaxConcentrationChangedDelegate; // 0x01D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const float& OldValue, const float& NewValue)> OnVigorChangedDelegate; // 0x01E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const float& OldValue, const float& NewValue)> OnMaxVigorChangedDelegate; // 0x01F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayModifierEvaluatedData& ModifierEvaluatedData, const struct FGameplayEffectSpec& EffectSpec)> OnConcentrationChangeEffectDelegate; // 0x0200(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayModifierEvaluatedData& ModifierEvaluatedData, const struct FGameplayEffectSpec& EffectSpec)> OnVigorChangeEffectDelegate; // 0x0210(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void OnRep_Armor(const struct FGameplayAttributeData& PreviousValue);
	void OnRep_ArmoredHitDamageReduction(const struct FGameplayAttributeData& PreviousValue);
	void OnRep_ArmorIgnore(const struct FGameplayAttributeData& PreviousValue);
	void OnRep_CritChance(const struct FGameplayAttributeData& PreviousValue);
	void OnRep_Damage(const struct FGameplayAttributeData& PreviousValue);
	void OnRep_HeavyComboLength(const struct FGameplayAttributeData& PreviousValue);
	void OnRep_HeavyDamage(const struct FGameplayAttributeData& PreviousValue);
	void OnRep_KillExperience(const struct FGameplayAttributeData& PreviousValue);
	void OnRep_LightComboLength(const struct FGameplayAttributeData& PreviousValue);
	void OnRep_MixedComboLength(const struct FGameplayAttributeData& PreviousValue);
	void OnRep_StunChance(const struct FGameplayAttributeData& PreviousValue);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BattleStats")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BattleStats")
	}
	static class UBattleStats* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleStats>();
	}
};
DUMPER7_ASSERTS_UBattleStats;

// Class Smuta.BlockAbilityOptionalObject
// 0x0010 (0x0038 - 0x0028)
class UBlockAbilityOptionalObject final : public UBaseOptionalAbilityObject
{
public:
	float                                         BlockDuration;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DurationVariance;                                  // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LastBlockTime;                                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float CalculateBlockDuration();
	float GetBlockTime();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BlockAbilityOptionalObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BlockAbilityOptionalObject")
	}
	static class UBlockAbilityOptionalObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlockAbilityOptionalObject>();
	}
};
DUMPER7_ASSERTS_UBlockAbilityOptionalObject;

// Class Smuta.BlockActionData
// 0x0050 (0x0080 - 0x0030)
class UBlockActionData final : public UBaseActionData
{
public:
	TMap<class UEquipmentData*, struct FBlockActionMontages> Montages;                               // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BlockActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BlockActionData")
	}
	static class UBlockActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlockActionData>();
	}
};
DUMPER7_ASSERTS_UBlockActionData;

// Class Smuta.BlockTypedActionData
// 0x0050 (0x0080 - 0x0030)
class UBlockTypedActionData final : public UBaseActionData
{
public:
	TMap<EEquipmentType, struct FBlockActionMontages> Montages;                                      // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BlockTypedActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BlockTypedActionData")
	}
	static class UBlockTypedActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlockTypedActionData>();
	}
};
DUMPER7_ASSERTS_UBlockTypedActionData;

// Class Smuta.FencingBlockActionData
// 0x0050 (0x0080 - 0x0030)
class UFencingBlockActionData final : public UBaseActionData
{
public:
	TMap<EEquipmentType, struct FBlockActionMontages> Montages;                                      // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FencingBlockActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FencingBlockActionData")
	}
	static class UFencingBlockActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFencingBlockActionData>();
	}
};
DUMPER7_ASSERTS_UFencingBlockActionData;

// Class Smuta.BTDecorator_Chance
// 0x0020 (0x0088 - 0x0068)
class UBTDecorator_Chance final : public UBTDecorator
{
public:
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bGetDataFromTraits;                                // 0x0070(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SettingsDataTag;                                   // 0x0074(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UChanceSettings*                        ChanceSettings;                                    // 0x0080(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BTDecorator_Chance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BTDecorator_Chance")
	}
	static class UBTDecorator_Chance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTDecorator_Chance>();
	}
};
DUMPER7_ASSERTS_UBTDecorator_Chance;

// Class Smuta.CooldownSettings
// 0x0018 (0x0040 - 0x0028)
class UCooldownSettings final : public UObject
{
public:
	double                                        CoolDownTime;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        CoolDownDelta;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Stacks;                                            // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CooldownSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CooldownSettings")
	}
	static class UCooldownSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCooldownSettings>();
	}
};
DUMPER7_ASSERTS_UCooldownSettings;

// Class Smuta.BTDecorator_CooldownWithDelta
// 0x0020 (0x0088 - 0x0068)
class UBTDecorator_CooldownWithDelta final : public UBTDecorator
{
public:
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bGetDataFromTraits;                                // 0x0070(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SettingsDataTag;                                   // 0x0074(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCooldownSettings*                      CooldownSettings;                                  // 0x0080(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BTDecorator_CooldownWithDelta")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BTDecorator_CooldownWithDelta")
	}
	static class UBTDecorator_CooldownWithDelta* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTDecorator_CooldownWithDelta>();
	}
};
DUMPER7_ASSERTS_UBTDecorator_CooldownWithDelta;

// Class Smuta.EnvQueryTraitsSetting
// 0x0008 (0x0030 - 0x0028)
class UEnvQueryTraitsSetting final : public UObject
{
public:
	class UEnvQuery*                              EQS;                                               // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EnvQueryTraitsSetting")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EnvQueryTraitsSetting")
	}
	static class UEnvQueryTraitsSetting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnvQueryTraitsSetting>();
	}
};
DUMPER7_ASSERTS_UEnvQueryTraitsSetting;

// Class Smuta.BTDecorator_EnvQuerySetting
// 0x0020 (0x00C0 - 0x00A0)
class UBTDecorator_EnvQuerySetting final : public UBTDecorator_BlueprintBase
{
public:
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bGetDataFromTraits;                                // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SettingsDataTag;                                   // 0x00AC(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnvQueryTraitsSetting*                 EQSTraitsSetting;                                  // 0x00B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	class UEnvQuery* GetEQSSetting(class APawn* OwnerPawn);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BTDecorator_EnvQuerySetting")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BTDecorator_EnvQuerySetting")
	}
	static class UBTDecorator_EnvQuerySetting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTDecorator_EnvQuerySetting>();
	}
};
DUMPER7_ASSERTS_UBTDecorator_EnvQuerySetting;

// Class Smuta.HitStackSettings
// 0x0008 (0x0030 - 0x0028)
class UHitStackSettings final : public UObject
{
public:
	int32                                         HitStacks;                                         // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HitStackSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HitStackSettings")
	}
	static class UHitStackSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHitStackSettings>();
	}
};
DUMPER7_ASSERTS_UHitStackSettings;

// Class Smuta.BTD_CheckHitStacks
// 0x0020 (0x00C0 - 0x00A0)
class UBTD_CheckHitStacks : public UBTDecorator_BlueprintBase
{
public:
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bGetDataFromTraits;                                // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SettingsDataTag;                                   // 0x00AC(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHitStackSettings*                      HitStacksSettings;                                 // 0x00B8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	int32 GetHitStacks() const;
	void StopHitAbility() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BTD_CheckHitStacks")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BTD_CheckHitStacks")
	}
	static class UBTD_CheckHitStacks* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTD_CheckHitStacks>();
	}
};
DUMPER7_ASSERTS_UBTD_CheckHitStacks;

// Class Smuta.BTD_CustomCooldown
// 0x0008 (0x0070 - 0x0068)
class UBTD_CustomCooldown final : public UBTDecorator
{
public:
	float                                         CoolDownTime;                                      // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BTD_CustomCooldown")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BTD_CustomCooldown")
	}
	static class UBTD_CustomCooldown* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTD_CustomCooldown>();
	}
};
DUMPER7_ASSERTS_UBTD_CustomCooldown;

// Class Smuta.ActivateAbilitySettingsObject
// 0x0018 (0x0040 - 0x0028)
class UActivateAbilitySettingsObject : public UObject
{
public:
	TSubclassOf<class UAbilityBase>               AbilityClass;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           EventTag;                                          // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBaseOptionalAbilityObject*             OptionalAbilityObject;                             // 0x0038(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	bool InitializeSettingsObject();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActivateAbilitySettingsObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActivateAbilitySettingsObject")
	}
	static class UActivateAbilitySettingsObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivateAbilitySettingsObject>();
	}
};
DUMPER7_ASSERTS_UActivateAbilitySettingsObject;

// Class Smuta.ActivateBlockSettingsObject
// 0x0010 (0x0050 - 0x0040)
class UActivateBlockSettingsObject final : public UActivateAbilitySettingsObject
{
public:
	bool                                          bIsAlwaysInBlock;                                  // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HitStacksRequired;                                 // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCooldown;                                      // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CooldownDuration;                                  // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActivateBlockSettingsObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActivateBlockSettingsObject")
	}
	static class UActivateBlockSettingsObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivateBlockSettingsObject>();
	}
};
DUMPER7_ASSERTS_UActivateBlockSettingsObject;

// Class Smuta.BTS_UpdateBlock
// 0x0028 (0x0098 - 0x0070)
class UBTS_UpdateBlock final : public UBTService
{
public:
	uint8                                         Pad_70[0x8];                                       // 0x0070(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bGetDataFromTraits;                                // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SettingsDataTag;                                   // 0x007C(0x0008)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActivateBlockSettingsObject*           BlockSettings;                                     // 0x0088(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattleAssistanceComponent*             BattleAssistanceComponent;                         // 0x0090(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BTS_UpdateBlock")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BTS_UpdateBlock")
	}
	static class UBTS_UpdateBlock* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_UpdateBlock>();
	}
};
DUMPER7_ASSERTS_UBTS_UpdateBlock;

// Class Smuta.BTTask_ActivateAbilityByEvent
// 0x0020 (0x00C8 - 0x00A8)
class UBTTask_ActivateAbilityByEvent : public UBTTask_BlueprintBase
{
public:
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          UseDataFromTraits;                                 // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           TraitsDataTag;                                     // 0x00B4(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActivateAbilitySettingsObject*         SettingsObject;                                    // 0x00C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BTTask_ActivateAbilityByEvent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BTTask_ActivateAbilityByEvent")
	}
	static class UBTTask_ActivateAbilityByEvent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTTask_ActivateAbilityByEvent>();
	}
};
DUMPER7_ASSERTS_UBTTask_ActivateAbilityByEvent;

// Class Smuta.BTTask_RunBehaviourByTag
// 0x0010 (0x0098 - 0x0088)
class UBTTask_RunBehaviourByTag final : public UBTTask_RunBehaviorDynamic
{
public:
	class FString                                 Prefix;                                            // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BTTask_RunBehaviourByTag")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BTTask_RunBehaviourByTag")
	}
	static class UBTTask_RunBehaviourByTag* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTTask_RunBehaviourByTag>();
	}
};
DUMPER7_ASSERTS_UBTTask_RunBehaviourByTag;

// Class Smuta.WaitTraitsTimeSettingsObject
// 0x0008 (0x0030 - 0x0028)
class UWaitTraitsTimeSettingsObject final : public UObject
{
public:
	float                                         Time;                                              // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RandomDeviation;                                   // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WaitTraitsTimeSettingsObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WaitTraitsTimeSettingsObject")
	}
	static class UWaitTraitsTimeSettingsObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWaitTraitsTimeSettingsObject>();
	}
};
DUMPER7_ASSERTS_UWaitTraitsTimeSettingsObject;

// Class Smuta.BTTask_WaitTraitsTime
// 0x0018 (0x00C0 - 0x00A8)
class UBTTask_WaitTraitsTime final : public UBTTask_BlueprintBase
{
public:
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           TraitsDataTag;                                     // 0x00B0(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWaitTraitsTimeSettingsObject*          SettingsObject;                                    // 0x00B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BTTask_WaitTraitsTime")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BTTask_WaitTraitsTime")
	}
	static class UBTTask_WaitTraitsTime* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTTask_WaitTraitsTime>();
	}
};
DUMPER7_ASSERTS_UBTTask_WaitTraitsTime;

// Class Smuta.CameraModeData
// 0x0078 (0x00A8 - 0x0030)
class UCameraModeData final : public UDataAsset
{
public:
	float                                         AdditionalFOV;                                     // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LowSettingsAdditionalFOV;                          // 0x0034(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraVerticalOffset;                              // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraHorizontalOffset;                            // 0x003C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraDistance;                                    // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LowSettingsAdditionalCameraDistance;               // 0x0044(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              CameraPitchBounds;                                 // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            CameraBlendCurve;                                  // 0x0058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendTime;                                         // 0x0060(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BoneName;                                          // 0x0064(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldUseLocal;                                   // 0x006C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RelativeLocation;                                  // 0x0070(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               RelativeRotation;                                  // 0x0088(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bSnapCameraToBack;                                 // 0x00A0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CameraModeData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CameraModeData")
	}
	static class UCameraModeData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCameraModeData>();
	}
};
DUMPER7_ASSERTS_UCameraModeData;

// Class Smuta.CameraShakeEffectComponent
// 0x0028 (0x0050 - 0x0028)
class UCameraShakeEffectComponent final : public UGameplayEffectComponent
{
public:
	TSubclassOf<class UCameraShakeBase>           ShakeClass;                                        // 0x0028(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ShakeScale;                                        // 0x0030(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECameraShakePlaySpace                         ShakePlaySpace;                                    // 0x0034(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               DefaultShakeSpaceRotation;                         // 0x0038(0x0018)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CameraShakeEffectComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CameraShakeEffectComponent")
	}
	static class UCameraShakeEffectComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCameraShakeEffectComponent>();
	}
};
DUMPER7_ASSERTS_UCameraShakeEffectComponent;

// Class Smuta.CameraZoomEffectComponent
// 0x0010 (0x0038 - 0x0028)
class UCameraZoomEffectComponent final : public UGameplayEffectComponent
{
public:
	float                                         ZoomDistance;                                      // 0x0028(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            ZoomCurve;                                         // 0x0030(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CameraZoomEffectComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CameraZoomEffectComponent")
	}
	static class UCameraZoomEffectComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCameraZoomEffectComponent>();
	}
};
DUMPER7_ASSERTS_UCameraZoomEffectComponent;

// Class Smuta.CancelAbilityEffectComponent
// 0x0040 (0x0068 - 0x0028)
class UCancelAbilityEffectComponent final : public UGameplayEffectComponent
{
public:
	struct FGameplayTagContainer                  WithTags;                                          // 0x0028(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  WithoutTags;                                       // 0x0048(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CancelAbilityEffectComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CancelAbilityEffectComponent")
	}
	static class UCancelAbilityEffectComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCancelAbilityEffectComponent>();
	}
};
DUMPER7_ASSERTS_UCancelAbilityEffectComponent;

// Class Smuta.CaptureMovableObjectAction
// 0x0028 (0x0058 - 0x0030)
class UCaptureMovableObjectAction final : public UQuestStepAction
{
public:
	TSoftObjectPtr<class AMovableActorBase>       MovableObject;                                     // 0x0030(0x0028)(Edit, SaveGame, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CaptureMovableObjectAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CaptureMovableObjectAction")
	}
	static class UCaptureMovableObjectAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCaptureMovableObjectAction>();
	}
};
DUMPER7_ASSERTS_UCaptureMovableObjectAction;

// Class Smuta.CatPOI
// 0x0010 (0x02C0 - 0x02B0)
class ACatPOI final : public ABasePOI
{
public:
	class ACityAnimalSpawner*                     OwnerSpawner;                                      // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           AnimMontage;                                       // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CatPOI")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CatPOI")
	}
	static class ACatPOI* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACatPOI>();
	}
};
DUMPER7_ASSERTS_ACatPOI;

// Class Smuta.ChangeComponentVisibilityInteraction
// 0x0030 (0x0058 - 0x0028)
class UChangeComponentVisibilityInteraction final : public UInteraction
{
public:
	struct FComponentReference                    Component;                                         // 0x0028(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bShouldBeVisible;                                  // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ChangeComponentVisibilityInteraction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ChangeComponentVisibilityInteraction")
	}
	static class UChangeComponentVisibilityInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChangeComponentVisibilityInteraction>();
	}
};
DUMPER7_ASSERTS_UChangeComponentVisibilityInteraction;

// Class Smuta.ChangeMeshInteraction
// 0x0030 (0x0058 - 0x0028)
class UChangeMeshInteraction final : public UInteraction
{
public:
	struct FComponentReference                    Component;                                         // 0x0028(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UStaticMesh*                            NewStaticMesh;                                     // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ChangeMeshInteraction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ChangeMeshInteraction")
	}
	static class UChangeMeshInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChangeMeshInteraction>();
	}
};
DUMPER7_ASSERTS_UChangeMeshInteraction;

// Class Smuta.CharacterEquipmentSetInfo
// 0x0000 (0x0060 - 0x0060)
class UCharacterEquipmentSetInfo final : public UEquipmentSetInfo
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CharacterEquipmentSetInfo")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CharacterEquipmentSetInfo")
	}
	static class UCharacterEquipmentSetInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterEquipmentSetInfo>();
	}
};
DUMPER7_ASSERTS_UCharacterEquipmentSetInfo;

// Class Smuta.CharacterAppearanceItem
// 0x0058 (0x01F0 - 0x0198)
class UCharacterAppearanceItem : public UAppearanceItem
{
public:
	EFraction                                     Fraction;                                          // 0x0198(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USkeletalMesh>           AppearanceHead;                                    // 0x01A0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>           AppearanceHorse;                                   // 0x01C8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CharacterAppearanceItem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CharacterAppearanceItem")
	}
	static class UCharacterAppearanceItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterAppearanceItem>();
	}
};
DUMPER7_ASSERTS_UCharacterAppearanceItem;

// Class Smuta.CharacterBattleStateController
// 0x00A8 (0x0148 - 0x00A0)
class UCharacterBattleStateController : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(const TSet<class ADefaultCharacter*>& AimingEnemies)> OnAimingEnemies; // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class ADefaultCharacter* AimingEnemy, bool bAiming)> OnEnemyAimingChanged; // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_C0[0x88];                                      // 0x00C0(0x0088)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetAimingEnemyState(class AActor* AimingEnemyActor, bool bAiming);

	TSet<class ADefaultCharacter*> GetAllAimingEnemies() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CharacterBattleStateController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CharacterBattleStateController")
	}
	static class UCharacterBattleStateController* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterBattleStateController>();
	}
};
DUMPER7_ASSERTS_UCharacterBattleStateController;

// Class Smuta.CharacterOptimizationComponent
// 0x0040 (0x00F8 - 0x00B8)
class UCharacterOptimizationComponent final : public USignificanceActorComponent
{
public:
	float                                         FaceLockScore;                                     // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         BodyLockScore;                                     // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MovementUpdateRateLowReductionScore;               // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MovementUpdateRateMediumReductionScore;            // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MovementUpdateRateHighReductionScore;              // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ActorTickReductionUpdateScore;                     // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         BTUpdateScore;                                     // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         BTPauseScore;                                      // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DisableWidgetsScore;                               // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MovementCompUpdateRateLow;                         // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MovementCompUpdateRateMed;                         // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MovementCompUpdateRateHigh;                        // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E8[0x10];                                      // 0x00E8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnTagChangedResponse(const struct FGameplayTag& UpdatedTag, bool bExists);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CharacterOptimizationComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CharacterOptimizationComponent")
	}
	static class UCharacterOptimizationComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterOptimizationComponent>();
	}
};
DUMPER7_ASSERTS_UCharacterOptimizationComponent;

// Class Smuta.CheckAttackToBlockApplicationRequirement
// 0x0038 (0x0060 - 0x0028)
class UCheckAttackToBlockApplicationRequirement final : public UGameplayEffectCustomApplicationRequirement
{
public:
	TSubclassOf<class UGameplayEffect>            ShieldBlockEffect;                                 // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           BlockedHitTag;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ParriedAttackTag;                                  // 0x0038(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ActiveBlockTag;                                    // 0x0040(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           PassiveBlockTag;                                   // 0x0048(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            StaminaChangerGE;                                  // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            BlockStaminaRegenGE;                               // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CheckAttackToBlockApplicationRequirement")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CheckAttackToBlockApplicationRequirement")
	}
	static class UCheckAttackToBlockApplicationRequirement* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCheckAttackToBlockApplicationRequirement>();
	}
};
DUMPER7_ASSERTS_UCheckAttackToBlockApplicationRequirement;

// Class Smuta.CityAnimalSpawner
// 0x0028 (0x0340 - 0x0318)
class ACityAnimalSpawner final : public AMatrixSpawnerBase
{
public:
	TArray<class ACatPOI*>                        CatPOIs;                                           // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TArray<class ACatPOI*>                        DogsPOIs;                                          // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	ECityAnimalType                               CityAnimalType;                                    // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CityAnimalSpawner")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CityAnimalSpawner")
	}
	static class ACityAnimalSpawner* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACityAnimalSpawner>();
	}
};
DUMPER7_ASSERTS_ACityAnimalSpawner;

// Class Smuta.CityManager
// 0x0038 (0x02D0 - 0x0298)
class ACityManager : public AActor
{
public:
	TArray<class AHumanPOI*>                      RamblePoints;                                      // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	class UBillboardComponent*                    BillboardComponent;                                // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                        SceneComponent;                                    // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AHumanPOI*                              ExPoint;                                           // 0x02B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                 DayNightController;                                // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                     DayNightClass;                                     // 0x02C8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class UMatrixDialogue* FilterDialogue(EHumanRoleType FirstCharType, EHumanRoleType SecondCharType, EGenderType FirstCharGender, EGenderType SecondCharGender, const TArray<class UMatrixDialogue*>& Dialogues);
	class AActor* GetDNC();
	void InitSpawners(const TArray<class AHumanMatrixSpawner*>& Spawners);
	class AHumanPOI* SearchPoint(const TArray<class AHumanPOI*>& POIs);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CityManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CityManager")
	}
	static class ACityManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACityManager>();
	}
};
DUMPER7_ASSERTS_ACityManager;

// Class Smuta.CloseTutorialHintQuestAction
// 0x0008 (0x0038 - 0x0030)
class UCloseTutorialHintQuestAction final : public UQuestStepAction
{
public:
	class FName                                   TutorialHintName;                                  // 0x0030(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CloseTutorialHintQuestAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CloseTutorialHintQuestAction")
	}
	static class UCloseTutorialHintQuestAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCloseTutorialHintQuestAction>();
	}
};
DUMPER7_ASSERTS_UCloseTutorialHintQuestAction;

// Class Smuta.CodexCategoriesDataAsset
// 0x0010 (0x0040 - 0x0030)
class UCodexCategoriesDataAsset final : public UPrimaryDataAsset
{
public:
	TArray<struct FArticleCategoryData>           ArticleCategoryData;                               // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CodexCategoriesDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CodexCategoriesDataAsset")
	}
	static class UCodexCategoriesDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCodexCategoriesDataAsset>();
	}
};
DUMPER7_ASSERTS_UCodexCategoriesDataAsset;

// Class Smuta.CodexDataAsset
// 0x0050 (0x0080 - 0x0030)
class UCodexDataAsset final : public UPrimaryDataAsset
{
public:
	TMap<class FName, struct FCodexArticle>       CodexArticles;                                     // 0x0030(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CodexDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CodexDataAsset")
	}
	static class UCodexDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCodexDataAsset>();
	}
};
DUMPER7_ASSERTS_UCodexDataAsset;

// Class Smuta.CodexSubSystem
// 0x01F0 (0x0220 - 0x0030)
class UCodexSubSystem final : public UGameInstanceSubsystem
{
public:
	TMulticastInlineDelegate<void(const class FName& ArticleId)> CodexArticleOpened;                 // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FName& ArticleId, bool bIsNew)> CodexArticleNewStateChanged; // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<EBuildProjectType, TSoftObjectPtr<class UCodexDataAsset>> CodexSoftPtr;                     // 0x0050(0x0050)(Config, GlobalConfig, NoClear, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<EBuildProjectType, TSoftObjectPtr<class UCodexCategoriesDataAsset>> CodexCategoriesSoftPtr; // 0x00A0(0x0050)(Config, GlobalConfig, NoClear, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class FString                                 AllReadedAchievementId;                            // 0x00F0(0x0010)(ZeroConstructor, Config, GlobalConfig, NoClear, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 AllOpenedAchievementId;                            // 0x0100(0x0010)(ZeroConstructor, Config, GlobalConfig, NoClear, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCodexDataAsset*                        Codex;                                             // 0x0110(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCodexCategoriesDataAsset*              CodexCategories;                                   // 0x0118(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_120[0x100];                                    // 0x0120(0x0100)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClearGlobalArticleStates();
	void InitCodexCategoriesDataAsset();
	void InitCodexDataAsset();
	void OnExitSmutaGame();
	void OnSubSystemsInited();
	void SetArticleNew(const class FName& ArticleId, const bool bIsNew);
	void SetArticleOpened(const class FName& ArticleId, const bool bIsOpened);

	class FText GetArticleCategory(const class FName& ArticleId) const;
	TArray<class FName> GetArticleIds() const;
	TSoftObjectPtr<class UTexture2D> GetArticleImage(const class FName& ArticleId) const;
	class FText GetArticleName(const class FName& ArticleId) const;
	bool GetArticlesCategoryData(TArray<struct FArticleCategoryData>* OutData) const;
	class FText GetArticleText(const class FName& ArticleId) const;
	TArray<class FName> GetNewArticleIds() const;
	TArray<class FName> GetOpenedArticleIds() const;
	bool HasOpenedArticles() const;
	bool IsArticleKnown(const class FName& ArticleId) const;
	bool IsNewArticle(const class FName& ArticleId) const;
	bool IsOpenedArticle(const class FName& ArticleId) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CodexSubSystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CodexSubSystem")
	}
	static class UCodexSubSystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCodexSubSystem>();
	}
};
DUMPER7_ASSERTS_UCodexSubSystem;

// Class Smuta.CodexTriggerActor
// 0x0040 (0x02D8 - 0x0298)
class ACodexTriggerActor final : public AActor
{
public:
	ECodexTriggerShape                            TriggerShape;                                      // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UShapeComponent*                        CollisionComponent;                                // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   ArticleId;                                         // 0x02A8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B0[0x28];                                     // 0x02B0(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetTriggerShape(ECodexTriggerShape InShape);

	ECodexTriggerShape GetTriggerShape() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CodexTriggerActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CodexTriggerActor")
	}
	static class ACodexTriggerActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACodexTriggerActor>();
	}
};
DUMPER7_ASSERTS_ACodexTriggerActor;

// Class Smuta.MontageTransitionMetaData
// 0x00A0 (0x00C8 - 0x0028)
class UMontageTransitionMetaData final : public UAnimMetaData
{
public:
	struct FNextMontages                          MiddleMontages;                                    // 0x0028(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FNextMontages                          FinisherMontages;                                  // 0x0078(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	bool AddNewMontage(EComboAttackType ComboType, EAttackType AttackType, const struct FMontageWithDescription& Montage, int32* Index_0);
	bool ChangeMontage(EComboAttackType ComboType, EAttackType AttackType, int32 Index_0, const struct FMontageWithDescription& NewMontageDescription);
	bool DeleteMontage(EComboAttackType ComboType, EAttackType AttackType, int32 Index_0);
	bool GetNextMontages(EComboAttackType Type, struct FNextMontages* NextMontages);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MontageTransitionMetaData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MontageTransitionMetaData")
	}
	static class UMontageTransitionMetaData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMontageTransitionMetaData>();
	}
};
DUMPER7_ASSERTS_UMontageTransitionMetaData;

// Class Smuta.ComboAnimMetaData
// 0x0008 (0x0030 - 0x0028)
class UComboAnimMetaData final : public UAnimMetaData
{
public:
	struct FCharacterStand                        StartAnimationStand;                               // 0x0028(0x0002)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FCharacterStand                        EndAnimationStand;                                 // 0x002A(0x0002)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ComboAnimMetaData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ComboAnimMetaData")
	}
	static class UComboAnimMetaData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComboAnimMetaData>();
	}
};
DUMPER7_ASSERTS_UComboAnimMetaData;

// Class Smuta.ComboEditorFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UComboEditorFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ComboEditorFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ComboEditorFunctionLibrary")
	}
	static class UComboEditorFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComboEditorFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UComboEditorFunctionLibrary;

// Class Smuta.ComboOptionalAbilityObject
// 0x0008 (0x0030 - 0x0028)
class UComboOptionalAbilityObject final : public UBaseOptionalAbilityObject
{
public:
	bool                                          bNeedDistanceRestriction;                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinComboDistance;                                  // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ComboOptionalAbilityObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ComboOptionalAbilityObject")
	}
	static class UComboOptionalAbilityObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComboOptionalAbilityObject>();
	}
};
DUMPER7_ASSERTS_UComboOptionalAbilityObject;

// Class Smuta.CommonBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UCommonBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FGameplayTag FindFirstMatchedGameplayTag(const struct FGameplayTagContainer& TagsToMatch, const struct FGameplayTagContainer& TagsToFind);
	static EDirectionSide GetActorDirectionSide(const class AActor* SelfActor, const class AActor* DirectionActor);
	static float GetDirectionSideAngle(const EDirectionSide DirectionSide);
	static void GetInputAxisValues(const class APawn* Pawn, float* Forward, float* Right);
	static class ADefaultCharacter* GetLocalPlayerCharacter(const class UObject* WorldContextObject);
	static class UActorComponent* GetLocalPlayerComponent(const class UObject* WorldContextObject, TSubclassOf<class UActorComponent> ComponentClass);
	static class APlayerController* GetLocalPlayerController(const class UObject* WorldContextObject);
	static struct FGameplayTag GetRotatedDirectionTag(const struct FGameplayTag& OriginDirectionTag, const EDirectionSide DirectionSide);
	static void GetTurnInputAxisValues(const class APawn* Pawn, float* LookUp, float* Turn);
	static bool IsBuildVersionNewer(const class FString& NewerVersion, const class FString& ComparedVersion);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonBlueprintLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonBlueprintLibrary")
	}
	static class UCommonBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonBlueprintLibrary>();
	}
};
DUMPER7_ASSERTS_UCommonBlueprintLibrary;

// Class Smuta.CompareStrings
// 0x0000 (0x0028 - 0x0028)
class UCompareStrings final : public UBlueprintFunctionLibrary
{
public:
	static bool SGreaterThan(const class FString& StringA, const class FString& StringB);
	static bool SLessThan(const class FString& StringA, const class FString& StringB);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CompareStrings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CompareStrings")
	}
	static class UCompareStrings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCompareStrings>();
	}
};
DUMPER7_ASSERTS_UCompareStrings;

// Class Smuta.CompassItemComponent
// 0x0050 (0x05C0 - 0x0570)
class UCompassItemComponent final : public UPrimitiveComponent
{
public:
	uint8                                         Pad_570[0x8];                                      // 0x0570(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCompassWidgetBase>         CompassWidgetClass;                                // 0x0578(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MarkerHideDistance;                                // 0x0580(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DetectionDistance;                                 // 0x0584(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseDistanceDetection;                             // 0x0588(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideOnDistance;                                   // 0x0589(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDetected;                                         // 0x058A(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_58B[0x1];                                      // 0x058B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           GroupTag;                                          // 0x058C(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_594[0x4];                                      // 0x0594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Description;                                       // 0x0598(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bSavedIsActive;                                    // 0x05B0(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5B1[0xF];                                      // 0x05B1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CompassItemComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CompassItemComponent")
	}
	static class UCompassItemComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCompassItemComponent>();
	}
};
DUMPER7_ASSERTS_UCompassItemComponent;

// Class Smuta.CompassItemsManager
// 0x0110 (0x0140 - 0x0030)
class UCompassItemsManager final : public UWorldSubsystem
{
public:
	TMulticastInlineDelegate<void(class UCompassItemComponent* ItemComponent, class UCompassWidgetBase* CreatedWidget)> OnCompassWidgetCreated; // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UCompassItemComponent* ItemComponent, class UCompassWidgetBase* CreatedWidget)> OnCompassWidgetRemoved; // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AActor* OwnerActor, class UCompassScreenZoneItemWidget* CreatedWidget)> OnScreenZoneWidgetCreated; // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AActor* OwnerActor, class UCompassScreenZoneItemWidget* CreatedWidget)> OnScreenZoneWidgetRemoved; // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AActor* AreaActor)> OnOverlappedAreaRegistered;              // 0x0070(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AActor* AreaActor)> OnOverlappedAreaUnregistered;            // 0x0080(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<class UCompassItemComponent*, class UCompassWidgetBase*> CompassItemsWidgets;               // 0x0090(0x0050)(BlueprintVisible, ExportObject, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class AActor*>                         OverlappedAreas;                                   // 0x00E0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class AActor*, class UCompassScreenZoneItemWidget*> ScreenZoneItemsWidgets;                 // 0x00F0(0x0050)(BlueprintVisible, ExportObject, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	void RegisterCompassComponent(class UCompassItemComponent* CompassItemComponent);
	void RegisterOverlappedArea(class AActor* AreaActor);
	void RegisterScreenZoneWidget(class AActor* OwnerActor, TSubclassOf<class UCompassScreenZoneItemWidget> WidgetClass);
	void UnregisterCompassComponent(class UCompassItemComponent* CompassItemComponent);
	void UnregisterOverlappedArea(class AActor* AreaActor);
	void UnregisterScreenZoneWidget(class AActor* OwnerActor, TSubclassOf<class UCompassScreenZoneItemWidget> WidgetClass);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CompassItemsManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CompassItemsManager")
	}
	static class UCompassItemsManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCompassItemsManager>();
	}
};
DUMPER7_ASSERTS_UCompassItemsManager;

// Class Smuta.CompassScreenZoneItemWidget
// 0x0010 (0x02D0 - 0x02C0)
class UCompassScreenZoneItemWidget : public UUserWidget
{
public:
	TWeakObjectPtr<class AActor>                  OwnerActor;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpdateTime;                                        // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void PositionUpdated(const struct FVector2D& ScreenPoint);
	void UpdateVisibility();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CompassScreenZoneItemWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CompassScreenZoneItemWidget")
	}
	static class UCompassScreenZoneItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCompassScreenZoneItemWidget>();
	}
};
DUMPER7_ASSERTS_UCompassScreenZoneItemWidget;

// Class Smuta.CompassWidgetBase
// 0x0010 (0x02D0 - 0x02C0)
class UCompassWidgetBase : public UUserWidget
{
public:
	class UPrimitiveComponent*                    TargetComponent;                                   // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HideWhenCloserThen;                                // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void GetDescription(class FText* Description);
	float GetHorizontalAdditive();
	bool ShouldBeVisible();

	float GetDistanceToTarget() const;
	struct FVector GetTargetLocation() const;
	bool IsGroupHidden() const;
	bool IsVisibleInternal() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CompassWidgetBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CompassWidgetBase")
	}
	static class UCompassWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCompassWidgetBase>();
	}
};
DUMPER7_ASSERTS_UCompassWidgetBase;

// Class Smuta.ComponentActivationInteraction
// 0x0030 (0x0058 - 0x0028)
class UComponentActivationInteraction final : public UInteraction
{
public:
	struct FComponentReference                    Component;                                         // 0x0028(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bTurnOn;                                           // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ComponentActivationInteraction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ComponentActivationInteraction")
	}
	static class UComponentActivationInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComponentActivationInteraction>();
	}
};
DUMPER7_ASSERTS_UComponentActivationInteraction;

// Class Smuta.ComponentEffectOwnerInterface
// 0x0000 (0x0000 - 0x0000)
class IComponentEffectOwnerInterface final
{
public:
	bool IsContainEffect(const class UClass* EffectClass);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ComponentEffectOwnerInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ComponentEffectOwnerInterface")
	}
	static class IComponentEffectOwnerInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IComponentEffectOwnerInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IComponentEffectOwnerInterface;

// Class Smuta.ConcentrationComponent
// 0x00C0 (0x0160 - 0x00A0)
class UConcentrationComponent : public UActorComponent
{
public:
	bool                                          bIsFocused;                                        // 0x00A0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsToggle;                                         // 0x00A1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GlobalSlowFactor;                                  // 0x00A4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayerSpeedFactor;                                 // 0x00A8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     ConcentrationAttribute;                            // 0x00B0(0x0038)(Edit, DisableEditOnInstance, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                     PassiveConcentrationRegenTimingAttribute;          // 0x00E8(0x0038)(Edit, DisableEditOnInstance, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            ConcentrationCostEffectClass;                      // 0x0120(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            PassiveConcentrationRegenEffectClass;              // 0x0128(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bIsFocused)> OnFocusChanged;                                  // 0x0130(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UBaseAbilitiesComponent*                OwnerASC;                                          // 0x0140(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_148[0x18];                                     // 0x0148(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DisableConcentration();
	void EnableConcentration();
	void OnOwnerASCTagUpdated(const struct FGameplayTag& UpdatedTag, bool bExists);
	void StartConcentration();
	void StopConcentration();

	bool IsConcentrated() const;
	bool IsConcentrationEnabled() const;
	bool IsFocused() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ConcentrationComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ConcentrationComponent")
	}
	static class UConcentrationComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConcentrationComponent>();
	}
};
DUMPER7_ASSERTS_UConcentrationComponent;

// Class Smuta.CooldownAttributes
// 0x0050 (0x0080 - 0x0030)
class UCooldownAttributes final : public UAttributeSet
{
public:
	struct FGameplayAttributeData                 KickCooldownModifier;                              // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 RangedAxe;                                         // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 RangedMushket;                                     // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 RangedPishal;                                      // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 RangedPistol;                                      // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CooldownAttributes")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CooldownAttributes")
	}
	static class UCooldownAttributes* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCooldownAttributes>();
	}
};
DUMPER7_ASSERTS_UCooldownAttributes;

// Class Smuta.CooldownCondition
// 0x0008 (0x0040 - 0x0038)
class UCooldownCondition final : public UReactionCondition
{
public:
	float                                         Time;                                              // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CooldownCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CooldownCondition")
	}
	static class UCooldownCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCooldownCondition>();
	}
};
DUMPER7_ASSERTS_UCooldownCondition;

// Class Smuta.SmutaSignificanceManager
// 0x0090 (0x01D0 - 0x0140)
class USmutaSignificanceManager final : public USignificanceManager
{
public:
	uint8                                         Pad_140[0x80];                                     // 0x0140(0x0080)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumHandledActorsPerTick;                           // 0x01C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C4[0xC];                                      // 0x01C4(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USmutaSignificanceManager* GetSmutaSignificanceManager(const class UObject* WorldContextObject);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaSignificanceManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaSignificanceManager")
	}
	static class USmutaSignificanceManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmutaSignificanceManager>();
	}
};
DUMPER7_ASSERTS_USmutaSignificanceManager;

// Class Smuta.CooldownsManagerComponent
// 0x0050 (0x00F0 - 0x00A0)
class UCooldownsManagerComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x50];                                      // 0x00A0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool GetCooldownValue(const struct FGameplayTag& Tag);
	void UpdateCooldown(const struct FGameplayTag& Tag, bool bValue);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CooldownsManagerComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CooldownsManagerComponent")
	}
	static class UCooldownsManagerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCooldownsManagerComponent>();
	}
};
DUMPER7_ASSERTS_UCooldownsManagerComponent;

// Class Smuta.CyberiaMapComponent
// 0x0040 (0x02E0 - 0x02A0)
class UCyberiaMapComponent : public USceneComponent
{
public:
	uint8                                         Pad_2A0[0x8];                                      // 0x02A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           MapTag;                                            // 0x02A8(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   MarkerWidgetClass;                                 // 0x02B0(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          WasFound;                                          // 0x02D8(0x0001)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CyberiaMapComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CyberiaMapComponent")
	}
	static class UCyberiaMapComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCyberiaMapComponent>();
	}
};
DUMPER7_ASSERTS_UCyberiaMapComponent;

// Class Smuta.ParentControlSetting
// 0x0008 (0x0038 - 0x0030)
class UParentControlSetting final : public USettingBase
{
public:
	bool                                          bParentControlEnabled;                             // 0x0030(0x0001)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetParentControl(const bool bNewParentControlEnabled);

	bool GetParentControlEnabled() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ParentControlSetting")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ParentControlSetting")
	}
	static class UParentControlSetting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UParentControlSetting>();
	}
};
DUMPER7_ASSERTS_UParentControlSetting;

// Class Smuta.CyberiaQuestMarker
// 0x0020 (0x07C0 - 0x07A0)
class UCyberiaQuestMarker : public UQuestMarker
{
public:
	bool                                          bShouldHideOnCutscene;                             // 0x07A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldHideOnDialogue;                             // 0x07A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldShowOnMap;                                  // 0x07A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7A3[0x1];                                      // 0x07A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HideDistance;                                      // 0x07A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDebug;                                            // 0x07A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7A9[0x17];                                     // 0x07A9(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void DialogueHappend(bool happend);

	void CheckForIndoor();
	void HandleCutsceneFinished(class ULevelSequence* Cutscene);
	void HandleCutsceneStarted(class ULevelSequence* Cutscene, class ULevelSequencePlayer* Player);
	void PlayerPawnChanged(class APawn* OldPawn, class APawn* NewPawn);
	void PlayerTagChangedResponse(const struct FGameplayTag& ChangedTag, bool bExists);
	void RefreshVisibility();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CyberiaQuestMarker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CyberiaQuestMarker")
	}
	static class UCyberiaQuestMarker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCyberiaQuestMarker>();
	}
};
DUMPER7_ASSERTS_UCyberiaQuestMarker;

// Class Smuta.HitDetectionNotifyState
// 0x0008 (0x0040 - 0x0038)
class UHitDetectionNotifyState : public UAnimNotify_PlayMontageNotifyWindow
{
public:
	EHand                                         AttackActiveHand;                                  // 0x0038(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HitDetectionNotifyState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HitDetectionNotifyState")
	}
	static class UHitDetectionNotifyState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHitDetectionNotifyState>();
	}
};
DUMPER7_ASSERTS_UHitDetectionNotifyState;

// Class Smuta.SmutaTagsSettings
// 0x0140 (0x0178 - 0x0038)
class USmutaTagsSettings final : public UDeveloperSettings
{
public:
	class FName                                   AttackPerceptionTag;                               // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EAttackStage, struct FGameplayTag>       AttackStageTags;                                   // 0x0040(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<EDirectionSide, struct FGameplayTag>     AttackDirectionTags;                               // 0x0090(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                           HitFromBackTag;                                    // 0x00E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  UnavailableMovementTags;                           // 0x00E8(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  CharacterUnconsciousStateTags;                     // 0x0108(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                           CharacterOutOfHealthTag;                           // 0x0128(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           CharacterDieActionTag;                             // 0x0130(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  ProhibitedAttackTags;                              // 0x0138(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  AttackingTags;                                     // 0x0158(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static const class USmutaTagsSettings* Get();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaTagsSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaTagsSettings")
	}
	static class USmutaTagsSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmutaTagsSettings>();
	}
};
DUMPER7_ASSERTS_USmutaTagsSettings;

// Class Smuta.DamageNotifyState
// 0x0000 (0x0040 - 0x0040)
class UDamageNotifyState final : public UHitDetectionNotifyState
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DamageNotifyState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DamageNotifyState")
	}
	static class UDamageNotifyState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDamageNotifyState>();
	}
};
DUMPER7_ASSERTS_UDamageNotifyState;

// Class Smuta.DA_TargetPrioritySettings
// 0x0068 (0x0098 - 0x0030)
class UDA_TargetPrioritySettings final : public UDataAsset
{
public:
	bool                                          bCanEditDistanceCurve;                             // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            DistanceCurve;                                     // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanEditHealthRatioCurve;                          // 0x0040(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            HealthRatioCurve;                                  // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanEditHealthAbsoluteCurve;                       // 0x0050(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            HealthAbsoluteCurve;                               // 0x0058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanEditPriorityScoreCurve;                        // 0x0060(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            PriorityScoreCurve;                                // 0x0068(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ResortingUpdateInterval;                           // 0x0070(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetUpdateInterval;                              // 0x0074(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  ProhibitionTagContainer;                           // 0x0078(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DA_TargetPrioritySettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DA_TargetPrioritySettings")
	}
	static class UDA_TargetPrioritySettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDA_TargetPrioritySettings>();
	}
};
DUMPER7_ASSERTS_UDA_TargetPrioritySettings;

// Class Smuta.SmutaOnlineSubsystem
// 0x0088 (0x00B8 - 0x0030)
class USmutaOnlineSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x88];                                      // 0x0030(0x0088)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAchievementQueryFailed();
	void OnAchievementQuerySuccess();
	void OnAchievementUnlockedFailed(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void OnAchievementUnlockedSuccess(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void ResetAchievementInternal(class FName AchievementName);
	void ResetAllAchievementsInternal();
	void UnlockAchievement(const class FString& AchievementName);
	void UnlockAchievementInternal(class FName AchievementName);

	bool IsAvailable() const;
	bool IsPreOrder() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaOnlineSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaOnlineSubsystem")
	}
	static class USmutaOnlineSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmutaOnlineSubsystem>();
	}
};
DUMPER7_ASSERTS_USmutaOnlineSubsystem;

// Class Smuta.DeadStateEffect
// 0x0000 (0x0A70 - 0x0A70)
class UDeadStateEffect final : public UGameplayEffect
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DeadStateEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DeadStateEffect")
	}
	static class UDeadStateEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeadStateEffect>();
	}
};
DUMPER7_ASSERTS_UDeadStateEffect;

// Class Smuta.DeathActionData
// 0x0050 (0x0080 - 0x0030)
class UDeathActionData final : public UBaseActionData
{
public:
	TMap<class UEquipmentData*, struct FDeathActionMontages> Montages;                               // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DeathActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DeathActionData")
	}
	static class UDeathActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeathActionData>();
	}
};
DUMPER7_ASSERTS_UDeathActionData;

// Class Smuta.NPCBaseAnimInstance
// 0x0040 (0x0390 - 0x0350)
#pragma pack(push, 0x1)
class alignas(0x10) UNPCBaseAnimInstance : public UAnimInstance
{
public:
	TWeakObjectPtr<class ADefaultCharacter>       OwnerDefaultCharacterRef;                          // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class USmutaNPCMovementComponent> OwnerSmutaNPCMovementComponentRef;              // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AMainAIController>       OwnerMainAIControllerRef;                          // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UBlackboardComponent>    OwnerBlackboardComponentRef;                       // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class USkeletalMeshComponent>  OwnerSkeletalMeshComponentRef;                     // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UBaseAbilitiesComponent> OwnerBaseAbilitiesComponentRef;                    // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UNPCStateComponent>      OwnerNPCStateComponentRef;                         // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class USmutaNPCEquipmentComponent> OwnerNPCEquipmentComponentRef;                 // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnTagChanged(const struct FGameplayTag& Tag, bool TagExists);
	void SubscribeToComponentsDelegates();

	bool IsNeedToUpdateInstance() const;
	bool IsValidInstance() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NPCBaseAnimInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NPCBaseAnimInstance")
	}
	static class UNPCBaseAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCBaseAnimInstance>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_UNPCBaseAnimInstance;

// Class Smuta.NPCSubAnimInstance
// 0x0000 (0x0390 - 0x0390)
class UNPCSubAnimInstance : public UNPCBaseAnimInstance
{
public:
	TWeakObjectPtr<class UNPCMasterAnimInstance>  OwnerNPCMasterAnimInstance;                        // 0x0388(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void CustomUpdateAnimation(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NPCSubAnimInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NPCSubAnimInstance")
	}
	static class UNPCSubAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCSubAnimInstance>();
	}
};
DUMPER7_ASSERTS_UNPCSubAnimInstance;

// Class Smuta.NPCSubAnimInstance_LocomotionBase
// 0x0010 (0x03A0 - 0x0390)
#pragma pack(push, 0x1)
class alignas(0x10) UNPCSubAnimInstance_LocomotionBase : public UNPCSubAnimInstance
{
public:
	float                                         HeadAngleRotation;                                 // 0x0390(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERotationPattern                              RotationPattern;                                   // 0x0394(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_395[0x3];                                      // 0x0395(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NPCSubAnimInstance_LocomotionBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NPCSubAnimInstance_LocomotionBase")
	}
	static class UNPCSubAnimInstance_LocomotionBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCSubAnimInstance_LocomotionBase>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_UNPCSubAnimInstance_LocomotionBase;

// Class Smuta.NPCSubAnimInstance_PeacefulBase
// 0x0120 (0x04C0 - 0x03A0)
class UNPCSubAnimInstance_PeacefulBase : public UNPCSubAnimInstance_LocomotionBase
{
public:
	struct FAnimInstancePeacefulInfo              AnimInstanceInfo;                                  // 0x0398(0x0100)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bPeacefulRootMotion;                               // 0x0498(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldGazeOnTarget;                               // 0x0499(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49A[0x2];                                      // 0x049A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class USplineMovementComponent> OwnersSplineMovementComponent;                    // 0x049C(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A4[0x1C];                                     // 0x04A4(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NPCSubAnimInstance_PeacefulBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NPCSubAnimInstance_PeacefulBase")
	}
	static class UNPCSubAnimInstance_PeacefulBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCSubAnimInstance_PeacefulBase>();
	}
};
DUMPER7_ASSERTS_UNPCSubAnimInstance_PeacefulBase;

// Class Smuta.NPCSubAnimInstance_Peaceful_Flee
// 0x0000 (0x04C0 - 0x04C0)
class UNPCSubAnimInstance_Peaceful_Flee : public UNPCSubAnimInstance_PeacefulBase
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NPCSubAnimInstance_Peaceful_Flee")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NPCSubAnimInstance_Peaceful_Flee")
	}
	static class UNPCSubAnimInstance_Peaceful_Flee* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCSubAnimInstance_Peaceful_Flee>();
	}
};
DUMPER7_ASSERTS_UNPCSubAnimInstance_Peaceful_Flee;

// Class Smuta.DebugFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UDebugFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool IsDebugCategoryEnabled(const int32& CategoryIndex, const class APlayerController* PlayerController);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DebugFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DebugFunctionLibrary")
	}
	static class UDebugFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDebugFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UDebugFunctionLibrary;

// Class Smuta.DebugQuestsCheat
// 0x0010 (0x0038 - 0x0028)
class UDebugQuestsCheat final : public UBaseCheatManagerExtension
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DebugQuests(int32 EnableFlag, int32 Page);
	void UpdateDebugData();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DebugQuestsCheat")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DebugQuestsCheat")
	}
	static class UDebugQuestsCheat* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDebugQuestsCheat>();
	}
};
DUMPER7_ASSERTS_UDebugQuestsCheat;

// Class Smuta.PointForNPC
// 0x0038 (0x02D0 - 0x0298)
class APointForNPC : public AActor
{
public:
	class UAnimMontage*                           AnimMontage;                                       // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMatrixProfDataAsset*                   AnimData;                                          // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WaitBeforeAnim;                                    // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WaitAfterAnim;                                     // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBillboardComponent*                    BillboardComponent;                                // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                        SceneComponent;                                    // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBillboardComponent*                    Point;                                             // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrowComponent*                        Arrow;                                             // 0x02C8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PointForNPC")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PointForNPC")
	}
	static class APointForNPC* GetDefaultObj()
	{
		return GetDefaultObjImpl<APointForNPC>();
	}
};
DUMPER7_ASSERTS_APointForNPC;

// Class Smuta.DefaultCharacter
// 0x0210 (0x0890 - 0x0680)
class ADefaultCharacter : public ACharacter
{
public:
	uint8                                         Pad_678[0x40];                                     // 0x0678(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ADefaultCharacter* DiedCharacter)> OnCharacterDied;          // 0x06B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ADefaultCharacter* DiedCharacter)> OnCharacterPreDied;       // 0x06C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float DamageAmount)> ReceiveMaxHealthDelegate;                     // 0x06D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float DamageAmount)> ReceiveDamageDelegate;                        // 0x06E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UPassportAsset* Passport)> OnPassportChanged;                // 0x06F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ADefaultCharacter* HitInstigator, class ADefaultCharacter* HitTarget)> OnDealHit; // 0x0708(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ADefaultCharacter* HitInstigator, class ADefaultCharacter* HitTarget)> OnReceiveHit; // 0x0718(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnMovementInputChanged;                            // 0x0728(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bIsEnabled)> OnTickChanged;                                   // 0x0738(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UAIPerceptionStimuliSourceComponent*    PerceptionStimuli;                                 // 0x0748(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBaseAbilitiesComponent*                AbilitiesComponent;                                // 0x0750(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                      CharToCharDistanceCapsule;                         // 0x0758(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFractionComponent*                     FractionComponent;                                 // 0x0760(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpringArmComponent*                    SpringArm;                                         // 0x0768(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCineCameraComponent*                   CameraComponent;                                   // 0x0770(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          AppearanceMesh;                                    // 0x0778(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAppearanceItem>            LastAppearanceClass;                               // 0x0780(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterOptimizationComponent*        OptimizationComponent;                             // 0x0788(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPassportAsset*                         Passport;                                          // 0x0790(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanGiveUp;                                        // 0x0798(0x0001)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_799[0x7];                                      // 0x0799(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            GiveUpMontageOverride;                             // 0x07A0(0x0028)(Edit, BlueprintVisible, SaveGame, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GiveUpHealthPercent;                               // 0x07C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7CC[0x4];                                      // 0x07CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              LandedDamageVelocity;                              // 0x07D0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              LandedDamage;                                      // 0x07E0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ULandedEffect>              LandedDamageEffect;                                // 0x07F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7F8[0x1];                                      // 0x07F8(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bDead;                                             // 0x07F9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCouldSkipMontageByMovement;                       // 0x07FA(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7FB[0x5];                                      // 0x07FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UActionDataAsset*                       ActionsDataOverride;                               // 0x0800(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                LastWorldInputMovementVector;                      // 0x0808(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              LastInputMovementVector;                           // 0x0820(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_830[0x50];                                     // 0x0830(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bHorse;                                            // 0x0880(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasFoundAsDeadBody;                               // 0x0881(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_882[0x2];                                      // 0x0882(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Priority;                                          // 0x0884(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_888[0x8];                                      // 0x0888(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void EnableDamageDebugMode(bool bEnable);

	void BindAbilityInput(class UInputComponent* PlayerInputComponent);
	void BindMovementInput(class UInputComponent* PlayerInputComponent, bool ConsumeInput);
	void ChangePassport(class UPassportAsset* NewPassport);
	void EnablePossibilityToSkipMontageByMovement(bool bEnable);
	class UAITraitsBase* GetAITraits();
	void HandleDamageEvent(const float& DamageAmount);
	void OnGameDifficultyChanged(EGameDifficulty NewDifficulty);
	void OnGroundLanded(const struct FHitResult& Hit);
	void PreDie();
	void RecieveOnGameDifficultyChanged(EGameDifficulty NewDifficulty);
	void RegisterInCrowdAsAvoided();
	void RevertDeadState();
	void SaveDeadState();
	void SendMaxHealthEvent(const float& DamageAmount);
	void SetDodgeBonusActivate(bool Valeu);
	void SetForcedWorldYawRotation(const float TargetAzimuth, const float RotationBlendTime);
	void SetForcedWorldYawRotationAtPoint(const struct FVector& TargetPoint, const float RotationBlendTime);
	void SetSkipOptimization(bool bSkip);
	void SetSkipSave(bool bSkipSave);
	void SetupController(class AController* NewController);
	void TagChangedResponse(const struct FGameplayTag& UpdatedTag, bool bTagExists);
	void TakeStepForward();
	void UnBindAbilityAndMovementInput(class UInputComponent* PlayerInputComponent);
	void UnRegisterInCrowdAsAvoided();
	void UpdateAppearanceMesh(class USkeletalMesh* InAppearanceMesh);

	class UActionDataAsset* GetCurrentActionDataAsset() const;
	bool GetDodgeBonus() const;
	void GetHeadOrientation(struct FVector* OutLocation, struct FRotator* OutRotation) const;
	bool IsConscious() const;
	bool IsInputEnabled() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DefaultCharacter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DefaultCharacter")
	}
	static class ADefaultCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADefaultCharacter>();
	}
};
DUMPER7_ASSERTS_ADefaultCharacter;

// Class Smuta.DefenceAbility
// 0x0018 (0x0478 - 0x0460)
class UDefenceAbility : public UCombatTrickAbility
{
public:
	uint8                                         Pad_460[0x9];                                      // 0x0460(0x0009)(Fixing Size After Last Property [ Dumper-7 ])
	EDefenceZoneType                              DefenceZoneType;                                   // 0x0469(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_46A[0x2];                                      // 0x046A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DefenceZoneCollisionProfile;                       // 0x046C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void GetDefenceZoneCollisions(TArray<class UDefenceZoneCollisionComponent*>* ResultDefenceZoneCollisions);
	void OnAttackHitRecieved(const struct FAttackHitData& AttackHitData);
	void SetDefenceZoneCollisionDetectionActive(bool bActive);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DefenceAbility")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DefenceAbility")
	}
	static class UDefenceAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDefenceAbility>();
	}
};
DUMPER7_ASSERTS_UDefenceAbility;

// Class Smuta.PassportAsset
// 0x0030 (0x0060 - 0x0030)
class UPassportAsset : public UDataAsset
{
public:
	class FString                                 Owner_ID;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDlgDialogue*                           Dialogue;                                          // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   LocalizedName;                                     // 0x0048(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PassportAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PassportAsset")
	}
	static class UPassportAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPassportAsset>();
	}
};
DUMPER7_ASSERTS_UPassportAsset;

// Class Smuta.DetectionAttributeSet
// 0x0060 (0x0090 - 0x0030)
class UDetectionAttributeSet final : public UAttributeSet
{
public:
	TMulticastInlineDelegate<void(float OldValue, float NewValue)> OnDetectionScaleChanged;          // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float OldValue, float NewValue)> OnSixSenseDetectionScaleChanged;  // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 DetectionScale;                                    // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 DetectionScaleMax;                                 // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 SixSenseDetectionScale;                            // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 NoiseModifier;                                     // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DetectionAttributeSet")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DetectionAttributeSet")
	}
	static class UDetectionAttributeSet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDetectionAttributeSet>();
	}
};
DUMPER7_ASSERTS_UDetectionAttributeSet;

// Class Smuta.DetectionSettings
// 0x0188 (0x01C0 - 0x0038)
class UDetectionSettings final : public UDeveloperSettingsBackedByCVars
{
public:
	TArray<float>                                 SightDetectionTimeInSearch;                        // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	float                                         TimeToStoreSightDetection;                         // 0x0048(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PhrasesCooldown;                                   // 0x004C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StonesNumToTrigger;                                // 0x0050(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeToCheckLastStones;                             // 0x0054(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            RestoreScaleEffect;                                // 0x0058(0x0008)(Edit, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            HearingSenseEffect;                                // 0x0060(0x0008)(Edit, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            SightSenseEffect;                                  // 0x0068(0x0008)(Edit, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            ImmediateDetectSenseEffect;                        // 0x0070(0x0008)(Edit, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            SixSenseEnterEffect;                               // 0x0078(0x0008)(Edit, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            SixSenseActivationEffect;                          // 0x0080(0x0008)(Edit, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            SixSenseScaleRestoreEffect;                        // 0x0088(0x0008)(Edit, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EHearingSenseType, struct FHearingStimulusParams> HearingStimulusParams;                    // 0x0090(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	TMap<struct FStimulusDescription, int32>      StimulusPriorities;                                // 0x00E0(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDetectionReactionsDataAsset> DetectionReactions;                           // 0x0130(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<EHearingSenseType>                       ProgressionModifiedNoiseTypes;                     // 0x0158(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	TArray<struct FAttitudeArray>                 AttitudeTable;                                     // 0x01A8(0x0010)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B8[0x8];                                      // 0x01B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void ChangeAttitudeAtIndex(int32 IndexA, int32 IndexB, EExtendedAttitude NewAttitude);
	static const class UDetectionSettings* Get();
	static EExtendedAttitude GetAttitudeAtIndex(int32 IndexA, int32 IndexB);
	static void GetHearingStimulusRange(const class UObject* WorldContextObject, EHearingSenseType HearingType, float* OutRange, float* OutMaxRange);
	static float GetHearingStimulusScale(const class FName& StimulusTag);
	static float GetIndividualPhraseCooldown();
	static bool GetReactionForStimulus(const struct FStimulusDescription& StimulusDescription, EDetectionAIState DetectionState, struct FDetectionReaction* OutReaction);
	static int32 GetStimulusPriority(const struct FStimulusDescription& StimulusDescription);
	static class FName HearingTypeToTag(EHearingSenseType HearingType);
	static bool TagToHearingType(const class FName& HearingTag, EHearingSenseType* OutHearingType);

	void SetTurnOffPlayerNoise(bool bTurnOff);

	float IsPlayerNoiseTurnedOff() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DetectionSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DetectionSettings")
	}
	static class UDetectionSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDetectionSettings>();
	}
};
DUMPER7_ASSERTS_UDetectionSettings;

// Class Smuta.DetectionStateWidget
// 0x0008 (0x02C8 - 0x02C0)
class UDetectionStateWidget : public UUserWidget
{
public:
	class UEnemyDetectionComponent*               DetectionComponent;                                // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DetectionStateWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DetectionStateWidget")
	}
	static class UDetectionStateWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDetectionStateWidget>();
	}
};
DUMPER7_ASSERTS_UDetectionStateWidget;

// Class Smuta.DetectionStateWidgetComponent
// 0x0030 (0x0720 - 0x06F0)
class UDetectionStateWidgetComponent final : public UWidgetComponent
{
public:
	uint8                                         Pad_6E8[0x8];                                      // 0x06E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UWidget>                    DetectionWidgetClass;                              // 0x06F0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  RemoveWidgetOwningTag;                             // 0x06F8(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_718[0x8];                                      // 0x0718(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDetectionActivated(class UActorComponent* DetectionComponent, bool bReset);
	void OnDetectionDeactivated(class UActorComponent* DetectionComponent);
	void OnDetectionScaleChanged(float OldPercent, float NewPercent);
	void OnOwnerTagChanged(const struct FGameplayTag& UpdatedTag, bool Exists);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DetectionStateWidgetComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DetectionStateWidgetComponent")
	}
	static class UDetectionStateWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDetectionStateWidgetComponent>();
	}
};
DUMPER7_ASSERTS_UDetectionStateWidgetComponent;

// Class Smuta.PlayerPostProcessEffectComponent
// 0x0018 (0x0040 - 0x0028)
class UPlayerPostProcessEffectComponent final : public UGameplayEffectComponent
{
public:
	TScriptInterface<class IBlendableInterface>   PostProcessBlendableObject;                        // 0x0028(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PostProcessBlendWeight;                            // 0x0038(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerPostProcessEffectComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerPostProcessEffectComponent")
	}
	static class UPlayerPostProcessEffectComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerPostProcessEffectComponent>();
	}
};
DUMPER7_ASSERTS_UPlayerPostProcessEffectComponent;

// Class Smuta.DetectionReactionsDataAsset
// 0x0058 (0x0088 - 0x0030)
class UDetectionReactionsDataAsset final : public UDataAsset
{
public:
	TMap<struct FStimulusDescription, struct FDetectionStateReaction> DetectionReactions;            // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         RepeatPhraseCooldown;                              // 0x0080(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DetectionReactionsDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DetectionReactionsDataAsset")
	}
	static class UDetectionReactionsDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDetectionReactionsDataAsset>();
	}
};
DUMPER7_ASSERTS_UDetectionReactionsDataAsset;

// Class Smuta.DialogueAnimationsData
// 0x0050 (0x0080 - 0x0030)
class UDialogueAnimationsData final : public UDataAsset
{
public:
	TMap<TSoftObjectPtr<class USkeletalMesh>, TSoftObjectPtr<class UAnimSequence>> Animations;       // 0x0030(0x0050)(Edit, BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DialogueAnimationsData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DialogueAnimationsData")
	}
	static class UDialogueAnimationsData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDialogueAnimationsData>();
	}
};
DUMPER7_ASSERTS_UDialogueAnimationsData;

// Class Smuta.LegacyGenericQuest
// 0x0008 (0x0100 - 0x00F8)
class ULegacyGenericQuest final : public UGenericQuest
{
public:
	EQuestStatus                                  QuestStatus;                                       // 0x00F8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LegacyGenericQuest")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LegacyGenericQuest")
	}
	static class ULegacyGenericQuest* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULegacyGenericQuest>();
	}
};
DUMPER7_ASSERTS_ULegacyGenericQuest;

// Class Smuta.DialogueStatusViewerComponent
// 0x0120 (0x01C0 - 0x00A0)
class UDialogueStatusViewerComponent final : public UActorComponent
{
public:
	float                                         UpdateRate;                                        // 0x00A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Distance;                                          // 0x00A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Angle;                                             // 0x00A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UUserWidget>                SpawnWidgetClass;                                  // 0x00B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                WidgetLocation;                                    // 0x00B8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  HideStatusTags;                                    // 0x00D0(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AdvancedDisplay, NativeAccessSpecifierPublic)
	class FName                                   InteractionSphereTag;                              // 0x00F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionChannel                             CollisionChannel;                                  // 0x00F8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class ACharacter*, class UDialogueStatusWidgetComponent*> SpawnedWidgets;                   // 0x0100(0x0050)(ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<class ACharacter*, class UDialogueStatusWidgetComponent*> SpawnedWidgetsToRemove;           // 0x0150(0x0050)(ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class ACharacter*>                     OverlappedCharacters;                              // 0x01A0(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B0[0x10];                                     // 0x01B0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDialogueStatusChanged(class ACharacter* Owner, bool bIsDialogueActive);
	void OnOwnerRootBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnOwnerRootEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnOwnerTagChanged(const struct FGameplayTag& UpdatedTag, bool bExists);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DialogueStatusViewerComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DialogueStatusViewerComponent")
	}
	static class UDialogueStatusViewerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDialogueStatusViewerComponent>();
	}
};
DUMPER7_ASSERTS_UDialogueStatusViewerComponent;

// Class Smuta.DialogueStatusInterface
// 0x0000 (0x0000 - 0x0000)
class IDialogueStatusInterface final
{
public:
	void InitializeWidget(class UWidgetComponent* ParentWidgetComponent, class AActor* Owner);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DialogueStatusInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DialogueStatusInterface")
	}
	static class IDialogueStatusInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IDialogueStatusInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IDialogueStatusInterface;

// Class Smuta.PrayHumanPOI
// 0x0008 (0x02B8 - 0x02B0)
class APrayHumanPOI final : public ABasePOI
{
public:
	class USphereComponent*                       Sphere;                                            // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PrayHumanPOI")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PrayHumanPOI")
	}
	static class APrayHumanPOI* GetDefaultObj()
	{
		return GetDefaultObjImpl<APrayHumanPOI>();
	}
};
DUMPER7_ASSERTS_APrayHumanPOI;

// Class Smuta.DialogueStatusWidgetComponent
// 0x0050 (0x0740 - 0x06F0)
class UDialogueStatusWidgetComponent final : public UWidgetComponent
{
public:
	TMulticastInlineDelegate<void(class ACharacter* Owner, bool bIsActive)> OnDialogueStatusChanged; // 0x06E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_6F8[0x20];                                     // 0x06F8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             OwnerCharacter;                                    // 0x0718(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_720[0x20];                                     // 0x0720(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ChangeDialogueStatus(bool bIsDialogueActive);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DialogueStatusWidgetComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DialogueStatusWidgetComponent")
	}
	static class UDialogueStatusWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDialogueStatusWidgetComponent>();
	}
};
DUMPER7_ASSERTS_UDialogueStatusWidgetComponent;

// Class Smuta.DialogueSubtitlesActor
// 0x0008 (0x02A0 - 0x0298)
class ADialogueSubtitlesActor : public AActor
{
public:
	class UDlgContext*                            CurrentContext;                                    // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void AttachSubtitleToActor(class AActor* Parent);
	void ChangeVisibility(bool bNewVisibility);
	void UpdateSubtitle(const class FText& NewSubtitleText);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DialogueSubtitlesActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DialogueSubtitlesActor")
	}
	static class ADialogueSubtitlesActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADialogueSubtitlesActor>();
	}
};
DUMPER7_ASSERTS_ADialogueSubtitlesActor;

// Class Smuta.PerceptionNoiseSpawner
// 0x0050 (0x02E8 - 0x0298)
class APerceptionNoiseSpawner final : public AActor
{
public:
	uint8                                         Pad_298[0x10];                                     // 0x0298(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NoiseLocation;                                     // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NoiseRadius;                                       // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                  NoiseInstigator;                                   // 0x02C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRange;                                          // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Tag;                                               // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D8[0x10];                                     // 0x02D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void NoiseTick();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PerceptionNoiseSpawner")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PerceptionNoiseSpawner")
	}
	static class APerceptionNoiseSpawner* GetDefaultObj()
	{
		return GetDefaultObjImpl<APerceptionNoiseSpawner>();
	}
};
DUMPER7_ASSERTS_APerceptionNoiseSpawner;

// Class Smuta.DialogueSystemHelper
// 0x0058 (0x02F0 - 0x0298)
class ADialogueSystemHelper : public AActor
{
public:
	class UDlgContext*                            DialogueContext;                                   // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ADialogueSubtitlesActor>    DialogueSubtitlesActorClass;                       // 0x02A0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADialogueSubtitlesActor*                DialogueSubtitlesActor;                            // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         HideSubtitleDistance;                              // 0x02B0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B4[0x3C];                                     // 0x02B4(0x003C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AsyncLoadLipsyncAndSound(const TArray<TSoftObjectPtr<class UAnimSequenceBase>>& Anim, TSoftObjectPtr<class USoundBase> Sound);
	void ChangeHideSubtitlesDistance(float NewDistance);
	void HandleLipsyncLoaded(const TArray<class UAnimSequenceBase*>& LipsyncAnim, class USoundBase* Sound);
	void NativeHandleLipsyncLoaded(const TArray<struct FSoftObjectPath>& LoadedObjects);
	class ADialogueSubtitlesActor* SpawnSubtitlesActor(class AActor* InOwner);
	void UpdateSubtitlesActor();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DialogueSystemHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DialogueSystemHelper")
	}
	static class ADialogueSystemHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADialogueSystemHelper>();
	}
};
DUMPER7_ASSERTS_ADialogueSystemHelper;

// Class Smuta.DodgeActionData
// 0x0050 (0x0080 - 0x0030)
class UDodgeActionData final : public UBaseActionData
{
public:
	TMap<class UEquipmentData*, struct FDodgeActionMontages> Montages;                               // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DodgeActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DodgeActionData")
	}
	static class UDodgeActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDodgeActionData>();
	}
};
DUMPER7_ASSERTS_UDodgeActionData;

// Class Smuta.SaveMigrationHandler
// 0x0000 (0x0028 - 0x0028)
class USaveMigrationHandler : public UObject
{
public:
	void ApplyObjectToSaveData(class UObject* Object, TArray<uint8>& SaveData, bool bTemporaryObject) const;
	void BP_OnObjectPostLoaded(class UObject* WorldContextObject, class UObject* LoadedObject) const;
	void BP_OnObjectPreLoaded(class UObject* WorldContextObject, TArray<uint8>& SaveData, class UObject* PreLoadedObject) const;
	class UObject* CreateTemporaryObject(class UObject* WorldContextObject, TSubclassOf<class UObject> TemporaryObjectClass, const TArray<uint8>& SaveData) const;
	void FailLoadProcess(class UObject* WorldContextObject, const class FText& FailReason) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SaveMigrationHandler")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SaveMigrationHandler")
	}
	static class USaveMigrationHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<USaveMigrationHandler>();
	}
};
DUMPER7_ASSERTS_USaveMigrationHandler;

// Class Smuta.DogPOI
// 0x0010 (0x02C0 - 0x02B0)
class ADogPOI final : public ABasePOI
{
public:
	class ACityAnimalSpawner*                     OwnerSpawner;                                      // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           AnimMontage;                                       // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DogPOI")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DogPOI")
	}
	static class ADogPOI* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADogPOI>();
	}
};
DUMPER7_ASSERTS_ADogPOI;

// Class Smuta.DropMovableObjectAction
// 0x0028 (0x0058 - 0x0030)
class UDropMovableObjectAction final : public UQuestStepAction
{
public:
	TSoftObjectPtr<class AMovableActorBase>       MovableObject;                                     // 0x0030(0x0028)(Edit, SaveGame, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DropMovableObjectAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DropMovableObjectAction")
	}
	static class UDropMovableObjectAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDropMovableObjectAction>();
	}
};
DUMPER7_ASSERTS_UDropMovableObjectAction;

// Class Smuta.RichTextBlockControllerInputActionDecorator
// 0x0010 (0x0038 - 0x0028)
class URichTextBlockControllerInputActionDecorator : public URichTextBlockDecorator
{
public:
	class UDataTable*                             ControllerActions;                                 // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         Owner;                                             // 0x0030(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RichTextBlockControllerInputActionDecorator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RichTextBlockControllerInputActionDecorator")
	}
	static class URichTextBlockControllerInputActionDecorator* GetDefaultObj()
	{
		return GetDefaultObjImpl<URichTextBlockControllerInputActionDecorator>();
	}
};
DUMPER7_ASSERTS_URichTextBlockControllerInputActionDecorator;

// Class Smuta.EatVillagePOI
// 0x0010 (0x02C0 - 0x02B0)
class AEatVillagePOI : public ABasePOI
{
public:
	bool                                          IsPointActivated;                                  // 0x02B0(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AVillageAnimalSpawner*                  OwnerEatPoint;                                     // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EatVillagePOI")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EatVillagePOI")
	}
	static class AEatVillagePOI* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEatVillagePOI>();
	}
};
DUMPER7_ASSERTS_AEatVillagePOI;

// Class Smuta.EffectAnimInstance
// 0x02C0 (0x0610 - 0x0350)
class UEffectAnimInstance : public UAnimInstance
{
public:
	struct FGameplayEffectSpec                    EffectSpec;                                        // 0x0348(0x0298)(BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	ERoute                                        DirectionToEffectCauser;                           // 0x05E0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EAttackState2                                 AttackState;                                       // 0x05E1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EAttackLevel2                                 AttackLevel;                                       // 0x05E2(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EAttackSide2                                  AttackSide;                                        // 0x05E3(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FActiveGameplayEffectHandle            ActiveEffectHandle;                                // 0x05E4(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5EC[0xC];                                      // 0x05EC(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                AbilitySystemComponent;                            // 0x05F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnUninitializeAnimation;                           // 0x0600(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void InitializeAnimation(const struct FGameplayEffectSpec& ForSpec, const struct FActiveGameplayEffectHandle& ForHandle);

	bool GetEffectCauserGameplayTags(struct FGameplayTagContainer* TagContainer) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EffectAnimInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EffectAnimInstance")
	}
	static class UEffectAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEffectAnimInstance>();
	}
};
DUMPER7_ASSERTS_UEffectAnimInstance;

// Class Smuta.RangeAttackOptionalObject
// 0x0000 (0x0028 - 0x0028)
class URangeAttackOptionalObject final : public UBaseOptionalAbilityObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RangeAttackOptionalObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RangeAttackOptionalObject")
	}
	static class URangeAttackOptionalObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<URangeAttackOptionalObject>();
	}
};
DUMPER7_ASSERTS_URangeAttackOptionalObject;

// Class Smuta.EffectNotifyState
// 0x0058 (0x0088 - 0x0030)
class UEffectNotifyState final : public UAnimNotifyState
{
public:
	TSubclassOf<class UGameplayEffect>            Effect;                                            // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x50];                                      // 0x0038(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EffectNotifyState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EffectNotifyState")
	}
	static class UEffectNotifyState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEffectNotifyState>();
	}
};
DUMPER7_ASSERTS_UEffectNotifyState;

// Class Smuta.EMSExtendedObject
// 0x00A8 (0x03C8 - 0x0320)
class UEMSExtendedObject final : public UEMSObject
{
public:
	uint8                                         Pad_320[0xA8];                                     // 0x0320(0x00A8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnExitSmutaGame();
	void OnStartNewSmutaGame();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EMSExtendedObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EMSExtendedObject")
	}
	static class UEMSExtendedObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEMSExtendedObject>();
	}
};
DUMPER7_ASSERTS_UEMSExtendedObject;

// Class Smuta.QTE_InAction
// 0x0080 (0x00B0 - 0x0030)
class UQTE_InAction final : public UDataAsset
{
public:
	TArray<struct FQTE_InActionEventTag>          Start;                                             // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FQTE_InActionEventTag>          NewRound;                                          // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FQTE_InActionEventTag>          PlayerTurn;                                        // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FQTE_InActionEventTag>          NPCTurn;                                           // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FQTE_InActionEventTag>          PlayerFroze;                                       // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FQTE_InActionEventTag>          PlayerWin;                                         // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FQTE_InActionEventTag>          PlayerLose;                                        // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FQTE_InActionEventIndex>        Phrase;                                            // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("QTE_InAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"QTE_InAction")
	}
	static class UQTE_InAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQTE_InAction>();
	}
};
DUMPER7_ASSERTS_UQTE_InAction;

// Class Smuta.EnemyAggroController
// 0x0188 (0x0228 - 0x00A0)
class UEnemyAggroController final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(class AActor* NewAgroTarget)> OnAgroTargetUpdated;                 // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            NPCTargetGEClass;                                  // 0x00B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            BattleStateGEClass;                                // 0x00B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            BattleStateWithPlayerGEClass;                      // 0x00C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            FleeStateGEClass;                                  // 0x00C8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            CalmDownGEClass;                                   // 0x00D0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>    ChangeAttitudeGEClasses;                           // 0x00D8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>    ChangeAttitudeByDamageGEClasses;                   // 0x00E8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UAISense>>           AggressionSenses;                                  // 0x00F8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         CallForHelpRadius;                                 // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CalmdownDistance;                                  // 0x010C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SafeDistanceOfScary;                               // 0x0110(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ClamdownScaryDistance;                             // 0x0114(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CalmDownDuration;                                  // 0x0118(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EFraction>                             CallForHelpFractions;                              // 0x0120(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bCanAgro;                                          // 0x0130(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanDisagro;                                       // 0x0131(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_132[0x2];                                      // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Priority;                                          // 0x0134(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UActionDataAsset*                       ActionDataAsset;                                   // 0x0138(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_140[0x8];                                      // 0x0140(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class ADefaultCharacter*                      OwnerCharacter;                                    // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USAIPerceptionComponent*                PerceptionComponent;                               // 0x0150(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class AActor*, ETeamAttitude>            CustomAttitudeActors;                              // 0x0158(0x0050)(NativeAccessSpecifierPrivate)
	class AActor*                                 CurrentAgroTarget;                                 // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ADefaultCharacter>       ScaryOfTarget;                                     // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAbilitySystemComponent*                CurrentAgroTargetASC;                              // 0x01B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AnimStopAllMontagesBlendTime;                      // 0x01C0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1C4[0x64];                                     // 0x01C4(0x0064)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AgroToTarget(class AActor* Actor);
	void CalmDown();
	void ChangeCanAgro(bool NewValue);
	class AActor* GetCurrentAgroTarget();
	const class AActor* GetCurrentScaryOfTarget();
	ETeamAttitude GetCustomAttitude(class AActor* Actor);
	struct FVector GetLastAgroTargetLocation();
	void NotifyActorForBattle(class ACharacter* Instigator, class UEnemyAggroController* InstigatorAgroController, class AActor* Target);
	void OnAggroMontageEnded(class UAnimMontage* Montage, bool bInterrupted);
	void OnCalmDownTimerEnded();
	void OnCleanupLevel();
	void OnEffectApplied(class UAbilitySystemComponent* AbilitySystemComponent, const struct FGameplayEffectSpec& GameplayEffectSpec, const struct FActiveGameplayEffectHandle& ActiveGameplayEffectHandle);
	void OnOwnerDestroyed(class AActor* DestroyedActor);
	void OnTagChanged(const struct FGameplayTag& UpdatedTag, bool bExists);
	void PlayAgroMontage(class UBaseEquipmentSet* Slot);
	void ScaryOf(const class ADefaultCharacter* Character);
	bool TryAgroToTarget(class AActor* Actor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EnemyAggroController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EnemyAggroController")
	}
	static class UEnemyAggroController* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnemyAggroController>();
	}
};
DUMPER7_ASSERTS_UEnemyAggroController;

// Class Smuta.EnemyDetectionComponent
// 0x01D0 (0x0270 - 0x00A0)
class UEnemyDetectionComponent final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(class UEnemyDetectionComponent* Component, EDetectionAIState NewState)> OnDetectionStateChanged; // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float OldValue, float NewValue)> OnDetectionScalePercentChanged;   // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bDebug;                                            // 0x00C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  BlockingTags;                                      // 0x00C8(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UCompassScreenZoneItemWidget> ScreenZoneWidgetClass;                           // 0x00E8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>            PlayerDetectedEffectClass;                         // 0x00F0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAIStimulus                            LastStimulus;                                      // 0x00F8(0x0058)(BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAIStimulus                            LastCommittedStimulus;                             // 0x0150(0x0058)(BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FStimulusDescription                   LastCommittedStimulusDescription;                  // 0x01A8(0x0010)(BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FStimulusDescription                   LastReactedStimulusDescription;                    // 0x01B8(0x0010)(BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          CanCallForHelp;                                    // 0x01C8(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SuspicionThreshold;                                // 0x01CC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SearchThreshold;                                   // 0x01D0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1D4[0x8];                                      // 0x01D4(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAITraits_DetectionHelp                CallForHelpSettings;                               // 0x01DC(0x000C)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1E8[0x88];                                     // 0x01E8(0x0088)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddPlayerAsHostile();
	void CallForHelp();
	void ChangeState(EDetectionAIState NewState, bool bForce);
	bool CheckPhraseCooldown();
	class ADefaultCharacter* GetCurrentDetectionTarget();
	float GetDetectionScalePercent();
	class UEnemyDetectionComponent* GetHelpRequesterComponent();
	EStimulusType GetHelpRequesterStimulusType();
	bool IsStimulusExactEqualLast(const struct FStimulusDescription& StimulusToCheck);
	void OnDetectionScaleChanged(float OldValue, float NewValue);
	void OnOwnerReceiveHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnOwnerTagChanged(const struct FGameplayTag& UpdatedTag, bool Exists);
	void OnPerceptionForgottenHandle(class AActor* Actor);
	void OnPerceptionUpdatedHandle(class AActor* Actor, const struct FAIStimulus& Stimulus);
	void OnSixSenseDetectionScaleChanged(float OldValue, float NewValue);
	void SetPhraseCooldown();
	void StartFullRestoreScale();

	EDetectionAIState GetCurrentState() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EnemyDetectionComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EnemyDetectionComponent")
	}
	static class UEnemyDetectionComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnemyDetectionComponent>();
	}
};
DUMPER7_ASSERTS_UEnemyDetectionComponent;

// Class Smuta.EnemyDetectionSubsystem
// 0x00A0 (0x00D0 - 0x0030)
class UEnemyDetectionSubsystem final : public UWorldSubsystem
{
public:
	TMulticastInlineDelegate<void(class UEnemyDetectionComponent* Component, EDetectionAIState NewState)> OnComponentStateChanged; // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x90];                                      // 0x0040(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool CanCharacterRequestCallForHelp(class ADefaultCharacter* HelpRequestCharacter);
	bool CouldSpawnDetectionSound();
	void GetAffectedNPCByStoneAtLocation(const struct FVector& StoneLocation, TArray<class ADefaultCharacter*>* OutCharacters);
	void HandleComponentStateChanged(class UEnemyDetectionComponent* Component, EDetectionAIState NewState);
	void ManageCallForHelp();
	void ManageStonesPerception();
	void OnDetectionSoundSpawned();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EnemyDetectionSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EnemyDetectionSubsystem")
	}
	static class UEnemyDetectionSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnemyDetectionSubsystem>();
	}
};
DUMPER7_ASSERTS_UEnemyDetectionSubsystem;

// Class Smuta.EnvQueryTest_RangeShootPoint
// 0x0000 (0x01F8 - 0x01F8)
class UEnvQueryTest_RangeShootPoint final : public UEnvQueryTest
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EnvQueryTest_RangeShootPoint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EnvQueryTest_RangeShootPoint")
	}
	static class UEnvQueryTest_RangeShootPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnvQueryTest_RangeShootPoint>();
	}
};
DUMPER7_ASSERTS_UEnvQueryTest_RangeShootPoint;

// Class Smuta.FractionAttitudeEffect
// 0x00A0 (0x0B10 - 0x0A70)
class UFractionAttitudeEffect : public UGameplayEffect
{
public:
	TMap<EFraction, int32>                        FractionsRelationChange;                           // 0x0A70(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<EFraction, EExtendedAttitude>            FractionsRelationOverride;                         // 0x0AC0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FractionAttitudeEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FractionAttitudeEffect")
	}
	static class UFractionAttitudeEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFractionAttitudeEffect>();
	}
};
DUMPER7_ASSERTS_UFractionAttitudeEffect;

// Class Smuta.ScaryOfPlayerAttitudeEffect
// 0x0008 (0x0B18 - 0x0B10)
class UScaryOfPlayerAttitudeEffect final : public UFractionAttitudeEffect
{
public:
	uint8                                         Pad_B10[0x8];                                      // 0x0B10(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ScaryOfPlayerAttitudeEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ScaryOfPlayerAttitudeEffect")
	}
	static class UScaryOfPlayerAttitudeEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScaryOfPlayerAttitudeEffect>();
	}
};
DUMPER7_ASSERTS_UScaryOfPlayerAttitudeEffect;

// Class Smuta.EquipmentData
// 0x0028 (0x0058 - 0x0030)
class UEquipmentData final : public UDataAsset
{
public:
	class UStaticMesh*                            EquipmentMesh;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SlotName;                                          // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Smuta::EItemType                              Type;                                              // 0x0040(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAdditionalEquipmentData*>       AdditionalEquipmentData;                           // 0x0048(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	class UAdditionalEquipmentData* GetAdditionalEquipmentData(TSubclassOf<class UAdditionalEquipmentData> DataTypeClass);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EquipmentData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EquipmentData")
	}
	static class UEquipmentData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEquipmentData>();
	}
};
DUMPER7_ASSERTS_UEquipmentData;

// Class Smuta.EquipmentEffect
// 0x0008 (0x0A78 - 0x0A70)
class UEquipmentEffect final : public UGameplayEffect
{
public:
	uint8                                         Pad_A70[0x8];                                      // 0x0A70(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EquipmentEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EquipmentEffect")
	}
	static class UEquipmentEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEquipmentEffect>();
	}
};
DUMPER7_ASSERTS_UEquipmentEffect;

// Class Smuta.EquipmentSmartObject
// 0x0000 (0x0348 - 0x0348)
class AEquipmentSmartObject final : public ABaseSmartObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EquipmentSmartObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EquipmentSmartObject")
	}
	static class AEquipmentSmartObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEquipmentSmartObject>();
	}
};
DUMPER7_ASSERTS_AEquipmentSmartObject;

// Class Smuta.EquipmentSmartObjectBehavior
// 0x0020 (0x0180 - 0x0160)
class UEquipmentSmartObjectBehavior final : public UBaseGameplayBehavior
{
public:
	TSubclassOf<class UNPCEquipmentSetInfo>       GrantingEquipment;                                 // 0x0160(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           EquipmentGrantingTag;                              // 0x0168(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_170[0x10];                                     // 0x0170(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool GrantEquipment();
	bool RemoveEquipment();
	void SetBehaviorProps(const struct FGameplayTag& Tag, const TSubclassOf<class UNPCEquipmentSetInfo> EquipmentClass);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EquipmentSmartObjectBehavior")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EquipmentSmartObjectBehavior")
	}
	static class UEquipmentSmartObjectBehavior* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEquipmentSmartObjectBehavior>();
	}
};
DUMPER7_ASSERTS_UEquipmentSmartObjectBehavior;

// Class Smuta.EvidenceBase
// 0x0100 (0x0398 - 0x0298)
class AEvidenceBase : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	EEvidenceState                                State;                                             // 0x02A0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AEvidenceBase* InstigatorActor, EEvidenceState State)> OnEvidenceStateChanged; // 0x02A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USphereComponent*                       SphereComponent;                                   // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionComponent*                  InteractionComponent;                              // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                          BoxInteraction;                                    // 0x02C8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBillboardComponent*                    Billboard;                                         // 0x02D0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionWidgetComponent*            InteractionWidgetComponent;                        // 0x02D8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   WarpingTarget;                                     // 0x02E0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrowComponent*                        WarpingArrow;                                      // 0x02E8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   EvidenceName;                                      // 0x02F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          HasAnimation;                                      // 0x02F8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          EnableCameraTracking;                              // 0x02F9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EEvidenceAnimationMode                        AnimationMode;                                     // 0x02FA(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2FB[0x5];                                      // 0x02FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 AnimationOverrideTarget;                           // 0x0300(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EInvestigationTrackingMode                    AnimationTrackingMode;                             // 0x0308(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          HasInnerVoice;                                     // 0x0309(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_30A[0x6];                                      // 0x030A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            ActivationMontage;                                 // 0x0310(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSubtitlesInfo                         EvidenceInnerInfo;                                 // 0x0338(0x0038)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundWave>              EvidenceInnerVoice;                                // 0x0370(0x0028)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void ActivateEvidence();
	void CallbackWarpAction(class FName WarpTargetName);
	void ChangeEvidenceState(EEvidenceState NewState);
	void DeactivateEvidence();
	void OnActivationMontageEnded(class UAnimMontage* Montage, bool bInterrupted);
	void StartEvidence();
	void WarpAction(EEvidenceAnimationMode Mode, class FName WarpTargetName, float TimeToRemoveTarget);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EvidenceBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EvidenceBase")
	}
	static class AEvidenceBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEvidenceBase>();
	}
};
DUMPER7_ASSERTS_AEvidenceBase;

// Class Smuta.SaveLoadSubsystem
// 0x0078 (0x00A8 - 0x0030)
class USaveLoadSubsystem final : public UGameInstanceSubsystem
{
public:
	TMulticastInlineDelegate<void()>              PreSaveDelegate;                                   // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const bool SaveLoadResult)> PostSaveDelegate;                      // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              PreLoadDelegate;                                   // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const bool SaveLoadResult)> PostLoadDelegate;                      // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x38];                                      // 0x0070(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FailLoadProcess(const class FText& FailReason);
	class FText GetFailReasonDescription();
	class UTexture2D* ImportSaveThumbnail(const class FString& SaveGameName);
	bool LoadGame();
	bool LoadLastSaveGame();
	bool MakeAutoSave(const class FString& OptionalOverrideName);
	void OnLoadFailed();
	void OnLoadSuccess();
	void OnObjectPostLoaded(class UObject* PostLoadedObject);
	void OnObjectPreLoaded(TArray<uint8>* SaveData, class UObject* PreLoadedObject);
	void OnSaveCompleted();
	void OnSaveGameNameCreated(const class FString& SaveGameName, const bool bIsAutosave);
	void OnSubSystemsInited();
	bool SaveGame(const class FString& OptionalOverrideName);
	void SetActorSkipSave(class AActor* InActor, const bool bSkipSave);

	bool CanSaveGame() const;
	class FString GetCurrentGameSaveName() const;
	bool IsSaveLoadInProgress() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SaveLoadSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SaveLoadSubsystem")
	}
	static class USaveLoadSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USaveLoadSubsystem>();
	}
};
DUMPER7_ASSERTS_USaveLoadSubsystem;

// Class Smuta.EvidenceSingle
// 0x0098 (0x0430 - 0x0398)
class AEvidenceSingle : public AEvidenceBase
{
public:
	TMulticastInlineDelegate<void()>              OnEvidenceMeshHidden;                              // 0x0398(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x03A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x03B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   Decal;                                             // 0x03B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EEvidenceType                                 Type;                                              // 0x03C0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EEvidenceInteraction                          InteractionEvent;                                  // 0x03C1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C2[0x2];                                      // 0x03C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeToHidden;                                      // 0x03C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                            EvidenceStatic;                                    // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMesh*                          EvidenceSkeletal;                                  // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     EvidenceDecal;                                     // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DecalScale;                                        // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DecalOpacity;                                      // 0x03E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   OpacityName;                                       // 0x03E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           DecalColor;                                        // 0x03F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   ColorName;                                         // 0x0400(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DecalFade;                                         // 0x0408(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   FadeName;                                          // 0x040C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               NewMaterialDecal;                                  // 0x0418(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          VisibleStatus;                                     // 0x0420(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_421[0xF];                                      // 0x0421(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EvidenceSingle")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EvidenceSingle")
	}
	static class AEvidenceSingle* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEvidenceSingle>();
	}
};
DUMPER7_ASSERTS_AEvidenceSingle;

// Class Smuta.FinisherActionData
// 0x0050 (0x0080 - 0x0030)
class UFinisherActionData final : public UBaseActionData
{
public:
	TMap<class UEquipmentData*, struct FFinisherActionMontages> Montages;                            // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FinisherActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FinisherActionData")
	}
	static class UFinisherActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFinisherActionData>();
	}
};
DUMPER7_ASSERTS_UFinisherActionData;

// Class Smuta.SmutaBattleDirector
// 0x0020 (0x0130 - 0x0110)
class USmutaBattleDirector : public UBattleDirector
{
public:
	int32                                         RangeTicketTurns;                                  // 0x0108(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_10C[0x24];                                     // 0x010C(0x0024)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool HasEnemyWithRangeWeapon();
	void OnAttackFinished(const class UBaseAbilitiesComponent* ASC);
	void OnAttackStarted(const class UBaseAbilitiesComponent* ASC);
	void OnNewDominantSelected(const class UZoneFightAiComponent* NewDominant);

	int32 GetEnemyWithMeleeWeaponCount() const;
	int32 GetEnemyWithRangeWeaponCount() const;
	bool HasAnyAvailableTicket() const;
	bool HasAvailableTicket(bool bForRange) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaBattleDirector")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaBattleDirector")
	}
	static class USmutaBattleDirector* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmutaBattleDirector>();
	}
};
DUMPER7_ASSERTS_USmutaBattleDirector;

// Class Smuta.FirstPersonAnimInstance
// 0x0030 (0x03F0 - 0x03C0)
class UFirstPersonAnimInstance : public UBaseAnimInstance
{
public:
	float                                         HeadToCameraAngle;                                 // 0x03B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotationInterpSpeed;                               // 0x03BC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlopeForwardAngle;                                 // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlopeRightAngle;                                   // 0x03C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GroundVerticalOffset;                              // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCorrectionByGroundNormal;                      // 0x03CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3CD[0x3];                                      // 0x03CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SlopeTraceForwardOffset;                           // 0x03D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlopeTraceRightOffset;                             // 0x03D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlopeTraceUpOffset;                                // 0x03D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlopeTraceDownOffset;                              // 0x03DC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DialogHeadVerticalOverturn;                        // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E4[0xC];                                      // 0x03E4(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetCameraDeltaYaw();
	float GetDesiredMovementYaw();
	float GetDesiredMovementYawLocal();
	void GetInputAxisFixedValues(float* Forward, float* Right);
	void GetInputAxisValues(float* Forward, float* Right);
	void GetSlopeAngles(float* Forward, float* Right);

	class ADefaultCharacter* GetCharacter() const;
	struct FVector2D GetMovementInput() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FirstPersonAnimInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FirstPersonAnimInstance")
	}
	static class UFirstPersonAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirstPersonAnimInstance>();
	}
};
DUMPER7_ASSERTS_UFirstPersonAnimInstance;

// Class Smuta.FleeStateEffect
// 0x0000 (0x0A70 - 0x0A70)
class UFleeStateEffect final : public UGameplayEffect
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FleeStateEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FleeStateEffect")
	}
	static class UFleeStateEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFleeStateEffect>();
	}
};
DUMPER7_ASSERTS_UFleeStateEffect;

// Class Smuta.ShootActionData
// 0x0050 (0x0080 - 0x0030)
class UShootActionData final : public UBaseActionData
{
public:
	TMap<class UEquipmentData*, struct FShootActionMontages> Montages;                               // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShootActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShootActionData")
	}
	static class UShootActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShootActionData>();
	}
};
DUMPER7_ASSERTS_UShootActionData;

// Class Smuta.FootprintsBase
// 0x0038 (0x03D0 - 0x0398)
class AFootprintsBase : public AEvidenceBase
{
public:
	class USplineComponent*                       Spline;                                            // 0x0398(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInstancedStaticMeshComponent*          DecalInstance;                                     // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EFootprintsType                               Type;                                              // 0x03A8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          IsNeedShowDecal;                                   // 0x03A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3AA[0x6];                                      // 0x03AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            Interactions;                                      // 0x03B0(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     EvidenceDecal;                                     // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SizeDecal;                                         // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         HeightDecal;                                       // 0x03CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	bool StartIndependentFootstep();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FootprintsBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FootprintsBase")
	}
	static class AFootprintsBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFootprintsBase>();
	}
};
DUMPER7_ASSERTS_AFootprintsBase;

// Class Smuta.ForceFeedBackEffectComponent
// 0x0018 (0x0040 - 0x0028)
class UForceFeedBackEffectComponent final : public UGameplayEffectComponent
{
public:
	class UForceFeedbackEffect*                   ForceFeedbackEffect;                               // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   ForceFeedbackTag;                                  // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsLooping;                                        // 0x0038(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bStopOnEffectRemoved;                              // 0x0039(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ForceFeedBackEffectComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ForceFeedBackEffectComponent")
	}
	static class UForceFeedBackEffectComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UForceFeedBackEffectComponent>();
	}
};
DUMPER7_ASSERTS_UForceFeedBackEffectComponent;

// Class Smuta.SAIPerceptionComponent
// 0x0000 (0x0190 - 0x0190)
class USAIPerceptionComponent final : public UAIPerceptionComponent
{
public:
	void SetHearingRadius(float NewRadius);
	void SetPeripheralVisionAngleDegrees(float NewAngle);

	bool CheckAvailabilityActorByAnySense(class AActor* Actor) const;
	bool GetHearingRadius(float* Radius) const;
	float GetImmediateDetectionRadius() const;
	float GetLoseSightRadius() const;
	float GetPeripheralVisionAngleDegrees() const;
	float GetSightRadius() const;
	float GetSixSenseRadius() const;
	bool HasActiveStimulusWithSense(const class AActor* Source, const TArray<TSubclassOf<class UAISense>>& SenseClasses) const;
	bool HasActiveStimulusWithSenseAndTag(const class AActor* Source, TSubclassOf<class UAISense> SenseClass, class FName Tag) const;
	bool HasActiveStimulusWithTag(const class AActor* Source, class FName Tag) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SAIPerceptionComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SAIPerceptionComponent")
	}
	static class USAIPerceptionComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USAIPerceptionComponent>();
	}
};
DUMPER7_ASSERTS_USAIPerceptionComponent;

// Class Smuta.ForestAnimalPOI
// 0x0008 (0x02B8 - 0x02B0)
class AForestAnimalPOI final : public ABasePOI
{
public:
	class AAnimalMatrixSpawner*                   OwnerSpawner;                                      // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ForestAnimalPOI")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ForestAnimalPOI")
	}
	static class AForestAnimalPOI* GetDefaultObj()
	{
		return GetDefaultObjImpl<AForestAnimalPOI>();
	}
};
DUMPER7_ASSERTS_AForestAnimalPOI;

// Class Smuta.SmutaAbilitySystemBlueprintFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class USmutaAbilitySystemBlueprintFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FGameplayTagContainer GetEffectAssetGameplayTagsFromEffectSpec(const struct FGameplayEffectSpec& EffectSpec);
	static void GetModifierParamsFromEvaluatedData(const struct FGameplayModifierEvaluatedData& EffectSpec, struct FGameplayAttribute* OutAttribute, float* OutMagnitude, EGameplayModOp* OutMod, bool* OutValid);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaAbilitySystemBlueprintFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaAbilitySystemBlueprintFunctionLibrary")
	}
	static class USmutaAbilitySystemBlueprintFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmutaAbilitySystemBlueprintFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_USmutaAbilitySystemBlueprintFunctionLibrary;

// Class Smuta.FractionInterface
// 0x0000 (0x0000 - 0x0000)
class IFractionInterface final
{
public:
	class UFractionComponent* GetFractionComponent() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FractionInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FractionInterface")
	}
	static class IFractionInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFractionInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IFractionInterface;

// Class Smuta.FractionComponent
// 0x0008 (0x00A8 - 0x00A0)
class UFractionComponent final : public UActorComponent
{
public:
	EFraction                                     Fraction;                                          // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static ETeamAttitude GetActorsAttitude(const class AActor* Actor1, const class AActor* Actor2);
	static EExtendedAttitude GetActorsExtendedAttitude(const class AActor* Actor1, const class AActor* Actor2);
	static void GetAttitudeEffectsChange(const class AActor* Actor1, const class AActor* Actor2, EExtendedAttitude* InOutAttitude);
	static int32 GetFractionsNum();
	static bool IsActorScaryOf(const class AActor* Actor, const class AActor* ScaryOfActor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FractionComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FractionComponent")
	}
	static class UFractionComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFractionComponent>();
	}
};
DUMPER7_ASSERTS_UFractionComponent;

// Class Smuta.SmutaInputSettings
// 0x00A8 (0x00E0 - 0x0038)
class USmutaInputSettings final : public UDeveloperSettings
{
public:
	TSoftObjectPtr<class UInputAction>            MovementInputAction;                               // 0x0038(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UInputAction>            FocusInputAction;                                  // 0x0060(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UInputAction>            FocusInputToggleAction;                            // 0x0088(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UInputAction>            TurnInputAction;                                   // 0x00B0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReloadInputHoldTime;                               // 0x00D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static const class USmutaInputSettings* Get();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaInputSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaInputSettings")
	}
	static class USmutaInputSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmutaInputSettings>();
	}
};
DUMPER7_ASSERTS_USmutaInputSettings;

// Class Smuta.FractionsProgressionInfoDataAsset
// 0x0050 (0x0080 - 0x0030)
class UFractionsProgressionInfoDataAsset final : public UPrimaryDataAsset
{
public:
	TMap<ESmutaDLCFraction, struct FFractionProgressionInfo> FractionProgressionInfoMap;             // 0x0030(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FractionsProgressionInfoDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FractionsProgressionInfoDataAsset")
	}
	static class UFractionsProgressionInfoDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFractionsProgressionInfoDataAsset>();
	}
};
DUMPER7_ASSERTS_UFractionsProgressionInfoDataAsset;

// Class Smuta.FractionsDataAsset
// 0x0058 (0x0088 - 0x0030)
class UFractionsDataAsset final : public UPrimaryDataAsset
{
public:
	float                                         MinInfluence;                                      // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxInfluence;                                      // 0x0034(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<ESmutaDLCFraction, struct FFractionData> FractionsData;                                     // 0x0038(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FractionsDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FractionsDataAsset")
	}
	static class UFractionsDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFractionsDataAsset>();
	}
};
DUMPER7_ASSERTS_UFractionsDataAsset;

// Class Smuta.SmutaCombatSettings
// 0x00B8 (0x00F0 - 0x0038)
class USmutaCombatSettings final : public UDeveloperSettingsBackedByCVars
{
public:
	float                                         ComboInputOffset;                                  // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MontageEndInputEnableRatio;                        // 0x003C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StunPreventAttackTime;                             // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightAttackInputCooldown;                          // 0x0044(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeavyAttackInputCooldown;                          // 0x0048(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LightComboLength;                                  // 0x004C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HeavyComboLength;                                  // 0x0050(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MixedComboLength;                                  // 0x0054(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxComboLength;                                    // 0x0058(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EEnemyPosition, struct FFloatRange>      EnemyPositionMapping;                              // 0x0060(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	float                                         AimModeDelay;                                      // 0x00B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UActionDataAsset>        DefaultActionDataAsset;                            // 0x00B8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvulnerableDodge;                                // 0x00E0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         bMaxEnemiesCountForFinishingOff;                   // 0x00E4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableFeelingCameraShakesEffects;                // 0x00E8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableFeelingTimeDilationEffects;                // 0x00E9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableFeelingCameraZoomEffects;                  // 0x00EA(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EB[0x5];                                       // 0x00EB(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static const class USmutaCombatSettings* Get();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaCombatSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaCombatSettings")
	}
	static class USmutaCombatSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmutaCombatSettings>();
	}
};
DUMPER7_ASSERTS_USmutaCombatSettings;

// Class Smuta.FractionsSubsystem
// 0x0190 (0x01C0 - 0x0030)
class UFractionsSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EBuildProjectType, TSoftObjectPtr<class UFractionsDataAsset>> FractionsDataAssetSoftPtr;    // 0x0038(0x0050)(Config, GlobalConfig, NoClear, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UFractionsDataAsset*                    FractionsDataAsset;                                // 0x0088(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<EBuildProjectType, TSoftObjectPtr<class UFractionsProgressionInfoDataAsset>> DefaultFractionsProgressionInfoSoftPtr; // 0x0090(0x0050)(Config, GlobalConfig, NoClear, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<ESmutaDLCFraction, struct FFractionProgressionInfo> FractionProgressionInfoMap;             // 0x00E0(0x0050)(SaveGame, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(const ESmutaDLCFraction& Fraction, float DeltaInfluence)> OnFractionInfluenceChanged; // 0x0130(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const ESmutaDLCFraction& Fraction, float DeltaInfluence)> OnFractionStateChanged; // 0x0140(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const ESmutaDLCFraction& Fraction, float DeltaInfluence)> OnFractionHiddenChanged; // 0x0150(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const ESmutaDLCFraction& Fractions, const class FName& FractopnMemberId)> OnFractionMemberHiddenChanged; // 0x0160(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<ESmutaDLCFraction, float>                LastUnseenFractionsInfluenceChanges;               // 0x0170(0x0050)(Protected, NativeAccessSpecifierProtected)

public:
	void AddFractionInfluence(const ESmutaDLCFraction& Fraction, float DeltaValue);
	void AddMultipleFractionsInfluence(const TMap<ESmutaDLCFraction, float>& FractionsInfluenceToAdd);
	void ClearLastUnseenFractionsInfluenceChanges();
	void ClearUnseenFractions();
	void OnSubSystemsInited();
	void SetFractionHidden(const ESmutaDLCFraction& Fraction, bool bIsHidden);
	void SetFractionInfluence(const ESmutaDLCFraction& Fraction, float NewValue);
	void SetFractionMemberOpened(const ESmutaDLCFraction& Fraction, const class FName& FractionMemberId, bool bIsOpened);
	void SetFractionState(const ESmutaDLCFraction& Fraction, const EFractionState& State);

	TArray<ESmutaDLCFraction> GetAllRegisteredFractions() const;
	struct FFractionData GetFractionData(const ESmutaDLCFraction& Fraction, bool* bSuccess) const;
	float GetFractionInfluence(const ESmutaDLCFraction& Fraction, bool* bSuccess) const;
	struct FFractionMemberData GetFractionMemberData(const ESmutaDLCFraction& Fraction, const class FName& FractionMemberId, bool* bSuccess) const;
	TArray<class FName> GetFractionMemberIds(const ESmutaDLCFraction& Fraction, bool* bSuccess) const;
	struct FFractionMemberProgressionInfo GetFractionMemberProgressionInfo(const ESmutaDLCFraction& Fraction, const class FName& FractionMemberId, bool* bSuccess) const;
	struct FFractionProgressionInfo GetFractionProgressionInfo(const ESmutaDLCFraction& Fraction, bool* bSuccess) const;
	TArray<ESmutaDLCFraction> GetHiddenFractions() const;
	TMap<ESmutaDLCFraction, float> GetLastUnseenFractionsInfluenceChanges() const;
	float GetMaxInfluence() const;
	float GetMinInfluence() const;
	TArray<ESmutaDLCFraction> GetNotHiddenFractions() const;
	TArray<class FName> GetOpenedFractionMemberIds(const ESmutaDLCFraction& Fraction) const;
	float GetUnseenFractionInfluence(const ESmutaDLCFraction& Fraction) const;
	bool HasLastUnseenFractionsInfluenceChanges() const;
	bool IsFractionHidden(const ESmutaDLCFraction& Fraction, bool* bSuccess) const;
	bool IsFractionMemberOpened(const ESmutaDLCFraction& Fraction, const class FName& FractionMemberId, bool* bSuccess) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FractionsSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FractionsSubsystem")
	}
	static class UFractionsSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFractionsSubsystem>();
	}
};
DUMPER7_ASSERTS_UFractionsSubsystem;

// Class Smuta.SpawnerPointZastava
// 0x0078 (0x0360 - 0x02E8)
class ASpawnerPointZastava : public ASpawnerPointBase
{
public:
	bool                                          CanAutoAgro;                                       // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPeacefulAsset*                         LocomotionData;                                    // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFractionComponent*                     FractionComponent;                                 // 0x02F8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AZastavaBase*                           BaseZastava;                                       // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FEnemyData                             EnemyData;                                         // 0x0308(0x0030)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FPatrolData                            PatrolData;                                        // 0x0338(0x0010)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	EEnemyState                                   EnemyState;                                        // 0x0348(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        RoutePoints;                                       // 0x0350(0x0010)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	class ADefaultCharacter* Spawn(class UMatrixDataAsset* MatrixDataAsset);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpawnerPointZastava")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpawnerPointZastava")
	}
	static class ASpawnerPointZastava* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASpawnerPointZastava>();
	}
};
DUMPER7_ASSERTS_ASpawnerPointZastava;

// Class Smuta.SimpleInnerVoiceActor
// 0x0080 (0x0318 - 0x0298)
class ASimpleInnerVoiceActor final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          HasAlreadyBeenReproduced;                          // 0x02A0(0x0001)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSubtitlesInfo                         InnerVoiceInfo;                                    // 0x02A8(0x0038)(Edit, BlueprintVisible, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USoundWave>              InnerVoiceSound;                                   // 0x02E0(0x0028)(Edit, BlueprintVisible, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       SphereComponent;                                   // 0x0308(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBillboardComponent*                    Billboard;                                         // 0x0310(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BeginOverlapped(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void DeactivateActor();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SimpleInnerVoiceActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SimpleInnerVoiceActor")
	}
	static class ASimpleInnerVoiceActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASimpleInnerVoiceActor>();
	}
};
DUMPER7_ASSERTS_ASimpleInnerVoiceActor;

// Class Smuta.FreeMembersZastava
// 0x0000 (0x0360 - 0x0360)
class AFreeMembersZastava final : public ASpawnerPointZastava
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FreeMembersZastava")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FreeMembersZastava")
	}
	static class AFreeMembersZastava* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFreeMembersZastava>();
	}
};
DUMPER7_ASSERTS_AFreeMembersZastava;

// Class Smuta.FriendlyPlayerAttitudeEffect
// 0x0008 (0x0B18 - 0x0B10)
class UFriendlyPlayerAttitudeEffect final : public UFractionAttitudeEffect
{
public:
	uint8                                         Pad_B10[0x8];                                      // 0x0B10(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FriendlyPlayerAttitudeEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FriendlyPlayerAttitudeEffect")
	}
	static class UFriendlyPlayerAttitudeEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFriendlyPlayerAttitudeEffect>();
	}
};
DUMPER7_ASSERTS_UFriendlyPlayerAttitudeEffect;

// Class Smuta.SmutaGameInstance
// 0x0040 (0x0200 - 0x01C0)
class USmutaGameInstance : public UGameInstance
{
public:
	uint8                                         Pad_1C0[0x30];                                     // 0x01C0(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class USmutaGameUserSettings*                 SmutaGameUserSettingsInstance;                     // 0x01F0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F8[0x8];                                      // 0x01F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool LoadGameData();
	void OnExitSmutaGame();
	void OnGamePostLoad(const bool InLoadResult);
	void OnGamePostLoadFailedEvent();
	void OnGamePreLoad();
	void OnGamePreLoadEvent();
	void OnGamePreSave();
	void OnGamePreSaveEvent();
	void OnStartNewSmutaGame();
	bool SaveGameData();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaGameInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaGameInstance")
	}
	static class USmutaGameInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmutaGameInstance>();
	}
};
DUMPER7_ASSERTS_USmutaGameInstance;

// Class Smuta.MMC_GetFromAbility
// 0x0000 (0x0040 - 0x0040)
class UMMC_GetFromAbility final : public UGameplayModMagnitudeCalculation
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MMC_GetFromAbility")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MMC_GetFromAbility")
	}
	static class UMMC_GetFromAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMMC_GetFromAbility>();
	}
};
DUMPER7_ASSERTS_UMMC_GetFromAbility;

// Class Smuta.GrantEquipmentDlgEvent
// 0x0040 (0x0068 - 0x0028)
class UGrantEquipmentDlgEvent final : public UDlgEventCustom
{
public:
	TSoftObjectPtr<class AActor>                  Target;                                            // 0x0028(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEquipmentSetInfo*                      EquipmentSetInfo;                                  // 0x0050(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, SaveGame, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipmentSlotType                            EquipmentSlotType;                                 // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor;                                       // 0x0060(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GrantEquipmentDlgEvent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GrantEquipmentDlgEvent")
	}
	static class UGrantEquipmentDlgEvent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGrantEquipmentDlgEvent>();
	}
};
DUMPER7_ASSERTS_UGrantEquipmentDlgEvent;

// Class Smuta.SmutaSplineMovementComponent
// 0x0000 (0x01E0 - 0x01E0)
class USmutaSplineMovementComponent : public USplineMovementComponent
{
public:
	void SetSplineMovementInstanceVars(bool inStart, TSoftObjectPtr<class ASplineActor> InSpline, const TArray<class FName>& InTags);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaSplineMovementComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaSplineMovementComponent")
	}
	static class USmutaSplineMovementComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmutaSplineMovementComponent>();
	}
};
DUMPER7_ASSERTS_USmutaSplineMovementComponent;

// Class Smuta.GrantEquipmentQuestAction
// 0x0040 (0x0070 - 0x0030)
class UGrantEquipmentQuestAction final : public UQuestStepAction
{
public:
	TSoftObjectPtr<class AActor>                  Target;                                            // 0x0030(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEquipmentSetInfo*                      EquipmentSetInfo;                                  // 0x0058(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, SaveGame, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipmentSlotType                            EquipmentSlotType;                                 // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor;                                       // 0x0068(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GrantEquipmentQuestAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GrantEquipmentQuestAction")
	}
	static class UGrantEquipmentQuestAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGrantEquipmentQuestAction>();
	}
};
DUMPER7_ASSERTS_UGrantEquipmentQuestAction;

// Class Smuta.GrantUpgradeQuestAction
// 0x0010 (0x0040 - 0x0030)
class UGrantUpgradeQuestAction final : public UQuestStepAction
{
public:
	struct FDataTableRowHandle                    UpgradeRowHandle;                                  // 0x0030(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GrantUpgradeQuestAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GrantUpgradeQuestAction")
	}
	static class UGrantUpgradeQuestAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGrantUpgradeQuestAction>();
	}
};
DUMPER7_ASSERTS_UGrantUpgradeQuestAction;

// Class Smuta.TargetedCharacterMovementComponent
// 0x0040 (0x0F90 - 0x0F50)
#pragma pack(push, 0x1)
class alignas(0x10) UTargetedCharacterMovementComponent : public UCharacterMovementComponent
{
public:
	TMulticastInlineDelegate<void(const class AActor* NewTarget)> OnTargetChanged;                   // 0x0F48(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool InMove)>   OnMovementStateChanged;                            // 0x0F58(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         RotateSpeedMod;                                    // 0x0F68(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlideBoostMod;                                     // 0x0F6C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 LockOnTarget;                                      // 0x0F70(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F78[0x10];                                     // 0x0F78(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAimTagChanged(const struct FGameplayTag& Tag, int32 NewCount);
	void OnHardLockChanged(const struct FGameplayTag& Tag, int32 NewCount);
	void OnSoftLockChanged(const struct FGameplayTag& Tag, int32 NewCount);
	void SetLockOnTarget(class AActor* NewLockOnTarget);

	const class AActor* GetLockOnTarget() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetedCharacterMovementComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetedCharacterMovementComponent")
	}
	static class UTargetedCharacterMovementComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetedCharacterMovementComponent>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_UTargetedCharacterMovementComponent;

// Class Smuta.GuardZastava
// 0x0000 (0x0360 - 0x0360)
class AGuardZastava final : public ASpawnerPointZastava
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GuardZastava")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GuardZastava")
	}
	static class AGuardZastava* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGuardZastava>();
	}
};
DUMPER7_ASSERTS_AGuardZastava;

// Class Smuta.HitActionData
// 0x01E0 (0x0210 - 0x0030)
class UHitActionData final : public UBaseActionData
{
public:
	TMap<class UEquipmentData*, struct FHitActionMontages> LightMontages;                            // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<class UEquipmentData*, struct FHitActionMontages> HardMontages;                             // 0x0080(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<class UEquipmentData*, struct FHitActionMontages> StunMontages;                             // 0x00D0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<class UEquipmentData*, struct FHitActionMontages> CritMontages;                             // 0x0120(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<class UEquipmentData*, struct FHitActionMontages> BlockedMontages;                          // 0x0170(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<class UEquipmentData*, struct FHitActionMontages> KickMontages;                             // 0x01C0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HitActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HitActionData")
	}
	static class UHitActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHitActionData>();
	}
};
DUMPER7_ASSERTS_UHitActionData;

// Class Smuta.SmutaDialogueGameplayBehavior
// 0x0040 (0x01A0 - 0x0160)
class USmutaDialogueGameplayBehavior : public UBaseGameplayBehavior
{
public:
	TMulticastInlineDelegate<void(class ADefaultCharacter* Participant)> OnPrepareFinished;          // 0x0160(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_170[0x8];                                      // 0x0170(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class ADefaultCharacter>       AvatarCharacter;                                   // 0x0178(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UNPCDialogueComponent>   DialogueComponent;                                 // 0x0180(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ASmutaDialogueSmartObject> DialogueSmartObject;                             // 0x0188(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UAnimInstance>           AvatarAnimInstance;                                // 0x0190(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_198[0x8];                                      // 0x0198(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FinishPreparation();
	void OnDialogueFinished(bool bSuccess);
	void OnDialogueStarted(class ADefaultCharacter* Companion1, class ADefaultCharacter* Companion2);
	void OnPreparationFinished(class ADefaultCharacter* Participant);
	void StartDialogueLogic(class ADefaultCharacter* Companion1, class ADefaultCharacter* Companion2);
	void StartPostDialogueLogic();
	void StartPrepareLogic();
	void StartWaitDialogLogic();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaDialogueGameplayBehavior")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaDialogueGameplayBehavior")
	}
	static class USmutaDialogueGameplayBehavior* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmutaDialogueGameplayBehavior>();
	}
};
DUMPER7_ASSERTS_USmutaDialogueGameplayBehavior;

// Class Smuta.HitDirectionData
// 0x0008 (0x0030 - 0x0028)
class UHitDirectionData final : public UAnimMetaData
{
public:
	struct FGameplayTag                           HitDirectionTag;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HitDirectionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HitDirectionData")
	}
	static class UHitDirectionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHitDirectionData>();
	}
};
DUMPER7_ASSERTS_UHitDirectionData;

// Class Smuta.HitEventData
// 0x0010 (0x0038 - 0x0028)
class UHitEventData final : public UObject
{
public:
	struct FGameplayTag                           AttackType;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           AttackSide;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HitEventData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HitEventData")
	}
	static class UHitEventData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHitEventData>();
	}
};
DUMPER7_ASSERTS_UHitEventData;

// Class Smuta.ZastavaBell
// 0x0028 (0x02C0 - 0x0298)
class AZastavaBell final : public AActor
{
public:
	class UBillboardComponent*                    BillboardComponent;                                // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                        SceneComponent;                                    // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   BellMesh;                                          // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundWave*                             BellWave;                                          // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                        Sound;                                             // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ZastavaBell")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ZastavaBell")
	}
	static class AZastavaBell* GetDefaultObj()
	{
		return GetDefaultObjImpl<AZastavaBell>();
	}
};
DUMPER7_ASSERTS_AZastavaBell;

// Class Smuta.HitInterruptImmuneEffect
// 0x0008 (0x0A78 - 0x0A70)
class UHitInterruptImmuneEffect final : public UGameplayEffect
{
public:
	uint8                                         Pad_A70[0x8];                                      // 0x0A70(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HitInterruptImmuneEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HitInterruptImmuneEffect")
	}
	static class UHitInterruptImmuneEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHitInterruptImmuneEffect>();
	}
};
DUMPER7_ASSERTS_UHitInterruptImmuneEffect;

// Class Smuta.HorseAttributes
// 0x0010 (0x0040 - 0x0030)
class UHorseAttributes final : public UAttributeSet
{
public:
	struct FGameplayAttributeData                 Bravery;                                           // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HorseAttributes")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HorseAttributes")
	}
	static class UHorseAttributes* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHorseAttributes>();
	}
};
DUMPER7_ASSERTS_UHorseAttributes;

// Class Smuta.StaminaAttributes
// 0x0090 (0x00C0 - 0x0030)
class UStaminaAttributes final : public UAttributeSet
{
public:
	struct FGameplayAttributeData                 Stamina;                                           // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 MaxStamina;                                        // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 StaminaRegRate;                                    // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 LightAttackCost;                                   // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 HeavyAttackCost;                                   // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 BlockedAttackCost;                                 // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 DodgeCost;                                         // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 SuccessParryAttackBonus;                           // 0x00A0(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 HeavyHitCost;                                      // 0x00B0(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StaminaAttributes")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StaminaAttributes")
	}
	static class UStaminaAttributes* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStaminaAttributes>();
	}
};
DUMPER7_ASSERTS_UStaminaAttributes;

// Class Smuta.HostilePlayerAttitudeEffect
// 0x0008 (0x0B18 - 0x0B10)
class UHostilePlayerAttitudeEffect final : public UFractionAttitudeEffect
{
public:
	uint8                                         Pad_B10[0x8];                                      // 0x0B10(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HostilePlayerAttitudeEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HostilePlayerAttitudeEffect")
	}
	static class UHostilePlayerAttitudeEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHostilePlayerAttitudeEffect>();
	}
};
DUMPER7_ASSERTS_UHostilePlayerAttitudeEffect;

// Class Smuta.HumanMatrixSpawner
// 0x00D8 (0x03F0 - 0x0318)
class AHumanMatrixSpawner : public AMatrixSpawnerBase
{
public:
	class ACityManager*                           OwnerManager;                                      // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHumanPOIState                                StatePOI;                                          // 0x0320(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EHumanRoleType, struct FMatrixDialogues> RoleDialogues;                                     // 0x0328(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EPlaceResidence                               PlaceOfResidence;                                  // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMatrixReactions*>               ReactionsOnPlayer;                                 // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EHumanType                                    HumanType;                                         // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EDayNightState                                DayNightState;                                     // 0x0391(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_392[0x6];                                      // 0x0392(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMatrixDataAsset*>               HumanSpawnData;                                    // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	class AWorkHumanPOI*                          PlaceOfWork;                                       // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          IsStatic;                                          // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EHumanRoleType                                Profession;                                        // 0x03B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B2[0x6];                                      // 0x03B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASpeakerHumanPOI*                       SpeakerCompanion;                                  // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          TestTired;                                         // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActionHumanPOI*                        UsedPOI;                                           // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EHumanRoleType                                HumanRoleType;                                     // 0x03D0(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EHumanAnimState                               AnimState;                                         // 0x03D1(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EHumanWorkState                               WorkState;                                         // 0x03D2(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EHumanRestState                               RestState;                                         // 0x03D3(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMatrixDialogue*>                SmallTalkDialogues;                                // 0x03D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class ADefaultCharacter*                      User;                                              // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class UMatrixDialogue* FilterDialogue(EHumanRoleType FirstCharType, EHumanRoleType SecondCharType, EGenderType FirstCharGender, EGenderType SecondCharGender, const TArray<class UMatrixDialogue*>& Dialogues);
	struct FReactionsToPlayer GetCorrectReaction(EPlaceResidence PlaceResidence, EGenderType GenderNPC, const TArray<class UMatrixReactions*>& Reactions, EFraction PlayerFraction);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HumanMatrixSpawner")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HumanMatrixSpawner")
	}
	static class AHumanMatrixSpawner* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHumanMatrixSpawner>();
	}
};
DUMPER7_ASSERTS_AHumanMatrixSpawner;

// Class Smuta.ZastavaPOI
// 0x0048 (0x02E0 - 0x0298)
class AZastavaPOI final : public AActor
{
public:
	EZastavaPOIState                              StatePOI;                                          // 0x0298(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UZastavaActionData*                     ActionData;                                        // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBillboardComponent*                    BillboardComponent;                                // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                        SceneComponent;                                    // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBillboardComponent*                    Point;                                             // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrowComponent*                        Arrow;                                             // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrowComponent*                        AnimDirection;                                     // 0x02C8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBillboardComponent*                    Status;                                            // 0x02D0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADefaultCharacter*                      User;                                              // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ZastavaPOI")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ZastavaPOI")
	}
	static class AZastavaPOI* GetDefaultObj()
	{
		return GetDefaultObjImpl<AZastavaPOI>();
	}
};
DUMPER7_ASSERTS_AZastavaPOI;

// Class Smuta.Indoor
// 0x0050 (0x02E8 - 0x0298)
class AIndoor final : public AActor
{
public:
	class FString                                 ZoneName;                                          // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                          ZoneCollision;                                     // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>    EffectsInside;                                     // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bPlayerInside;                                     // 0x02C0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextRenderComponent*                   NameVisual;                                        // 0x02C8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilitySystemComponent*                AbilitySystemComponent;                            // 0x02D0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D8[0x10];                                     // 0x02D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleLevelChanging();
	void OnPlayerEnters(class APawn* PlayerPawn);
	void OnPlayerLeaves(class APawn* PlayerPawn);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Indoor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Indoor")
	}
	static class AIndoor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIndoor>();
	}
};
DUMPER7_ASSERTS_AIndoor;

// Class Smuta.InGameHintTrackerData
// 0x0000 (0x0028 - 0x0028)
class UInGameHintTrackerData : public UObject
{
public:
	void BP_OnInitialize();

	bool BP_IsValidData() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InGameHintTrackerData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InGameHintTrackerData")
	}
	static class UInGameHintTrackerData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInGameHintTrackerData>();
	}
};
DUMPER7_ASSERTS_UInGameHintTrackerData;

// Class Smuta.ZastavaActionData
// 0x00A8 (0x00D8 - 0x0030)
class UZastavaActionData final : public UDataAsset
{
public:
	class UAnimMontage*                           Animation;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            RightHandEquipment;                                // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                R_LocOffset;                                       // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               R_RotOffset;                                       // 0x0058(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                R_ScaleDeformation;                                // 0x0070(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            LeftHandEquipment;                                 // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                L_LocOffset;                                       // 0x0090(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               L_RotOffset;                                       // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                L_ScaleDeformation;                                // 0x00C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ZastavaActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ZastavaActionData")
	}
	static class UZastavaActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UZastavaActionData>();
	}
};
DUMPER7_ASSERTS_UZastavaActionData;

// Class Smuta.InGameHintTrackerWidget
// 0x0040 (0x0300 - 0x02C0)
class alignas(0x10) UInGameHintTrackerWidget : public UUserWidget
{
public:
	uint8                                         Pad_2C0[0x10];                                     // 0x02C0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UInGameHintTrackerData*>         ObjectsArray;                                      // 0x02D0(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UInGameHintTrackerData*                 CurrentlyProcessingData;                           // 0x02E0(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E8[0x18];                                     // 0x02E8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddToQueue(class UInGameHintTrackerData* Data);
	bool BP_IsQueueAvailable();
	void BP_OnHintFinished(class UInGameHintTrackerData* Data);
	void BP_RunHint(class UInGameHintTrackerData* Data);
	void BP_StopCurrentHint();
	void CommitHint();
	bool ProcessQueue();
	void StopProcessingQueue();

	bool IsBusy() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InGameHintTrackerWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InGameHintTrackerWidget")
	}
	static class UInGameHintTrackerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInGameHintTrackerWidget>();
	}
};
DUMPER7_ASSERTS_UInGameHintTrackerWidget;

// Class Smuta.IngameHUD
// 0x0000 (0x0388 - 0x0388)
class AIngameHUD : public AHUD
{
public:
	void CloseHint(const class FName& HintName);
	void ShowComboHint(const class FName& HintName, const class UTutorialComboHintContent* HintContent);
	void ShowNonBlockingHint(const class FName& HintName, const class UTutorialNonBlockingHintContent* HintContent);
	void ShowPopupHint(const class FName& HintName, const class UTutorialBasePopupHintContent* HintContent);
	void ShowTagEventComboHint(const class FName& HintName, const class UTutorialTagEventComboContent* HintContent);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("IngameHUD")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"IngameHUD")
	}
	static class AIngameHUD* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIngameHUD>();
	}
};
DUMPER7_ASSERTS_AIngameHUD;

// Class Smuta.SprintEffect
// 0x0000 (0x0A70 - 0x0A70)
class USprintEffect final : public UGameplayEffect
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SprintEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SprintEffect")
	}
	static class USprintEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<USprintEffect>();
	}
};
DUMPER7_ASSERTS_USprintEffect;

// Class Smuta.InteractionActivateAbility
// 0x0008 (0x0030 - 0x0028)
class UInteractionActivateAbility final : public UInteraction
{
public:
	TSubclassOf<class UGameplayAbility>           Ability;                                           // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InteractionActivateAbility")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InteractionActivateAbility")
	}
	static class UInteractionActivateAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInteractionActivateAbility>();
	}
};
DUMPER7_ASSERTS_UInteractionActivateAbility;

// Class Smuta.InvestigationArea
// 0x0218 (0x04B0 - 0x0298)
class AInvestigationArea : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	EEvidenceState                                State;                                             // 0x02A0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            AreaEffectClass;                                   // 0x02A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AEvidenceBase*>                  EvidencePoints;                                    // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TArray<class AEvidenceBase*>                  AdditionalEvidencePoints;                          // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TArray<class AMainSupportBase*>               SupportEvidencePoints;                             // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TArray<class AEvidenceBase*>                  CurrentEvidencePoints;                             // 0x02E0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TArray<class AEvidenceBase*>                  CurrentAdditionalPoints;                           // 0x02F0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	int32                                         EvidenceCount;                                     // 0x0300(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AdditionalEvidenceCount;                           // 0x0304(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AEvidenceBase*                          ImportantEvidence;                                 // 0x0308(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentEvidenceCount;                              // 0x0310(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentAdditionalCount;                            // 0x0314(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(EEvidenceState State)> OnInvestigationStateChanged;                // 0x0318(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool Overlaped, const struct FVector& Location)> OnInvestigationActiveOnCompass; // 0x0328(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool Active, class AActor* InvestigationArea, float Radius)> OnInvestigationActiveOnMap; // 0x0338(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnActivatedAdditionalEvidences;                    // 0x0348(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UBillboardComponent*                    Billboard;                                         // 0x0358(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                        SceneComponent;                                    // 0x0360(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                       SphereBorder;                                      // 0x0368(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInvestigationAreaMarker*               InvestigationAreaMarker;                           // 0x0370(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          HasStartInnerVoice;                                // 0x0378(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          HasFinishInnerVoice;                               // 0x0379(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          IsDeactivateOnOverlapped;                          // 0x037A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          BreakVoice;                                        // 0x037B(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          HasAdditionalInnerVoice;                           // 0x037C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          VisibleOnMap;                                      // 0x037D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          WithAdditionalEvidence;                            // 0x037E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          WithImportantEvidence;                             // 0x037F(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          WithSupportEvidence;                               // 0x0380(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSubtitlesInfo                         StartAreaInnerInfo;                                // 0x0388(0x0038)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundWave>              StartAreaInnerVoice;                               // 0x03C0(0x0028)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSubtitlesInfo                         FinishAreaInnerInfo;                               // 0x03E8(0x0038)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundWave>              FinishAreaInnerVoice;                              // 0x0420(0x0028)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSubtitlesInfo                         AdditionalAreaInnerInfo;                           // 0x0448(0x0038)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundWave>              AdditionalAreaInnerVoice;                          // 0x0480(0x0028)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          IsPlayStartInner;                                  // 0x04A8(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ActivateInvestigation();
	void AddInvestigationEffect();
	void BeginOverlapped(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ChangeInvestigationState(EEvidenceState NewState);
	void DeactivateInvestigation();
	void ForceActivateInvestigation();
	void OnAdditionalEvidenceChanged(class AEvidenceBase* InstigatorActor, EEvidenceState NewState);
	void OnEvidenceChanged(class AEvidenceBase* InstigatorActor, EEvidenceState NewState);
	void RemoveInvestigationEffect();
	void StartInvestigation(bool ForceActiveArea);
	void StartupOnMap();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InvestigationArea")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InvestigationArea")
	}
	static class AInvestigationArea* GetDefaultObj()
	{
		return GetDefaultObjImpl<AInvestigationArea>();
	}
};
DUMPER7_ASSERTS_AInvestigationArea;

// Class Smuta.TeaseActionData
// 0x0050 (0x0080 - 0x0030)
class UTeaseActionData final : public UBaseActionData
{
public:
	TMap<class UEquipmentData*, struct FTeaseActionMontages> Montages;                               // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TeaseActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TeaseActionData")
	}
	static class UTeaseActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTeaseActionData>();
	}
};
DUMPER7_ASSERTS_UTeaseActionData;

// Class Smuta.InvestigationAreaMarker
// 0x0020 (0x0710 - 0x06F0)
class UInvestigationAreaMarker final : public UWidgetComponent
{
public:
	TSubclassOf<class UUserWidget>                MarkerWidgetClass;                                 // 0x06E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              MinMaxDistanceToShow;                              // 0x06F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LookAngleToShow;                                   // 0x0700(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_704[0xC];                                      // 0x0704(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleStateChanged(EEvidenceState State);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InvestigationAreaMarker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InvestigationAreaMarker")
	}
	static class UInvestigationAreaMarker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInvestigationAreaMarker>();
	}
};
DUMPER7_ASSERTS_UInvestigationAreaMarker;

// Class Smuta.CarouselItemData
// 0x0000 (0x0028 - 0x0028)
class UCarouselItemData : public UObject
{
public:
	void BP_OnInitialize();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CarouselItemData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CarouselItemData")
	}
	static class UCarouselItemData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCarouselItemData>();
	}
};
DUMPER7_ASSERTS_UCarouselItemData;

// Class Smuta.SupportItem
// 0x0010 (0x02A8 - 0x0298)
class ASupportItem final : public AActor
{
public:
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SupportItem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SupportItem")
	}
	static class ASupportItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASupportItem>();
	}
};
DUMPER7_ASSERTS_ASupportItem;

// Class Smuta.CarouselItemDataCycleArrayContainer
// 0x0028 (0x0050 - 0x0028)
class UCarouselItemDataCycleArrayContainer final : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCarouselItemData*>              ArrayBuffer;                                       // 0x0040(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

public:
	void ClearContainer();
	void InitializeContainer(const TArray<class UCarouselItemData*>& Elements, int32 InMinElementsToClose);
	bool PushToContainer(class UCarouselItemData* Element);
	bool RemoveCurrentFromContainer();
	class UCarouselItemData* ToItemAtDirection(int32 DirectionTimes, bool* bSuccess);
	class UCarouselItemData* ToNextItem(bool* bSuccess);
	class UCarouselItemData* ToPreviousItem(bool* bSuccess);

	int32 CountElementsInContainer() const;
	class UCarouselItemData* GetCurrentItem(bool* bSuccess) const;
	class UCarouselItemData* GetItemAtDirection(int32 DirectionTimes, bool* bSuccess) const;
	int32 GetMinElementsToClose() const;
	class UCarouselItemData* GetNextItem(bool* bSuccess) const;
	class UCarouselItemData* GetPreviousItem(bool* bSuccess) const;
	bool HasItemAtDirection(int32 DirectionTimes) const;
	bool HasNextItem() const;
	bool HasPreviousItem() const;
	bool IsAtHead() const;
	bool IsAtTail() const;
	bool IsClosedContainer() const;
	bool IsEmptyContainer() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CarouselItemDataCycleArrayContainer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CarouselItemDataCycleArrayContainer")
	}
	static class UCarouselItemDataCycleArrayContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCarouselItemDataCycleArrayContainer>();
	}
};
DUMPER7_ASSERTS_UCarouselItemDataCycleArrayContainer;

// Class Smuta.ItemsCarouselWidget
// 0x0010 (0x02D0 - 0x02C0)
class UItemsCarouselWidget : public UUserWidget
{
public:
	class UCarouselItemDataCycleArrayContainer*   ItemsDataCycleArray;                               // 0x02C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnRotation();
	void CommitRotation();
	void InitializeCarouselData(const TArray<class UCarouselItemData*>& CarouselItemDataArray, int32 MinElements);
	void Rotate(int32 DirectionTimes);

	class UCarouselItemData* GetCurrentItemData(bool* bSuccess) const;
	class UCarouselItemData* GetItemDataAtDirection(int32 DirectionTimes, bool* bSuccess) const;
	class UCarouselItemData* GetNextItemData(bool* bSuccess) const;
	int32 GetPendingRotationDirectionTimes() const;
	class UCarouselItemData* GetPreviousItemData(bool* bSuccess) const;
	bool HasItemAtDirection(int32 DirectionTimes) const;
	bool HasNextItem() const;
	bool HasPreviousItem() const;
	bool IsRotating() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ItemsCarouselWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ItemsCarouselWidget")
	}
	static class UItemsCarouselWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemsCarouselWidget>();
	}
};
DUMPER7_ASSERTS_UItemsCarouselWidget;

// Class Smuta.SpeakerHumanPOI
// 0x0018 (0x02E8 - 0x02D0)
class ASpeakerHumanPOI : public AHumanPOI
{
public:
	class AWorkHumanPOI*                          OwnerPOI;                                          // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AHumanMatrixSpawner*                    OwnerStaticPOI;                                    // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActionWorkPOI*                         OwnerActionPOI;                                    // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpeakerHumanPOI")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpeakerHumanPOI")
	}
	static class ASpeakerHumanPOI* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASpeakerHumanPOI>();
	}
};
DUMPER7_ASSERTS_ASpeakerHumanPOI;

// Class Smuta.KickActionData
// 0x0050 (0x0080 - 0x0030)
class UKickActionData final : public UBaseActionData
{
public:
	TMap<class UEquipmentData*, struct FKickActionMontages> Montages;                                // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("KickActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"KickActionData")
	}
	static class UKickActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKickActionData>();
	}
};
DUMPER7_ASSERTS_UKickActionData;

// Class Smuta.LandedEffect
// 0x0000 (0x0A70 - 0x0A70)
class ULandedEffect : public UGameplayEffect
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LandedEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LandedEffect")
	}
	static class ULandedEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULandedEffect>();
	}
};
DUMPER7_ASSERTS_ULandedEffect;

// Class Smuta.TargetPrioritizationComponent
// 0x00B8 (0x0158 - 0x00A0)
class UTargetPrioritizationComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x20];                                      // 0x00A0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTargetPrioritySettingsWrapper         TargetPrioritySettings;                            // 0x00C0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                         ScaryOfActorsUpdateRate;                           // 0x00D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_DC[0x7C];                                      // 0x00DC(0x007C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPerceptionSightHostileLost(class AActor* Actor);
	void OnPerceptionSightHostileSensed(class AActor* Actor);
	void OnPerceptionSightLost(class AActor* Actor);
	void OnPerceptionSightNonHostileLost(class AActor* Actor);
	void OnPerceptionSightNonHostileSensed(class AActor* Actor);
	void OnPerceptionSightScaryOfLost(class AActor* Actor);
	void OnPerceptionSightScaryOfSensed(class AActor* Actor);
	void OnPerceptionSightSensed(class AActor* Actor, const struct FAIStimulus& InStimulus);
	void OnScaryOfActorTagChanged(class UAbilitySystemComponent* ASC, const struct FGameplayTag& UpdatedTag, bool Exists);
	void OnSensedHostileDead(class ADefaultCharacter* InActor);

	void K2_GetPerceivedPrioritizedHostileActors(TArray<class AActor*>* OutActors) const;
	TArray<class AActor*> RetrieveHostileActors() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetPrioritizationComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetPrioritizationComponent")
	}
	static class UTargetPrioritizationComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetPrioritizationComponent>();
	}
};
DUMPER7_ASSERTS_UTargetPrioritizationComponent;

// Class Smuta.LevelUpInfo
// 0x0010 (0x0040 - 0x0030)
class ULevelUpInfo final : public UDataAsset
{
public:
	TArray<struct FYuraLevelUpInfo>               LevelUpInformation;                                // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LevelUpInfo")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LevelUpInfo")
	}
	static class ULevelUpInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULevelUpInfo>();
	}
};
DUMPER7_ASSERTS_ULevelUpInfo;

// Class Smuta.SupportEvidenceBase
// 0x0030 (0x03C8 - 0x0398)
class ASupportEvidenceBase : public AEvidenceBase
{
public:
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0398(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x03A0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESupportEvidenceType                          Type;                                              // 0x03A8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            EvidenceStatic;                                    // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMesh*                          EvidenceSkeletal;                                  // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                        EvidenceAnimation;                                 // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SupportEvidenceBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SupportEvidenceBase")
	}
	static class ASupportEvidenceBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASupportEvidenceBase>();
	}
};
DUMPER7_ASSERTS_ASupportEvidenceBase;

// Class Smuta.TutorialBoxTrigger
// 0x0010 (0x02A8 - 0x0298)
class ATutorialBoxTrigger final : public AActor
{
public:
	class UBoxComponent*                          CollisionComponent;                                // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   HintName;                                          // 0x02A0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialBoxTrigger")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialBoxTrigger")
	}
	static class ATutorialBoxTrigger* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATutorialBoxTrigger>();
	}
};
DUMPER7_ASSERTS_ATutorialBoxTrigger;

// Class Smuta.LockingSupportBase
// 0x0008 (0x03D0 - 0x03C8)
class ALockingSupportBase final : public ASupportEvidenceBase
{
public:
	class AMainSupportBase*                       SupportEvidence;                                   // 0x03C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LockingSupportBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LockingSupportBase")
	}
	static class ALockingSupportBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALockingSupportBase>();
	}
};
DUMPER7_ASSERTS_ALockingSupportBase;

// Class Smuta.LowHpEffect
// 0x0000 (0x0A70 - 0x0A70)
class ULowHpEffect final : public UGameplayEffect
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LowHpEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LowHpEffect")
	}
	static class ULowHpEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULowHpEffect>();
	}
};
DUMPER7_ASSERTS_ULowHpEffect;

// Class Smuta.TimeDilationEffectComponent
// 0x0008 (0x0030 - 0x0028)
class UTimeDilationEffectComponent final : public UGameplayEffectComponent
{
public:
	float                                         GlobalTimeDilation;                                // 0x0028(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PlayerTimeDilation;                                // 0x002C(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TimeDilationEffectComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TimeDilationEffectComponent")
	}
	static class UTimeDilationEffectComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTimeDilationEffectComponent>();
	}
};
DUMPER7_ASSERTS_UTimeDilationEffectComponent;

// Class Smuta.MainCameraManager
// 0x01E0 (0x25A0 - 0x23C0)
class AMainCameraManager : public APlayerCameraManager
{
public:
	struct FTimeline                              CameraBlendTimeline;                               // 0x23C0(0x0098)(ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UCameraModeData*                        CurrentCameraMode;                                 // 0x2458(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCameraModeSetup>               CameraModesOnTags;                                 // 0x2460(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         CameraFOVModifier;                                 // 0x2470(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2474[0x4];                                     // 0x2474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            ZoomCurve;                                         // 0x2478(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2480[0x8];                                     // 0x2480(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeline                              ZoomTimeline;                                      // 0x2488(0x0098)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_2520[0x70];                                    // 0x2520(0x0070)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneCaptureComponent2D*               CaptureComponent;                                  // 0x2590(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2598[0x8];                                     // 0x2598(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CameraBlendUpdate();
	void ChangeCurrentCameraModeForModeQuery(const struct FGameplayTag& MatchingTag, const class UCameraModeData* CameraModeData);
	void PawnTagUpdated(const struct FGameplayTag& UpdatedTag, bool Exists);
	void SetCameraFOVModifier(float NewFOVModifier);
	void SetCameraMode(const class UCameraModeData* CameraModeData);
	void UpdateCameraZoomCorrection();

	bool GetIsLowSettings() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MainCameraManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MainCameraManager")
	}
	static class AMainCameraManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMainCameraManager>();
	}
};
DUMPER7_ASSERTS_AMainCameraManager;

// Class Smuta.MainGameMode
// 0x0048 (0x0380 - 0x0338)
class AMainGameMode : public AGameModeBase
{
public:
	TMulticastInlineDelegate<void()>              OnLevelsChanged;                                   // 0x0338(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_348[0x28];                                     // 0x0348(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UInputMappingPreset*>            InputPresets;                                      // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static void LevelTravelToStart(const class UObject* WorldContext, const TSoftObjectPtr<class UWorld>& LevelToOpen, const TSoftObjectPtr<class AActor>& PlayerStart);

	void SetInputMappings(const class UObject* WorldContext, TSet<class UInputMappingContext*>& InputMappings) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MainGameMode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MainGameMode")
	}
	static class AMainGameMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMainGameMode>();
	}
};
DUMPER7_ASSERTS_AMainGameMode;

// Class Smuta.TutorialBaseWidget
// 0x0060 (0x0470 - 0x0410)
class UTutorialBaseWidget : public UCommonActivatableWidget
{
public:
	class FName                                   HintName;                                          // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         AutoCloseTimeAccum;                                // 0x0418(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_41C[0x54];                                     // 0x041C(0x0054)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CloseHint();
	void DeactivateHint();
	void FillOut();
	class URichTextBlock* GetHintTextContainer();
	void OnHintClosed();

	const class FName GetHintName() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialBaseWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialBaseWidget")
	}
	static class UTutorialBaseWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialBaseWidget>();
	}
};
DUMPER7_ASSERTS_UTutorialBaseWidget;

// Class Smuta.TagEventComboWidget
// 0x0028 (0x0498 - 0x0470)
class UTagEventComboWidget : public UTutorialBaseWidget
{
public:
	class UTutorialTagEventComboContent*          Content;                                           // 0x0470(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CurrentActionIndex;                                // 0x0478(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_47C[0x1C];                                     // 0x047C(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class FName GetInputKey(class UInputAction* InputAction);
	void OnCleanup();
	void OnComboFailed();
	void OnComboFinished();
	void OnComboRestarted();
	void OnComboSuccess();
	void OnProgressCombo();
	void RefreshWidget();
	void SetComboRestarted();
	void SetContent(const class FName& InHintName, const class UTutorialTagEventComboContent* InContent);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TagEventComboWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TagEventComboWidget")
	}
	static class UTagEventComboWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTagEventComboWidget>();
	}
};
DUMPER7_ASSERTS_UTagEventComboWidget;

// Class Smuta.MainPlayerController
// 0x0048 (0x08A0 - 0x0858)
class AMainPlayerController : public APlayerController
{
public:
	TMulticastInlineDelegate<void(bool bNewCameraLock)> OnCameraLockChanged;                         // 0x0858(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnReleasedActionInputs;                            // 0x0868(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            EndBattleHungerEffect;                             // 0x0878(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeaveCombatDelayTime;                              // 0x0880(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxCameraRotationPerSec;                           // 0x0884(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_888[0x10];                                     // 0x0888(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class USmutaGameUserSettings>  UserSettings;                                      // 0x0898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_FlushInput();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MainPlayerController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MainPlayerController")
	}
	static class AMainPlayerController* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMainPlayerController>();
	}
};
DUMPER7_ASSERTS_AMainPlayerController;

// Class Smuta.MainSupportBase
// 0x0088 (0x0450 - 0x03C8)
class AMainSupportBase final : public ASupportEvidenceBase
{
public:
	TMulticastInlineDelegate<void(class AEvidenceBase* InstigatorActor, ESupportEvidenceStatus Status)> OnSupportStateChanged; // 0x03C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnSupportLocked;                                   // 0x03D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	ESupportEvidenceStatus                        SupportStatus;                                     // 0x03E8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EUnlockingEvent                               UnlockingEvent;                                    // 0x03E9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3EA[0x6];                                      // 0x03EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSubtitlesInfo                         LockedInnerInfo;                                   // 0x03F0(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundWave>              LockedInnerVoice;                                  // 0x0428(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void PushEvidance();
	void UnlockSupport();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MainSupportBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MainSupportBase")
	}
	static class AMainSupportBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMainSupportBase>();
	}
};
DUMPER7_ASSERTS_AMainSupportBase;

// Class Smuta.TutorialBaseContent
// 0x0150 (0x0178 - 0x0028)
class UTutorialBaseContent : public UObject
{
public:
	class FText                                   HintCategory;                                      // 0x0028(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   ArticleDisplayName;                                // 0x0040(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bShowHintInCodex;                                  // 0x0058(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoClose;                                        // 0x0059(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AutoCloseTime;                                     // 0x005C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    MainCloseInputAction;                              // 0x0060(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FDataTableRowHandle>            AdditionalCloseInputActions;                       // 0x0070(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideWidget;                                   // 0x0080(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   OverrideWidgetClass;                               // 0x0088(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bImportToCodexByArticleId;                         // 0x00B0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CodexArticles;                                     // 0x00B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideCodexArticleName;                         // 0x00C8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ArticleName;                                       // 0x00D0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bOverrideCodexArticleText;                         // 0x00E8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ArticleText;                                       // 0x00F0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   GamepadArticleText;                                // 0x0108(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bOverrideVisualContent;                            // 0x0120(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseVideoContent;                                  // 0x0121(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              ArticleImage;                                      // 0x0128(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMediaSource>            ArticleVideo;                                      // 0x0150(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	bool IsMainCloseInputActionValid() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialBaseContent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialBaseContent")
	}
	static class UTutorialBaseContent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialBaseContent>();
	}
};
DUMPER7_ASSERTS_UTutorialBaseContent;

// Class Smuta.MapChangeZone
// 0x0030 (0x02C8 - 0x0298)
class AMapChangeZone final : public AActor
{
public:
	class UBoxComponent*                          BoxCollision;                                      // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AWorldMapBorderActor>    MapBorderActor;                                    // 0x02A0(0x0028)(Edit, BlueprintVisible, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MapChangeZone")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MapChangeZone")
	}
	static class AMapChangeZone* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMapChangeZone>();
	}
};
DUMPER7_ASSERTS_AMapChangeZone;

// Class Smuta.MapTextMarker
// 0x0048 (0x02E0 - 0x0298)
class AMapTextMarker final : public AActor
{
public:
	class FText                                   Text;                                              // 0x0298(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                         StringWidth;                                       // 0x02B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFont*                                  Font;                                              // 0x02B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FontSize;                                          // 0x02C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x02C4(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Angle;                                             // 0x02D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCyberiaMapComponent*                   MapComponent;                                      // 0x02D8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MapTextMarker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MapTextMarker")
	}
	static class AMapTextMarker* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMapTextMarker>();
	}
};
DUMPER7_ASSERTS_AMapTextMarker;

// Class Smuta.TutorialNonBlockingWidget
// 0x0008 (0x0478 - 0x0470)
class UTutorialNonBlockingWidget : public UTutorialBaseWidget
{
public:
	class UTutorialNonBlockingHintContent*        Content;                                           // 0x0470(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void SetContent(const class FName& InHintName, const class UTutorialNonBlockingHintContent* InContent);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialNonBlockingWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialNonBlockingWidget")
	}
	static class UTutorialNonBlockingWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialNonBlockingWidget>();
	}
};
DUMPER7_ASSERTS_UTutorialNonBlockingWidget;

// Class Smuta.MatrixActionDataAsset
// 0x00A8 (0x00D8 - 0x0030)
class UMatrixActionDataAsset final : public UDataAsset
{
public:
	class UAnimMontage*                           Animation;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            RightHandEquipment;                                // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                R_LocOffset;                                       // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               R_RotOffset;                                       // 0x0058(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                R_ScaleDeformation;                                // 0x0070(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            LeftHandEquipment;                                 // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                L_LocOffset;                                       // 0x0090(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               L_RotOffset;                                       // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                L_ScaleDeformation;                                // 0x00C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatrixActionDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatrixActionDataAsset")
	}
	static class UMatrixActionDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatrixActionDataAsset>();
	}
};
DUMPER7_ASSERTS_UMatrixActionDataAsset;

// Class Smuta.MatrixDataAsset
// 0x0060 (0x0090 - 0x0030)
class UMatrixDataAsset final : public UDataAsset
{
public:
	class USkeletalMesh*                          MatrixMesh;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          MatrixHead;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAnimInstance>              MatrixAnimInstance;                                // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFraction                                     Fraction;                                          // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AAIController>              MatrixAIController;                                // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGenderType                                   Gender;                                            // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequence*>                  IdleAnimations;                                    // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  WalkAnimations;                                    // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         WalkSpeed;                                         // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RunSpeed;                                          // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HuntSpeed;                                         // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ApplyMatrixDataAsset(class ADefaultCharacter* Character, class UMatrixDataAsset* DataAsset);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatrixDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatrixDataAsset")
	}
	static class UMatrixDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatrixDataAsset>();
	}
};
DUMPER7_ASSERTS_UMatrixDataAsset;

// Class Smuta.TutorialComboItemObject
// 0x0028 (0x0050 - 0x0028)
class UTutorialComboItemObject final : public UObject
{
public:
	struct FDataTableRowHandle                    ComboInputAction;                                  // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	ETutorialComboItemState                       State;                                             // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnComboItemStateChanged;                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void SetState(ETutorialComboItemState InState);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialComboItemObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialComboItemObject")
	}
	static class UTutorialComboItemObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialComboItemObject>();
	}
};
DUMPER7_ASSERTS_UTutorialComboItemObject;

// Class Smuta.MatrixDialogue
// 0x0018 (0x0048 - 0x0030)
class UMatrixDialogue final : public UDataAsset
{
public:
	EHumanRoleType                                WorkerType;                                        // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHumanRoleType                                CompanionType;                                     // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGenderType                                   WorkerGender;                                      // 0x0032(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGenderType                                   CompanionGender;                                   // 0x0033(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMatrixPhrasesData>             Dialogue;                                          // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatrixDialogue")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatrixDialogue")
	}
	static class UMatrixDialogue* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatrixDialogue>();
	}
};
DUMPER7_ASSERTS_UMatrixDialogue;

// Class Smuta.MatrixProfDataAsset
// 0x00A8 (0x00D8 - 0x0030)
class UMatrixProfDataAsset final : public UDataAsset
{
public:
	class UAnimMontage*                           Animation;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            RightHandEquipment;                                // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                R_LocOffset;                                       // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               R_RotOffset;                                       // 0x0058(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                R_ScaleDeformation;                                // 0x0070(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            LeftHandEquipment;                                 // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                L_LocOffset;                                       // 0x0090(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               L_RotOffset;                                       // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                L_ScaleDeformation;                                // 0x00C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatrixProfDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatrixProfDataAsset")
	}
	static class UMatrixProfDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatrixProfDataAsset>();
	}
};
DUMPER7_ASSERTS_UMatrixProfDataAsset;

// Class Smuta.TransferEffectComponent
// 0x0010 (0x0038 - 0x0028)
class UTransferEffectComponent : public UGameplayEffectComponent
{
public:
	TArray<struct FTransferEffectData>            TransferEffectsData;                               // 0x0028(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TransferEffectComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TransferEffectComponent")
	}
	static class UTransferEffectComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTransferEffectComponent>();
	}
};
DUMPER7_ASSERTS_UTransferEffectComponent;

// Class Smuta.TransferToTargetEffectComponent
// 0x0000 (0x0038 - 0x0038)
class UTransferToTargetEffectComponent final : public UTransferEffectComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TransferToTargetEffectComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TransferToTargetEffectComponent")
	}
	static class UTransferToTargetEffectComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTransferToTargetEffectComponent>();
	}
};
DUMPER7_ASSERTS_UTransferToTargetEffectComponent;

// Class Smuta.MatrixReactions
// 0x0018 (0x0048 - 0x0030)
class UMatrixReactions final : public UDataAsset
{
public:
	EPlaceResidence                               PlaceOfResidence;                                  // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGenderType                                   GenderNPC;                                         // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FReactionsToPlayer>             Reactions;                                         // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatrixReactions")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatrixReactions")
	}
	static class UMatrixReactions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatrixReactions>();
	}
};
DUMPER7_ASSERTS_UMatrixReactions;

// Class Smuta.MiniMapCompassWidget
// 0x0000 (0x02C0 - 0x02C0)
class UMiniMapCompassWidget final : public UUserWidget
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MiniMapCompassWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MiniMapCompassWidget")
	}
	static class UMiniMapCompassWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMiniMapCompassWidget>();
	}
};
DUMPER7_ASSERTS_UMiniMapCompassWidget;

// Class Smuta.RemoveGameplayEffectStackComponent
// 0x0008 (0x0040 - 0x0038)
class URemoveGameplayEffectStackComponent final : public URemoveOtherGameplayEffectComponent
{
public:
	int32                                         StacksToRemove;                                    // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RemoveGameplayEffectStackComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RemoveGameplayEffectStackComponent")
	}
	static class URemoveGameplayEffectStackComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<URemoveGameplayEffectStackComponent>();
	}
};
DUMPER7_ASSERTS_URemoveGameplayEffectStackComponent;

// Class Smuta.MiscFunctions
// 0x0000 (0x0028 - 0x0028)
class UMiscFunctions final : public UBlueprintFunctionLibrary
{
public:
	static void DrawFoliageCollision(class UObject* WorldContextObject, const struct FVector& CenterPosition, float Radius);
	static const class FString EnumToString(const class FString& Enum, int32 EnumValue);
	static bool EquallySoftObjectReferenceByName(const TSoftObjectPtr<class UObject>& A, const TSoftObjectPtr<class UObject>& B);
	static bool GetSurfaceSound(class UDataTable* SurfaceSoundsTable, const class FName& SoundTypeName, EPhysicalSurface Surface, class USoundBase** OutSound);
	static void GetSystemInfo(struct FPCSystemInfo* SystemInfo);
	static void LogError(const class FString& ErrorMessage);
	static TArray<class FString> MyGetStreamingLevels(class UObject* WorldContextObject, bool* Success);
	static class UActorComponent* ResolveComponentReference(const struct FSoftComponentReference& ComponentReference);
	static const int32 StringToEnum(const class FString& Enum, const class FString& EnumString);
	static int32 WorldPositionToScreenHorizontal(const class APlayerController* Controller, const struct FVector& WorldPosition);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MiscFunctions")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MiscFunctions")
	}
	static class UMiscFunctions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMiscFunctions>();
	}
};
DUMPER7_ASSERTS_UMiscFunctions;

// Class Smuta.MiscThreadSafeFunctions
// 0x0000 (0x0028 - 0x0028)
class UMiscThreadSafeFunctions final : public UBlueprintFunctionLibrary
{
public:
	static struct FVector GetAngularVelocityInDegrees(const class UPrimitiveComponent* Component);
	static const struct FVector GetFloorNormalFromFindFloor(const struct FFindFloorResult& FloorResult);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MiscThreadSafeFunctions")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MiscThreadSafeFunctions")
	}
	static class UMiscThreadSafeFunctions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMiscThreadSafeFunctions>();
	}
};
DUMPER7_ASSERTS_UMiscThreadSafeFunctions;

// Class Smuta.UpgradesDataAsset
// 0x0050 (0x0080 - 0x0030)
class UUpgradesDataAsset final : public UDataAsset
{
public:
	TMap<EUpgradeType, struct FStatUpgradesInfo>  Upgrades;                                          // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UpgradesDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UpgradesDataAsset")
	}
	static class UUpgradesDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUpgradesDataAsset>();
	}
};
DUMPER7_ASSERTS_UUpgradesDataAsset;

// Class Smuta.MovableActorBase
// 0x0098 (0x0330 - 0x0298)
class AMovableActorBase final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InteractionRadius;                                 // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   InteractTextToCapture;                             // 0x02A8(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   InteractTextToDrop;                                // 0x02C0(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                   AttachToSocket;                                    // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AMovableSafeZone>        SafeZone;                                          // 0x02E0(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   MeshComponent;                                     // 0x0308(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionComponent*                  Interaction;                                       // 0x0310(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                       InteractionSphere;                                 // 0x0318(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_320[0x10];                                     // 0x0320(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnInteract(class AActor* InteractedActor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovableActorBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovableActorBase")
	}
	static class AMovableActorBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMovableActorBase>();
	}
};
DUMPER7_ASSERTS_AMovableActorBase;

// Class Smuta.MovableObjectCapturedCondition
// 0x0030 (0x0088 - 0x0058)
class UMovableObjectCapturedCondition final : public UQuestStepCondition
{
public:
	TSoftObjectPtr<class AMovableActorBase>       MovableObject;                                     // 0x0058(0x0028)(Edit, SaveGame, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_80[0x8];                                       // 0x0080(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovableObjectCapturedCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovableObjectCapturedCondition")
	}
	static class UMovableObjectCapturedCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovableObjectCapturedCondition>();
	}
};
DUMPER7_ASSERTS_UMovableObjectCapturedCondition;

// Class Smuta.RingerZastava
// 0x0000 (0x0360 - 0x0360)
class ARingerZastava final : public ASpawnerPointZastava
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RingerZastava")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RingerZastava")
	}
	static class ARingerZastava* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARingerZastava>();
	}
};
DUMPER7_ASSERTS_ARingerZastava;

// Class Smuta.MovableObjectOnFinalLocationCondition
// 0x0080 (0x00D8 - 0x0058)
class UMovableObjectOnFinalLocationCondition final : public UQuestStepCondition
{
public:
	TSoftObjectPtr<class AMovableActorBase>       MovableObject;                                     // 0x0058(0x0028)(Edit, SaveGame, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          UseExplicitCoordinates;                            // 0x0080(0x0001)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FinalLocation;                                     // 0x0088(0x0018)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class AActor>                  FinalLocationActor;                                // 0x00A0(0x0028)(Edit, SaveGame, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         AcceptableRadius;                                  // 0x00C8(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_CC[0xC];                                       // 0x00CC(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovableObjectOnFinalLocationCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovableObjectOnFinalLocationCondition")
	}
	static class UMovableObjectOnFinalLocationCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovableObjectOnFinalLocationCondition>();
	}
};
DUMPER7_ASSERTS_UMovableObjectOnFinalLocationCondition;

// Class Smuta.MovableSafeZone
// 0x0008 (0x02A0 - 0x0298)
class AMovableSafeZone final : public AActor
{
public:
	class UBoxComponent*                          ZoneComponent;                                     // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovableSafeZone")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovableSafeZone")
	}
	static class AMovableSafeZone* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMovableSafeZone>();
	}
};
DUMPER7_ASSERTS_AMovableSafeZone;

// Class Smuta.RemoveEquipmentDlgEvent
// 0x0038 (0x0060 - 0x0028)
class URemoveEquipmentDlgEvent final : public UDlgEventCustom
{
public:
	TSoftObjectPtr<class AActor>                  Target;                                            // 0x0028(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipmentSlotType                            EquipmentSlotType;                                 // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor;                                       // 0x0058(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RemoveEquipmentDlgEvent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RemoveEquipmentDlgEvent")
	}
	static class URemoveEquipmentDlgEvent* GetDefaultObj()
	{
		return GetDefaultObjImpl<URemoveEquipmentDlgEvent>();
	}
};
DUMPER7_ASSERTS_URemoveEquipmentDlgEvent;

// Class Smuta.MovementStats
// 0x0020 (0x0050 - 0x0030)
class UMovementStats final : public UAttributeSet
{
public:
	struct FGameplayAttributeData                 MoveSpeed;                                         // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 RunSpeed;                                          // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

public:
	void OnRep_MoveSpeed(const struct FGameplayAttributeData& PreviousValue);
	void OnRep_RunSpeed(const struct FGameplayAttributeData& PreviousValue);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovementStats")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovementStats")
	}
	static class UMovementStats* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovementStats>();
	}
};
DUMPER7_ASSERTS_UMovementStats;

// Class Smuta.NarrativePhraseArea
// 0x0060 (0x02F8 - 0x0298)
class ANarrativePhraseArea final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bAutoSetupCollision;                               // 0x02A0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOverlapType                                  InteractionType;                                   // 0x02A1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A2[0x6];                                      // 0x02A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSubtitlesInfo                         SubtitlesInfo;                                     // 0x02A8(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class USoundWave*                             Sound;                                             // 0x02E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundAttenuation*                      SoundSettings;                                     // 0x02E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStartsEnabled;                                    // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoDeactivateCollision;                          // 0x02F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeactivated;                                      // 0x02F2(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F3[0x5];                                      // 0x02F3(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OverlapResponse(class AActor* OverlappedActor, class AActor* OtherActor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NarrativePhraseArea")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NarrativePhraseArea")
	}
	static class ANarrativePhraseArea* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANarrativePhraseArea>();
	}
};
DUMPER7_ASSERTS_ANarrativePhraseArea;

// Class Smuta.UBTDecorator_DistanceCheck
// 0x0020 (0x00C0 - 0x00A0)
class UUBTDecorator_DistanceCheck final : public UBTDecorator_BlueprintBase
{
public:
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bGetDataFromTraits;                                // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           SettingsDataTag;                                   // 0x00AC(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDistanceTraitsSetting*                 DistanceTraitsSetting;                             // 0x00B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UBTDecorator_DistanceCheck")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UBTDecorator_DistanceCheck")
	}
	static class UUBTDecorator_DistanceCheck* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUBTDecorator_DistanceCheck>();
	}
};
DUMPER7_ASSERTS_UUBTDecorator_DistanceCheck;

// Class Smuta.NeutralPlayerAttitudeEffect
// 0x0008 (0x0B18 - 0x0B10)
class UNeutralPlayerAttitudeEffect final : public UFractionAttitudeEffect
{
public:
	uint8                                         Pad_B10[0x8];                                      // 0x0B10(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NeutralPlayerAttitudeEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NeutralPlayerAttitudeEffect")
	}
	static class UNeutralPlayerAttitudeEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNeutralPlayerAttitudeEffect>();
	}
};
DUMPER7_ASSERTS_UNeutralPlayerAttitudeEffect;

// Class Smuta.NightGuardZastava
// 0x0008 (0x0368 - 0x0360)
class ANightGuardZastava : public ASpawnerPointZastava
{
public:
	bool                                          GuardSpawned;                                      // 0x0360(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NightGuardZastava")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NightGuardZastava")
	}
	static class ANightGuardZastava* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANightGuardZastava>();
	}
};
DUMPER7_ASSERTS_ANightGuardZastava;

// Class Smuta.VertexAssetDialogue
// 0x0020 (0x0050 - 0x0030)
class UVertexAssetDialogue final : public UDataAsset
{
public:
	class USoundWave*                             MMDialogueVoice;                                   // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundWave*                             FFDialogueVoice;                                   // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundWave*                             MFDialogueVoice;                                   // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundWave*                             FMDialogueVoice;                                   // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VertexAssetDialogue")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VertexAssetDialogue")
	}
	static class UVertexAssetDialogue* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVertexAssetDialogue>();
	}
};
DUMPER7_ASSERTS_UVertexAssetDialogue;

// Class Smuta.NoiseModifiersDataAsset
// 0x0050 (0x0080 - 0x0030)
class UNoiseModifiersDataAsset final : public UDataAsset
{
public:
	TMap<EPhysicalSurface, float>                 SurfaceNoiseModifiers;                             // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	float ApplyModifiersForNoise(float InNoise, EPhysicalSurface Surface);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NoiseModifiersDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NoiseModifiersDataAsset")
	}
	static class UNoiseModifiersDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNoiseModifiersDataAsset>();
	}
};
DUMPER7_ASSERTS_UNoiseModifiersDataAsset;

// Class Smuta.NonSaveGameplayEffectInterface
// 0x0000 (0x0000 - 0x0000)
class INonSaveGameplayEffectInterface final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NonSaveGameplayEffectInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NonSaveGameplayEffectInterface")
	}
	static class INonSaveGameplayEffectInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<INonSaveGameplayEffectInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_INonSaveGameplayEffectInterface;

// Class Smuta.VATGroupSetup
// 0x0038 (0x0068 - 0x0030)
class UVATGroupSetup final : public UDataAsset
{
public:
	TArray<struct FVATCharacter>                  VATCharacters;                                     // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVATAnimation>                  Animations;                                        // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UTexture2D*                             PositionTexture;                                   // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             RotationTexture;                                   // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAnimToTexturePrecision                       Precision;                                         // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SampleRate;                                        // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VATGroupSetup")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VATGroupSetup")
	}
	static class UVATGroupSetup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVATGroupSetup>();
	}
};
DUMPER7_ASSERTS_UVATGroupSetup;

// Class Smuta.NPCEquipmentSetInfo
// 0x0030 (0x0090 - 0x0060)
class UNPCEquipmentSetInfo final : public UEquipmentSetInfo
{
public:
	TSubclassOf<class UNPCSubAnimInstance_BattleBase> BattleSubAnimClass;                            // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UNPCSubAnimInstance_Peaceful_SearchBase> SearchSubAnimClass;                   // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UNPCSubAnimInstance_Peaceful_CalmBase> CalmSubAnimClass;                       // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UNPCSubAnimInstance_Peaceful_Flee> FleeSubAnimClass;                           // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    MovementSpeedPreset;                               // 0x0080(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NPCEquipmentSetInfo")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NPCEquipmentSetInfo")
	}
	static class UNPCEquipmentSetInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCEquipmentSetInfo>();
	}
};
DUMPER7_ASSERTS_UNPCEquipmentSetInfo;

// Class Smuta.NPCAppearanceItem
// 0x0080 (0x0218 - 0x0198)
class UNPCAppearanceItem : public UAppearanceItem
{
public:
	TSoftObjectPtr<class USkeletalMesh>           AppearanceHead;                                    // 0x0198(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeadScale;                                         // 0x01C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialOverridesDataAsset*>    AppearanceFaceMaterialOverrides;                   // 0x01C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EEquipmentSlotType                            DefaultBattleSlot;                                 // 0x01D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipmentSlotType                            DefaultSearchSlot;                                 // 0x01D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipmentSlotType                            DefaultCalmSlot;                                   // 0x01DA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipmentSlotType                            DefaultFleeSlot;                                   // 0x01DB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UNPCMasterAnimInstance>     MasterAnimInstance;                                // 0x01E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UNPCSubAnimInstance_BattleBase> DefaultBattleSubAnimClass;                     // 0x01E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UNPCSubAnimInstance_Peaceful_SearchBase> DefaultSearchSubAnimClass;            // 0x01F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UNPCSubAnimInstance_Peaceful_CalmBase> DefaultCalmSubAnimClass;                // 0x01F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UNPCSubAnimInstance_Peaceful_Flee> DefaultFleeSubAnimClass;                    // 0x0200(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    DefaultMovementSpeedPreset;                        // 0x0208(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)

public:
	TSubclassOf<class UAnimInstance> GetDefaultBattleSubAnimClass() const;
	TSubclassOf<class UAnimInstance> GetDefaultCalmSubAnimClass() const;
	TSubclassOf<class UAnimInstance> GetDefaultFleeSubAnimClass() const;
	TSubclassOf<class UAnimInstance> GetDefaultSearchSubAnimClass() const;
	TSubclassOf<class UAnimInstance> GetSlotBattleSubAnimClass(const EEquipmentSlotType& Slot) const;
	TSubclassOf<class UAnimInstance> GetSlotCalmSubAnimClass(const EEquipmentSlotType& Slot) const;
	TSubclassOf<class UAnimInstance> GetSlotFleeSubAnimClass(const EEquipmentSlotType& Slot) const;
	struct FDataTableRowHandle GetSlotMovementSpeedPreset(const EEquipmentSlotType& Slot) const;
	TSubclassOf<class UAnimInstance> GetSlotSearchSubAnimClass(const EEquipmentSlotType& Slot) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NPCAppearanceItem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NPCAppearanceItem")
	}
	static class UNPCAppearanceItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCAppearanceItem>();
	}
};
DUMPER7_ASSERTS_UNPCAppearanceItem;

// Class Smuta.TutorialTagEventComboContent
// 0x0050 (0x01C8 - 0x0178)
class UTutorialTagEventComboContent final : public UTutorialBaseContent
{
public:
	class FText                                   HintText;                                          // 0x0178(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   GamepadHintText;                                   // 0x0190(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FTagEventEntry>                 EventTagEntries;                                   // 0x01A8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         DelayBetweenActions;                               // 0x01B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeIntervalForAction;                             // 0x01BC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoCloseOnSuccess;                               // 0x01C0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AutoCloseTimeOnSuccess;                            // 0x01C4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialTagEventComboContent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialTagEventComboContent")
	}
	static class UTutorialTagEventComboContent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialTagEventComboContent>();
	}
};
DUMPER7_ASSERTS_UTutorialTagEventComboContent;

// Class Smuta.NPCMontageDescription
// 0x0030 (0x0058 - 0x0028)
class UNPCMontageDescription final : public UObject
{
public:
	TSoftObjectPtr<class UAnimMontage>            Montage;                                           // 0x0028(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENPCAttackType                                AttackType;                                        // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NPCMontageDescription")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NPCMontageDescription")
	}
	static class UNPCMontageDescription* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCMontageDescription>();
	}
};
DUMPER7_ASSERTS_UNPCMontageDescription;

// Class Smuta.VertexActorPair
// 0x0030 (0x03D0 - 0x03A0)
class AVertexActorPair final : public ABaseVertexActor
{
public:
	TArray<class UChildActorComponent*>           VertexArray;                                       // 0x0398(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	float                                         TimeOffset;                                        // 0x03A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PlayRate;                                          // 0x03AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVertexAssetPair*                       VertexAssetPair;                                   // 0x03B0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AVertexActor>               VertexClass;                                       // 0x03B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVertexPairInfo>                VertexPairInfos;                                   // 0x03C0(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	float GetPlayRate();
	float GetTimeOffset();
	TArray<struct FVertexPairInfo> GetVertexPairInfo();
	void SetPlayRate(float NewPlayRate);
	void SetTimeOffset(float NewTimeOffset);
	void SetVertexPairInfo(const TArray<struct FVertexPairInfo>& PairInfos);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VertexActorPair")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VertexActorPair")
	}
	static class AVertexActorPair* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVertexActorPair>();
	}
};
DUMPER7_ASSERTS_AVertexActorPair;

// Class Smuta.ComboDescription
// 0x0018 (0x0040 - 0x0028)
class UComboDescription final : public UObject
{
public:
	float                                         StartComboDistance;                                // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UNPCMontageDescription*>         Combo;                                             // 0x0030(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ComboDescription")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ComboDescription")
	}
	static class UComboDescription* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComboDescription>();
	}
};
DUMPER7_ASSERTS_UComboDescription;

// Class Smuta.ComboList
// 0x0010 (0x0038 - 0x0028)
class UComboList final : public UObject
{
public:
	TArray<class UComboDescription*>              ComboList;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ComboList")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ComboList")
	}
	static class UComboList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComboList>();
	}
};
DUMPER7_ASSERTS_UComboList;

// Class Smuta.WeaponHitNoiseDataAsset
// 0x0050 (0x0080 - 0x0030)
class UWeaponHitNoiseDataAsset final : public UDataAsset
{
public:
	TMap<TSoftClassPtr<class UClass>, struct FWeaponNoiseAttackMap> WeaponsNoiseSettings;            // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponHitNoiseDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponHitNoiseDataAsset")
	}
	static class UWeaponHitNoiseDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponHitNoiseDataAsset>();
	}
};
DUMPER7_ASSERTS_UWeaponHitNoiseDataAsset;

// Class Smuta.NPCComboActionData
// 0x0050 (0x0080 - 0x0030)
class UNPCComboActionData final : public UBaseActionData
{
public:
	TMap<EEquipmentType, class UComboList*>       Data;                                              // 0x0030(0x0050)(Edit, BlueprintVisible, ExportObject, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UAnimMetaData* GetAnimMetaData(TSubclassOf<class UAnimMetaData> DataTypeClass, TSoftObjectPtr<class UAnimMontage> Montage);
	static class UAnimMetaData* GetAnimMetaDataFromMontagePtr(TSubclassOf<class UAnimMetaData> DataTypeClass, class UAnimMontage* Montage);

	class UComboDescription* GetAnyCombo(EEquipmentType Type, float DistanceRestriction) const;
	class UComboDescription* GetCounterCombo(EEquipmentType Type, float DistanceRestriction) const;
	class UComboDescription* GetDefaultCombo(EEquipmentType Type, float DistanceRestriction) const;
	class UComboDescription* GetMixedCombo(EEquipmentType Type, float DistanceRestriction) const;
	class UComboDescription* GetUblockableCombo(EEquipmentType Type, float DistanceRestriction) const;
	class UComboDescription* GetUnparryCombo(EEquipmentType Type, float DistanceRestriction) const;
	bool HasCombo(EEquipmentType Type, float DistanceRestriction) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NPCComboActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NPCComboActionData")
	}
	static class UNPCComboActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCComboActionData>();
	}
};
DUMPER7_ASSERTS_UNPCComboActionData;

// Class Smuta.NPCDialogueComponent
// 0x00F8 (0x0198 - 0x00A0)
class UNPCDialogueComponent final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(class UNPCDialogueComponent* DialogueComponent, bool NewStatus)> OnDialogueReadinessChanged; // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UNPCDialogueComponent* DialogueComponent, bool NewStatus)> OnDialogueActivenessChanged; // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FComponentReference                    OverlapDialogueArea;                               // 0x00C0(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class ANPCDialogueSystemHelper*               CurrentDialogueHelper;                             // 0x00E8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVoiceTagsDataAsset*                    VoiceTagsDataAsset;                                // 0x00F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F8[0x10];                                      // 0x00F8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ANPCDialogueSystemHelper>   HelperClass;                                       // 0x0108(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          UseDialogueFromPassport;                           // 0x0110(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UDlgDialogue>            DialogueAsset;                                     // 0x0118(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>            DialogueEffect;                                    // 0x0140(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  BlockingTags;                                      // 0x0148(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                         DialogueCooldown;                                  // 0x0168(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          IsOverlapDialogueActive;                           // 0x016C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OverlapDialogueChance;                             // 0x0170(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          IsTimerDialogueActive;                             // 0x0174(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimerDialogueChance;                               // 0x0178(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimerDialoguePeriod;                               // 0x017C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimerDialogueSearchRadius;                         // 0x0180(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_184[0x14];                                     // 0x0184(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static bool DoesDialogueContainParticipants(const TArray<class AActor*>& PossibleDialogueParticipants, class UDlgDialogue* Dialogue);

	bool CanEnterDialogue();
	void ChangeDialogueAsset(TSoftObjectPtr<class UDlgDialogue> NewDialogue);
	bool CouldBeDialogueTargetFor(class ADefaultCharacter* PossibleDialogueTarget, class UDlgDialogue* Dialogue);
	class ADefaultCharacter* GetDialogueTarget();
	class UDlgDialogue* GetDialogueToSpeak();
	void GetParticipantNameByVoiceTag(class FString* OutName);
	void HandleOverlapDialogueArea(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	bool HasDialogueToSpeak();
	void InitiateDialogue(class ADefaultCharacter* OtherCharacter, class UDlgDialogue* Dialogue, bool bSearchPoint);
	void InitiateMonologue(class UDlgDialogue* Monologue);
	void SetDialogueTarget(class ADefaultCharacter* NewDialogueTarget);
	void SetReadyForDialogue(bool NewReady);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NPCDialogueComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NPCDialogueComponent")
	}
	static class UNPCDialogueComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCDialogueComponent>();
	}
};
DUMPER7_ASSERTS_UNPCDialogueComponent;

// Class Smuta.VillageAnimalSpawner
// 0x0010 (0x0328 - 0x0318)
class AVillageAnimalSpawner final : public AMatrixSpawnerBase
{
public:
	EVillageAnimalType                            VillageAnimalType;                                 // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EVillageRestState                             RestState;                                         // 0x0319(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EVillageEatState                              EatState;                                          // 0x031A(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EAnimalState                                  AnimalState;                                       // 0x031B(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AEatVillagePOI*                         POI;                                               // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VillageAnimalSpawner")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VillageAnimalSpawner")
	}
	static class AVillageAnimalSpawner* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVillageAnimalSpawner>();
	}
};
DUMPER7_ASSERTS_AVillageAnimalSpawner;

// Class Smuta.NPCDialogueSystemHelper
// 0x0030 (0x0320 - 0x02F0)
class ANPCDialogueSystemHelper : public ADialogueSystemHelper
{
public:
	TMulticastInlineDelegate<void()>              OnDialogueFinished;                                // 0x02F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UDlgDialogue*                           DialogueAsset;                                     // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UNPCDialogueComponent*>          DialogueParticipants;                              // 0x0308(0x0010)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_318[0x8];                                      // 0x0318(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FindDialoguePointByEQS();
	void FinishDialogue();
	void HandleParticipantReady(class UNPCDialogueComponent* Participant, bool NewReady);
	void NativeFinishDialogue();
	void OnParticipantTagChanged(const struct FGameplayTag& UpdatedTag, bool Exists);
	void SetupDialogueLocation(const struct FVector& Location);
	void StartDialogue();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NPCDialogueSystemHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NPCDialogueSystemHelper")
	}
	static class ANPCDialogueSystemHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANPCDialogueSystemHelper>();
	}
};
DUMPER7_ASSERTS_ANPCDialogueSystemHelper;

// Class Smuta.NPCEquipmentItemAnimDataContainer
// 0x0000 (0x0000 - 0x0000)
class INPCEquipmentItemAnimDataContainer final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NPCEquipmentItemAnimDataContainer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NPCEquipmentItemAnimDataContainer")
	}
	static class INPCEquipmentItemAnimDataContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<INPCEquipmentItemAnimDataContainer>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_INPCEquipmentItemAnimDataContainer;

// Class Smuta.VertexActor
// 0x0070 (0x0410 - 0x03A0)
class AVertexActor : public ABaseVertexActor
{
public:
	class UStaticMeshComponent*                   StaticMeshItemComponent;                           // 0x0398(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   StaticMeshBodyComponent;                           // 0x03A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                      CollisionComponent;                                // 0x03A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                       AudioTriggerComponent;                             // 0x03B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                        AudioComponentSFX;                                 // 0x03B8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                        AudioComponentVoice;                               // 0x03C0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVertexAsset*                           VertexData;                                        // 0x03C8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         AnimationIndex;                                    // 0x03D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeOffset;                                        // 0x03D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PlayRate;                                          // 0x03D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHideItem;                                         // 0x03DC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bPlaySound;                                        // 0x03DD(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bPlayVoice;                                        // 0x03DE(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3DF[0x1];                                      // 0x03DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AudioTriggerRadius;                                // 0x03E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundWave*                             OverrideVoice;                                     // 0x03E8(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundWave*                             OverrideSFX;                                       // 0x03F0(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class AActor>>             ClassTriggerArray;                                 // 0x03F8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_408[0x8];                                      // 0x0408(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetAnimationLenght();
	int32 GetCurrentFrame();
	float GetCurrentTime();
	float GetFrameOffset();
	bool IsPlayerCheck(class AActor* ActorCheck);
	bool IsPlayerOverlap();
	void OnBeginOverlapPlayer(class UPrimitiveComponent* ThisComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnEndOverlapPlayer(class UPrimitiveComponent* ThisComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void SetAnimationIndex(int32 NewIndex);
	void SetHideItem(bool HideItem);
	void SetOverrideSFX(class USoundWave* NewOverride);
	void SetOverrideVoice(class USoundWave* NewOverride);
	void SetPlayRate(float NewPlayRate);
	void SetPlaySound(bool PlaySound);
	void SetPlayVoice(bool PlayVoice);
	void SetTimeOffset(float NewTimeOffset);
	void SetVertexData(class UVertexAsset* NewVertexData);
	void ToggleSound(bool Activate);

	int32 GetAnimationIndex() const;
	class UAudioComponent* GetAudioComponentSFX() const;
	class UAudioComponent* GetAudioComponentVoice() const;
	class USphereComponent* GetAudioTriggerComponent() const;
	class UCapsuleComponent* GetCollisionComponent() const;
	bool GetHideItem() const;
	class USoundWave* GetOverrideSFX() const;
	class USoundWave* GetOverrideVoice() const;
	float GetPlayRate() const;
	bool GetPlaySound() const;
	bool GetPlayVoice() const;
	class UStaticMeshComponent* GetStaticMeshBodyComponent() const;
	class UStaticMeshComponent* GetStaticMeshItemComponent() const;
	float GetTimeOffset() const;
	class UVertexAsset* GetVertexData() const;
	void SetAllComponentMobility(EComponentMobility Type) const;
	void SetCustomDataBody(int32 NewFrameOffset, int32 NewStartFrame, int32 NewEndFrame, float NewPlayRate, int32 NewFrameRate) const;
	void SetCustomDataItem(int32 NewFrameOffset, int32 NewStartFrame, int32 NewEndFrame, float NewPlayRate, int32 NewFrameRate) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VertexActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VertexActor")
	}
	static class AVertexActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVertexActor>();
	}
};
DUMPER7_ASSERTS_AVertexActor;

// Class Smuta.NPCEquipmentItemAdditionalAnimSettings_Simple
// 0x0058 (0x0080 - 0x0028)
class UNPCEquipmentItemAdditionalAnimSettings_Simple final : public UEquipmentItemAdditionalAnimSettings
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNPCEquipmentItemAnimData              Data;                                              // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	struct FNPCEquipmentItemAnimData GetNPCEquipmentItemAnimData(class AActor* OwningActor) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NPCEquipmentItemAdditionalAnimSettings_Simple")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NPCEquipmentItemAdditionalAnimSettings_Simple")
	}
	static class UNPCEquipmentItemAdditionalAnimSettings_Simple* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCEquipmentItemAdditionalAnimSettings_Simple>();
	}
};
DUMPER7_ASSERTS_UNPCEquipmentItemAdditionalAnimSettings_Simple;

// Class Smuta.NPCMasterAnimInstance
// 0x00B0 (0x0440 - 0x0390)
class UNPCMasterAnimInstance : public UNPCBaseAnimInstance
{
public:
	TMulticastInlineDelegate<void(TSubclassOf<class UAnimInstance> Class)> OnAnimLinked;             // 0x0388(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(TSubclassOf<class UAnimInstance> Class)> OnAnimUnlinked;           // 0x0398(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	bool                                          bIsRootMotioningByTag;                             // 0x03A8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsEnableIK;                                       // 0x03A9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsValidFocalPoint;                                // 0x03AA(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsMoving;                                         // 0x03AB(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsRunning;                                        // 0x03AC(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSprinting;                                      // 0x03AD(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDead;                                           // 0x03AE(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsInFinisher;                                     // 0x03AF(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsInSleep;                                        // 0x03B0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsWeaponEquipped;                                 // 0x03B1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENPCBehaviorState                             BehaviorState;                                     // 0x03B2(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGroundMovementMode                           GroundMovementMode;                                // 0x03B3(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RightSlopeAngle;                                   // 0x03B4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ForwardSlopeAngle;                                 // 0x03B8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              LocalMovementVector;                               // 0x03C0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<ENPCAnimatedArmId, class UAnimSequence*> NPCEquipmentArmsAASMap;                            // 0x03D0(0x0050)(BlueprintVisible, Transient, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnAnimStateChange;                                 // 0x0420(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected)
	TSubclassOf<class UNPCSubAnimInstance_LocomotionBase> CurrentLayerInstanceClass;                 // 0x0430(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UNPCSubAnimInstance_LocomotionBase> PendingToStopLayerClass;                   // 0x0438(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void FinishUnlinkLayer();
	void OnActiveSlotChanged(class UBaseEquipmentSet* Slot);
	void OnBehaviorStateChanged(const ENPCBehaviorState& PreviousBehaviorState, const ENPCBehaviorState& CurrentBehaviorState);
	void OnGroundMovementModeChanged(const EGroundMovementMode& PreviousGroundMovementMode, const EGroundMovementMode& CurrentGroundMovementMode);
	void OnMovementStateChanged(bool InMove);

	ERootMotionMode GetRootMotionMode() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NPCMasterAnimInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NPCMasterAnimInstance")
	}
	static class UNPCMasterAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCMasterAnimInstance>();
	}
};
DUMPER7_ASSERTS_UNPCMasterAnimInstance;

// Class Smuta.WaitTutorialHintCondition
// 0x0010 (0x0068 - 0x0058)
class UWaitTutorialHintCondition final : public UQuestStepCondition
{
public:
	class FName                                   HintName;                                          // 0x0058(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnHintClosed(const class FName& InHintName);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WaitTutorialHintCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WaitTutorialHintCondition")
	}
	static class UWaitTutorialHintCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWaitTutorialHintCondition>();
	}
};
DUMPER7_ASSERTS_UWaitTutorialHintCondition;

// Class Smuta.NPCReactionComponent
// 0x00D0 (0x0170 - 0x00A0)
class UNPCReactionComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x20];                                      // 0x00A0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            ReactionEffectClass;                               // 0x00C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>            AbortEffectClass;                                  // 0x00C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>            WarningEffectClass;                                // 0x00D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  BlockingTags;                                      // 0x00D8(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                         OptimizationDistance;                              // 0x00F8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         BaseTickTime;                                      // 0x00FC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         OptimizedTickTime;                                 // 0x0100(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_104[0x6C];                                     // 0x0104(0x006C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ApplyAttitudeChangingEffect();
	void HandleSmartObjectInteractFinished(bool bResult);
	void OnMonologueActiveChangedCallback(class UNPCDialogueComponent* DialogueComponent, bool NewStatus);
	void OnMontageEndedCallback(class UAnimMontage* Montage, bool bInterrupted);
	void OnOwnerTagChanged(const struct FGameplayTag& UpdatedTag, bool Exists);
	void StartCurrentReaction();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NPCReactionComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NPCReactionComponent")
	}
	static class UNPCReactionComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCReactionComponent>();
	}
};
DUMPER7_ASSERTS_UNPCReactionComponent;

// Class Smuta.NPCShootActionData
// 0x0050 (0x0080 - 0x0030)
class UNPCShootActionData final : public UBaseActionData
{
public:
	TMap<EEquipmentType, struct FNPCShootMontages> Montages;                                         // 0x0030(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NPCShootActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NPCShootActionData")
	}
	static class UNPCShootActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCShootActionData>();
	}
};
DUMPER7_ASSERTS_UNPCShootActionData;

// Class Smuta.ZastavaBase
// 0x0088 (0x0320 - 0x0298)
class AZastavaBase : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADefaultCharacter*>              ZastavaGarrison;                                   // 0x02A0(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class ASpawnerPointZastava*>           ZastavaPoints;                                     // 0x02B0(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UFractionComponent*                     FractionComponent;                                 // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADefaultCharacter*                      PlayerRef;                                         // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AlwaysFriendly;                                    // 0x02D0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBillboardComponent*                    BillboardComponent;                                // 0x02D8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                        SceneComponent;                                    // 0x02E0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplineComponent*                       Border;                                            // 0x02E8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         OffsetDistance;                                    // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USplineMeshComponent*>           InsideBorders;                                     // 0x02F8(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class USplineMeshComponent*>           OutsideBorders;                                    // 0x0308(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                          HasAlarm;                                          // 0x0318(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          Debug;                                             // 0x0319(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_31A[0x6];                                      // 0x031A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ActivateSpawn(class ASpawnerPointZastava* Point, const struct FEnemyData& EnemyData);
	void DeactivateSpawn();
	struct FVector RotationOffset(const struct FVector& Location, const struct FQuat& RVector);
	void SetAlarm(bool Value);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ZastavaBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ZastavaBase")
	}
	static class AZastavaBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AZastavaBase>();
	}
};
DUMPER7_ASSERTS_AZastavaBase;

// Class Smuta.ZastavaMain
// 0x03E0 (0x0700 - 0x0320)
class AZastavaMain : public AZastavaBase
{
public:
	EFraction                                     ZastavaFraction;                                   // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsStrelecZastava;                                  // 0x0321(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          WorkAfterCapture;                                  // 0x0322(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_323[0x1];                                      // 0x0323(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MercyCounter;                                      // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsCheckMercy;                                      // 0x0328(0x0001)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsPlayerMeet;                                      // 0x0329(0x0001)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32A[0x6];                                      // 0x032A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       SplineComponent;                                   // 0x0330(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                       Camera;                                            // 0x0338(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                       UISphere;                                          // 0x0340(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          IsIndependent;                                     // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DayNightController;                                // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          ForceCapture;                                      // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          ResultCaptured;                                    // 0x0359(0x0001)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          VisibleOnMap;                                      // 0x035A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_35B[0x5];                                      // 0x035B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AActor>                     DayNightClass;                                     // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class ASpawnerPointZastava*, struct FEnemyData> BellRinger;                                 // 0x0368(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TMap<class ASpawnerPointZastava*, struct FEnemyData> NewBellRinger;                              // 0x03B8(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	class AZastavaFlag*                           Flag;                                              // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AZastavaBell*                           Bell;                                              // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   ZastavaName;                                       // 0x0418(0x0018)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	bool                                          AreDestroyStuffAfterDeath;                         // 0x0430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_431[0x3];                                      // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DistanceToDestroyStuff;                            // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DistanceToDisagro;                                 // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AZastavaSub*>                    SubZastavs;                                        // 0x0440(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TArray<class AZastavaSub*>                    CapturedSubZastavs;                                // 0x0450(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	TMap<class ASpawnerPointZastava*, struct FEnemyData> NightGuard;                                 // 0x0460(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TMap<class ASpawnerPointZastava*, struct FPatrolData> Patrol;                                    // 0x04B0(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, SaveGame, Protected, NativeAccessSpecifierProtected)
	TMap<class ASpawnerPointZastava*, struct FEnemyData> guard;                                      // 0x0500(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TMap<class ASpawnerPointZastava*, struct FEnemyData> FreeMember;                                 // 0x0550(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TArray<class AZastavaPOI*>                    RamblePoints;                                      // 0x05A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TMap<class ASpawnerPointZastava*, struct FEnemyData> NewNightGuard;                              // 0x05B0(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TMap<class ASpawnerPointZastava*, struct FPatrolData> NewPatrol;                                 // 0x0600(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TMap<class ASpawnerPointZastava*, struct FEnemyData> NewGuard;                                   // 0x0650(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TMap<class ASpawnerPointZastava*, struct FEnemyData> NewFreeMember;                              // 0x06A0(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TArray<class AZastavaPOI*>                    NewRamblePoints;                                   // 0x06F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)

public:
	void ChangeFractionAfterCapture();
	class AActor* GetDNCClass();
	void ResetPatrolsSpawn();
	void ResetPoints();
	bool SubZastavsCaptured();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ZastavaMain")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ZastavaMain")
	}
	static class AZastavaMain* GetDefaultObj()
	{
		return GetDefaultObjImpl<AZastavaMain>();
	}
};
DUMPER7_ASSERTS_AZastavaMain;

// Class Smuta.NPCStateComponent
// 0x0038 (0x00D8 - 0x00A0)
class UNPCStateComponent final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(const ENPCBehaviorState& OldState, const ENPCBehaviorState& NewState)> OnNPCStateChanged; // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_B0[0x28];                                      // 0x00B0(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BindOnFightStart();
	void BindOnFleeStart();
	void OnAgroTargetUpdated(class AActor* NewAgroTarget);
	void OnDetectionStateChanged(class UEnemyDetectionComponent* Component, EDetectionAIState NewState);
	void SetState(const ENPCBehaviorState& NewState);

	ENPCBehaviorState GetState() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NPCStateComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NPCStateComponent")
	}
	static class UNPCStateComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCStateComponent>();
	}
};
DUMPER7_ASSERTS_UNPCStateComponent;

// Class Smuta.NPCStatesWorldSubsystem
// 0x0060 (0x0090 - 0x0030)
class UNPCStatesWorldSubsystem final : public UWorldSubsystem
{
public:
	TMulticastInlineDelegate<void(class ADefaultCharacter* Character)> OnCharacterRegistered;        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ADefaultCharacter* Character)> OnCharacterUnregistered;      // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ADefaultCharacter* Character)> OnCharacterDefeated;          // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ADefaultCharacter* Character)> OnCharacterPutSleep;          // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ADefaultCharacter* Character)> OnCharacterWakeUp;            // 0x0070(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class ADefaultCharacter*>              RegisteredCharacters;                              // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	void OnNPCTagChanged(class UAbilitySystemComponent* ASC, const struct FGameplayTag& UpdatedTag, bool Exists);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NPCStatesWorldSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NPCStatesWorldSubsystem")
	}
	static class UNPCStatesWorldSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCStatesWorldSubsystem>();
	}
};
DUMPER7_ASSERTS_UNPCStatesWorldSubsystem;

// Class Smuta.WorldMapBorderActor
// 0x0038 (0x02D0 - 0x0298)
class AWorldMapBorderActor : public AActor
{
public:
	float                                         MapHeight;                                         // 0x0298(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29C[0x34];                                     // 0x029C(0x0034)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void GetDiagonalPoints(struct FVector* Point1, struct FVector* Point2);
	struct FVector2D GetMapSize();
	bool IsLocationInside(const struct FVector& Location);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WorldMapBorderActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WorldMapBorderActor")
	}
	static class AWorldMapBorderActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWorldMapBorderActor>();
	}
};
DUMPER7_ASSERTS_AWorldMapBorderActor;

// Class Smuta.WaitLevelOpen
// 0x0040 (0x0098 - 0x0058)
class UWaitLevelOpen final : public UQuestStepCondition
{
public:
	TSoftObjectPtr<class UWorld>                  WaitLvlOpen;                                       // 0x0058(0x0028)(Edit, BlueprintVisible, SaveGame, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_80[0x18];                                      // 0x0080(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WaitLevelOpen")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WaitLevelOpen")
	}
	static class UWaitLevelOpen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWaitLevelOpen>();
	}
};
DUMPER7_ASSERTS_UWaitLevelOpen;

// Class Smuta.NPCSubAnimInstance_BattleBase
// 0x0050 (0x03F0 - 0x03A0)
class UNPCSubAnimInstance_BattleBase : public UNPCSubAnimInstance_LocomotionBase
{
public:
	bool                                          bIsBlocking;                                       // 0x0398(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDominant;                                       // 0x0399(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39A[0x6];                                      // 0x039A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UEnemyAggroController>   OwnersEnemyAggroControllerRef;                     // 0x03A0(0x0028)(BlueprintVisible, ExportObject, BlueprintReadOnly, InstancedReference, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UZoneFightAiComponent>   OwnersZoneFightAiComponentRef;                     // 0x03C8(0x0028)(BlueprintVisible, ExportObject, BlueprintReadOnly, InstancedReference, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	EEquipmentDefenceStyle GetEquipmentDefenceStyle() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NPCSubAnimInstance_BattleBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NPCSubAnimInstance_BattleBase")
	}
	static class UNPCSubAnimInstance_BattleBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCSubAnimInstance_BattleBase>();
	}
};
DUMPER7_ASSERTS_UNPCSubAnimInstance_BattleBase;

// Class Smuta.NPCSubAnimInstance_Peaceful_CalmBase
// 0x0000 (0x04C0 - 0x04C0)
class UNPCSubAnimInstance_Peaceful_CalmBase : public UNPCSubAnimInstance_PeacefulBase
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NPCSubAnimInstance_Peaceful_CalmBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NPCSubAnimInstance_Peaceful_CalmBase")
	}
	static class UNPCSubAnimInstance_Peaceful_CalmBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCSubAnimInstance_Peaceful_CalmBase>();
	}
};
DUMPER7_ASSERTS_UNPCSubAnimInstance_Peaceful_CalmBase;

// Class Smuta.NPCSubAnimInstance_Peaceful_SearchBase
// 0x0000 (0x04C0 - 0x04C0)
class UNPCSubAnimInstance_Peaceful_SearchBase : public UNPCSubAnimInstance_PeacefulBase
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NPCSubAnimInstance_Peaceful_SearchBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NPCSubAnimInstance_Peaceful_SearchBase")
	}
	static class UNPCSubAnimInstance_Peaceful_SearchBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPCSubAnimInstance_Peaceful_SearchBase>();
	}
};
DUMPER7_ASSERTS_UNPCSubAnimInstance_Peaceful_SearchBase;

// Class Smuta.ParryActionData
// 0x0050 (0x0080 - 0x0030)
class UParryActionData final : public UBaseActionData
{
public:
	TMap<class UEquipmentData*, struct FParryActionMontages> Montages;                               // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ParryActionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ParryActionData")
	}
	static class UParryActionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UParryActionData>();
	}
};
DUMPER7_ASSERTS_UParryActionData;

// Class Smuta.PeacefulAsset
// 0x0030 (0x0060 - 0x0030)
class UPeacefulAsset final : public UDataAsset
{
public:
	TSubclassOf<class UAnimInstance>              AnimBlueprint;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  IdleAnimations;                                    // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  WalkAnimations;                                    // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         WalkSpeed;                                         // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PeacefulAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PeacefulAsset")
	}
	static class UPeacefulAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPeacefulAsset>();
	}
};
DUMPER7_ASSERTS_UPeacefulAsset;

// Class Smuta.PlayerBattleStateController
// 0x00B0 (0x01F8 - 0x0148)
class UPlayerBattleStateController final : public UCharacterBattleStateController
{
public:
	struct FGameplayTagContainer                  EnterBattleTriggerTags;                            // 0x0148(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  BattleExitBlockerTags;                             // 0x0168(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            BattleStateEffect;                                 // 0x0188(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeaveBattleDelayTime;                              // 0x0190(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADefaultCharacter*                      OwnerCharacter;                                    // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBaseAbilitiesComponent*                OwnerASC;                                          // 0x01A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1A8[0x48];                                     // 0x01A8(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bCanEnterBattle;                                   // 0x01F0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddActiveBattleStateTrigger(const struct FGameplayTag& GameplayTag);
	void EnterBattle();
	void ForceLeaveBattle();
	void LeaveBattle();
	void OnOwnerASCTagUpdated(const struct FGameplayTag& UpdatedTag, bool Exists);
	void RemoveActiveBattleStateTrigger(const struct FGameplayTag& GameplayTag);
	void SetCanEnterBattle(bool bNewCanEnterBattle);
	void UpdateActiveBattleBlockers(const struct FGameplayTag& GameplayTag, bool Exists);

	bool CanEnterBattle() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerBattleStateController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerBattleStateController")
	}
	static class UPlayerBattleStateController* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerBattleStateController>();
	}
};
DUMPER7_ASSERTS_UPlayerBattleStateController;

// Class Smuta.PlayerSoundEffectComponent
// 0x0038 (0x0060 - 0x0028)
class UPlayerSoundEffectComponent final : public UGameplayEffectComponent
{
public:
	TSoftObjectPtr<class UMetaSoundSource>        MetaSoundSource;                                   // 0x0028(0x0028)(Edit, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   StartSoundTrigger;                                 // 0x0050(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   EndSoundTrigger;                                   // 0x0058(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerSoundEffectComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerSoundEffectComponent")
	}
	static class UPlayerSoundEffectComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerSoundEffectComponent>();
	}
};
DUMPER7_ASSERTS_UPlayerSoundEffectComponent;

// Class Smuta.PostProcessManager
// 0x0060 (0x0100 - 0x00A0)
class UPostProcessManager final : public UActorComponent
{
public:
	TArray<struct FPostProcessEffectSettings>     PostEffectsSettings;                               // 0x00A0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_B0[0x50];                                      // 0x00B0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool AddPostEffect(const EPostProcessType Type);
	void PlayerTagChangedResponse(const struct FGameplayTag& ChangedTag, bool bExists);
	bool RemovePostEffect(const EPostProcessType Type);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PostProcessManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PostProcessManager")
	}
	static class UPostProcessManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPostProcessManager>();
	}
};
DUMPER7_ASSERTS_UPostProcessManager;

// Class Smuta.QTE_DataAsset
// 0x0200 (0x0230 - 0x0030)
class UQTE_DataAsset final : public UDataAsset
{
public:
	bool                                          CanPlayInBattle;                                   // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           MusicTag;                                          // 0x0034(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         QTE_Success_Start;                                 // 0x003C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         QTE_Fail_Max;                                      // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EQTE_FailAction                               QTE_Fail_Changer;                                  // 0x0044(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQTE_StartData                         StartData;                                         // 0x0048(0x0078)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TArray<struct FQTE_Stage>                     Stages;                                            // 0x00C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	struct FQTE_FinishData                        WinData;                                           // 0x00D0(0x00B0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	struct FQTE_FinishData                        LoseData;                                          // 0x0180(0x00B0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("QTE_DataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"QTE_DataAsset")
	}
	static class UQTE_DataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQTE_DataAsset>();
	}
};
DUMPER7_ASSERTS_UQTE_DataAsset;

// Class Smuta.QTE_StationBase
// 0x0048 (0x02E0 - 0x0298)
class AQTE_StationBase : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractionComponent*                  InteractionComponent;                              // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       InteractionLookOn;                                 // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       InteractionOverlap;                                // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBillboardComponent*                    Billboard;                                         // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                        DirectionArrow;                                    // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInteractionWidgetComponent*            InteractionWidgetComponent;                        // 0x02C8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bActiveAtStart;                                    // 0x02D0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableAfterInteraction;                          // 0x02D1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D2[0xE];                                      // 0x02D2(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnInteracted(class AActor* InteractedActor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("QTE_StationBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"QTE_StationBase")
	}
	static class AQTE_StationBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AQTE_StationBase>();
	}
};
DUMPER7_ASSERTS_AQTE_StationBase;

// Class Smuta.QuestActionSaveMigrationHandler
// 0x0010 (0x0038 - 0x0028)
class UQuestActionSaveMigrationHandler final : public USaveMigrationHandler
{
public:
	TArray<class UQuestStepAction*>               QuestActions;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	void RunQuestAction(class UQuestStep* FromQuestStep) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("QuestActionSaveMigrationHandler")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"QuestActionSaveMigrationHandler")
	}
	static class UQuestActionSaveMigrationHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuestActionSaveMigrationHandler>();
	}
};
DUMPER7_ASSERTS_UQuestActionSaveMigrationHandler;

// Class Smuta.QuestAssetToStateHandler
// 0x0000 (0x0028 - 0x0028)
class UQuestAssetToStateHandler final : public USaveMigrationHandler
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("QuestAssetToStateHandler")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"QuestAssetToStateHandler")
	}
	static class UQuestAssetToStateHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuestAssetToStateHandler>();
	}
};
DUMPER7_ASSERTS_UQuestAssetToStateHandler;

// Class Smuta.RangeShootPoint
// 0x0010 (0x02A8 - 0x0298)
class ARangeShootPoint final : public AActor
{
public:
	bool                                          bIsReserved;                                       // 0x0298(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADefaultCharacter*                      ReservedCharacter;                                 // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RangeShootPoint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RangeShootPoint")
	}
	static class ARangeShootPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARangeShootPoint>();
	}
};
DUMPER7_ASSERTS_ARangeShootPoint;

// Class Smuta.RemoveEquipmentQuestAction
// 0x0038 (0x0068 - 0x0030)
class URemoveEquipmentQuestAction final : public UQuestStepAction
{
public:
	TSoftObjectPtr<class AActor>                  Target;                                            // 0x0030(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipmentSlotType                            EquipmentSlotType;                                 // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor;                                       // 0x0060(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RemoveEquipmentQuestAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RemoveEquipmentQuestAction")
	}
	static class URemoveEquipmentQuestAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<URemoveEquipmentQuestAction>();
	}
};
DUMPER7_ASSERTS_URemoveEquipmentQuestAction;

// Class Smuta.RestVillagePOI
// 0x0000 (0x02B0 - 0x02B0)
class ARestVillagePOI final : public ABasePOI
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RestVillagePOI")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RestVillagePOI")
	}
	static class ARestVillagePOI* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARestVillagePOI>();
	}
};
DUMPER7_ASSERTS_ARestVillagePOI;

// Class Smuta.RichTextBlockInputActionDecorator
// 0x0008 (0x0030 - 0x0028)
class URichTextBlockInputActionDecorator : public URichTextBlockDecorator
{
public:
	class UDataTable*                             InputActions;                                      // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RichTextBlockInputActionDecorator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RichTextBlockInputActionDecorator")
	}
	static class URichTextBlockInputActionDecorator* GetDefaultObj()
	{
		return GetDefaultObjImpl<URichTextBlockInputActionDecorator>();
	}
};
DUMPER7_ASSERTS_URichTextBlockInputActionDecorator;

// Class Smuta.RootMotionModifier_LimitedSkewWarp
// 0x0030 (0x0290 - 0x0260)
class URootMotionModifier_LimitedSkewWarp final : public URootMotionModifier_SkewWarp
{
public:
	bool                                          bUseMaxTranslationSpeed;                           // 0x0260(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxTranslationSpeed;                               // 0x0264(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_268[0x28];                                     // 0x0268(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RootMotionModifier_LimitedSkewWarp")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RootMotionModifier_LimitedSkewWarp")
	}
	static class URootMotionModifier_LimitedSkewWarp* GetDefaultObj()
	{
		return GetDefaultObjImpl<URootMotionModifier_LimitedSkewWarp>();
	}
};
DUMPER7_ASSERTS_URootMotionModifier_LimitedSkewWarp;

// Class Smuta.SaveLoadSettings
// 0x0038 (0x0070 - 0x0038)
class USaveLoadSettings final : public UDeveloperSettings
{
public:
	class FString                                 CurrentSaveVersion;                                // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLegacyBuildVersionData>        LegacyVersionMigrations;                           // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   DefaultLoadFailDescription;                        // 0x0058(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static const class USaveLoadSettings* Get();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SaveLoadSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SaveLoadSettings")
	}
	static class USaveLoadSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USaveLoadSettings>();
	}
};
DUMPER7_ASSERTS_USaveLoadSettings;

// Class Smuta.SaveQuestStep
// 0x0010 (0x01D0 - 0x01C0)
class USaveQuestStep final : public UQuestStep
{
public:
	class FString                                 OptionalSaveName;                                  // 0x01C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SaveQuestStep")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SaveQuestStep")
	}
	static class USaveQuestStep* GetDefaultObj()
	{
		return GetDefaultObjImpl<USaveQuestStep>();
	}
};
DUMPER7_ASSERTS_USaveQuestStep;

// Class Smuta.SetUseControllerRotationComponent
// 0x0008 (0x0040 - 0x0038)
class USetUseControllerRotationComponent final : public UAbilitiesGameplayEffectComponent
{
public:
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SetUseControllerRotationComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SetUseControllerRotationComponent")
	}
	static class USetUseControllerRotationComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USetUseControllerRotationComponent>();
	}
};
DUMPER7_ASSERTS_USetUseControllerRotationComponent;

// Class Smuta.ShowTutorialHintQuestAction
// 0x0008 (0x0038 - 0x0030)
class UShowTutorialHintQuestAction final : public UQuestStepAction
{
public:
	class FName                                   TutorialHintName;                                  // 0x0030(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShowTutorialHintQuestAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShowTutorialHintQuestAction")
	}
	static class UShowTutorialHintQuestAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShowTutorialHintQuestAction>();
	}
};
DUMPER7_ASSERTS_UShowTutorialHintQuestAction;

// Class Smuta.SimpleInteractionActor
// 0x0060 (0x02F8 - 0x0298)
class ASimpleInteractionActor final : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	EInteractionActorState                        State;                                             // 0x02A0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TextToWidget;                                      // 0x02A8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(EInteractionActorState State)> OnInteractionActorStateChanged;     // 0x02C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USphereComponent*                       SphereComponent;                                   // 0x02D0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionComponent*                  InteractionComponent;                              // 0x02D8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                          BoxInteraction;                                    // 0x02E0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBillboardComponent*                    Billboard;                                         // 0x02E8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionWidgetComponent*            InteractionWidgetComponent;                        // 0x02F0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void ChangeActorState(EInteractionActorState NewState);
	void OnInteracted(class AActor* InteractedActor);
	void PostLogicChanged();
	void PreLogicChanged();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SimpleInteractionActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SimpleInteractionActor")
	}
	static class ASimpleInteractionActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASimpleInteractionActor>();
	}
};
DUMPER7_ASSERTS_ASimpleInteractionActor;

// Class Smuta.SmutaActionWidget
// 0x0000 (0x0490 - 0x0490)
class USmutaActionWidget final : public UCommonActionWidget
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaActionWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaActionWidget")
	}
	static class USmutaActionWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmutaActionWidget>();
	}
};
DUMPER7_ASSERTS_USmutaActionWidget;

// Class Smuta.SmutaBuildConfigSubsystem
// 0x0020 (0x0050 - 0x0030)
class USmutaBuildConfigSubsystem final : public UGameInstanceSubsystem
{
public:
	EBuildProjectType                             SmutaProjectType;                                  // 0x0030(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 BuildVersion;                                      // 0x0038(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         BuildNumber;                                       // 0x0048(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static EBuildProjectType GetBuildProjectType(const class UObject* WorldContextObject);

	void HandleSettingsDelegate(class USentrySettings* Settings);
	void InitVersion();

	int32 GetBuildNumber() const;
	class FString GetBuildVersion() const;
	EBuildProjectType GetProjectType() const;
	bool IsEducationBuild() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaBuildConfigSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaBuildConfigSubsystem")
	}
	static class USmutaBuildConfigSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmutaBuildConfigSubsystem>();
	}
};
DUMPER7_ASSERTS_USmutaBuildConfigSubsystem;

// Class Smuta.SmutaCommonRotator
// 0x0000 (0x15E0 - 0x15E0)
class USmutaCommonRotator : public UCommonRotator
{
public:
	void CallOnRotated();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaCommonRotator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaCommonRotator")
	}
	static class USmutaCommonRotator* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmutaCommonRotator>();
	}
};
DUMPER7_ASSERTS_USmutaCommonRotator;

// Class Smuta.SmutaDialogueSmartObject
// 0x0080 (0x03C8 - 0x0348)
class ASmutaDialogueSmartObject final : public ABaseSmartObject
{
public:
	TMulticastInlineDelegate<void(class ADefaultCharacter* Companion1, class ADefaultCharacter* Companion2)> OnSmartObjectDialogueStarted; // 0x0348(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bSuccess)> OnSmartObjectDialogFinished;                       // 0x0358(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         WaitTime;                                          // 0x0368(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class ADefaultCharacter*, bool>          Companions;                                        // 0x0370(0x0050)(Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C0[0x8];                                      // 0x03C0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AbortDialogue();
	void HandleDialogFinished();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaDialogueSmartObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaDialogueSmartObject")
	}
	static class ASmutaDialogueSmartObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASmutaDialogueSmartObject>();
	}
};
DUMPER7_ASSERTS_ASmutaDialogueSmartObject;

// Class Smuta.SmutaGameUserSettings
// 0x0060 (0x01A8 - 0x0148)
class USmutaGameUserSettings final : public UGameUserSettings
{
public:
	TMulticastInlineDelegate<void()>              OnSettingsChanged;                                 // 0x0148(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                         PresetIndex;                                       // 0x0158(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         ScreenPercentageQuality;                           // 0x015C(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         LensFlare;                                         // 0x0160(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         MotionBlur;                                        // 0x0164(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         VolumetricFog;                                     // 0x0168(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         AntiAliasing;                                      // 0x016C(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         GlobalIllumination;                                // 0x0170(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         Reflection;                                        // 0x0174(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         Sharpness;                                         // 0x0178(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         VirtualShadowMap;                                  // 0x017C(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         NvidiaReflex;                                      // 0x0180(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         DLSS_FG;                                           // 0x0184(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         FSR_FI;                                            // 0x0188(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          IsShowedFirst;                                     // 0x018C(0x0001)(BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InvertMouseX;                                      // 0x018D(0x0001)(BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InvertMouseY;                                      // 0x018E(0x0001)(BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18F[0x1];                                      // 0x018F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MouseSensitivityX;                                 // 0x0190(0x0004)(BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MouseSensitivityY;                                 // 0x0194(0x0004)(BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GamepadSensitivity;                                // 0x0198(0x0004)(BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceFeedbackEnabled;                             // 0x019C(0x0001)(BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InputPresetIndex;                                  // 0x01A0(0x0004)(BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HeroLightingEnabled;                               // 0x01A4(0x0001)(BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          MinimapSprintZoomEnabled;                          // 0x01A5(0x0001)(BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A6[0x2];                                      // 0x01A6(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static float GetScreenPercentageByQuality(int32 Value);

	void ResetToDefaultSettings();
	void SetAntiAliasing(int32 Value);
	void SetDLSS_FG(int32 Value);
	void SetFSR_FI(int32 Value);
	void SetGlobalIllumination(int32 Value);
	void SetLensFlare(int32 Value);
	void SetMotionBlur(int32 Value);
	void SetNvidiaReflex(int32 Value);
	void SetPresetIndex(int32 Value);
	void SetReflection(int32 Value);
	void SetScreenPercentageQuality(int32 Value);
	void SetSharpness(float Value);
	void SetVirtualShadowMap(int32 Value);
	void SetVolumetricFog(int32 Value);

	int32 GetAntiAliasing() const;
	struct FVector2D GetCurrentLookSensitivity(class UObject* WorldContextObject) const;
	int32 GetDLSS_FG() const;
	int32 GetFSR_FI() const;
	int32 GetGlobalIllumination() const;
	int32 GetLensFlare() const;
	int32 GetMotionBlur() const;
	int32 GetNvidiaReflex() const;
	int32 GetPresetIndex() const;
	int32 GetReflection() const;
	int32 GetScreenPercentageQuality() const;
	float GetSharpness() const;
	int32 GetVirtualShadowMap() const;
	int32 GetVolumetricFog() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaGameUserSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaGameUserSettings")
	}
	static class USmutaGameUserSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmutaGameUserSettings>();
	}
};
DUMPER7_ASSERTS_USmutaGameUserSettings;

// Class Smuta.SmutaNPCEquipmentComponent
// 0x00C8 (0x0428 - 0x0360)
class USmutaNPCEquipmentComponent final : public USmutaEquipmentComponent
{
public:
	TSubclassOf<class UGameplayAbility>           TakeOnEquipmentAbility;                            // 0x0360(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayAbility>           TakeOffEquipmentAbility;                           // 0x0368(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayAbility>           CancelTakingOnEquipmentAbility;                    // 0x0370(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayAbility>           CancelTakingOffEquipmentAbility;                   // 0x0378(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EEquipmentSlotType                            PendingSlot;                                       // 0x0380(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNPCAppearanceWrapper                  NPCAppearance;                                     // 0x0388(0x0018)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialOverridesDataAsset> SavedAppearanceOverrideFaceMaterials;          // 0x03A0(0x0028)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USmutaNPCMovementComponent> OwnersNPCMovementComponent;                     // 0x03C8(0x0028)(ExportObject, InstancedReference, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UNPCStateComponent>      OwnersNPCStateComponent;                           // 0x03F0(0x0028)(ExportObject, InstancedReference, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_418[0x10];                                     // 0x0418(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ApplyNPCAppearance(const struct FNPCAppearanceWrapper& Appearance);
	void ChangeActiveSlot_Finish(EEquipmentSlotType NewSlot);
	void ChangeActiveSlot_TakeNewSlot(EEquipmentSlotType NewSlot, bool bWasCanceled);
	void OnNPCStateChanged(const ENPCBehaviorState& OldState, const ENPCBehaviorState& NewState);
	void OnSmartObjectInteractionFinished(bool bSuccess);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaNPCEquipmentComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaNPCEquipmentComponent")
	}
	static class USmutaNPCEquipmentComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmutaNPCEquipmentComponent>();
	}
};
DUMPER7_ASSERTS_USmutaNPCEquipmentComponent;

// Class Smuta.SmutaNPCMovementComponent
// 0x0090 (0x1020 - 0x0F90)
class USmutaNPCMovementComponent final : public UTargetedCharacterMovementComponent
{
public:
	TWeakObjectPtr<class UNPCStateComponent>      OwnersNPCStateComponentRef;                        // 0x0F88(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseInterpDecelerationSpeedChange;                 // 0x0F90(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F91[0x3];                                      // 0x0F91(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DecelerationInterpSpeed;                           // 0x0F94(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNPCMovementInfo                       NPCMovementInfo;                                   // 0x0F98(0x0058)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EGroundMovementMode                           CurrentGroundMovementMode;                         // 0x0FF0(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_FF1[0x7];                                      // 0x0FF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const EGroundMovementMode& PreviousGroundMovementMode, const EGroundMovementMode& CurrentGroundMovementMode)> OnCurrentGroundMovementModeChanged; // 0x0FF8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1008[0x8];                                     // 0x1008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bInStartMove;                                      // 0x1010(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInTurn;                                           // 0x1011(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1012[0xE];                                     // 0x1012(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ApplyMoveSpeedPreset(const struct FDataTableRowHandle& Preset);
	bool GetMovementSettingsByGroundMovementMode(struct FNPCMovementSettings* NPCMovementSettings, const EGroundMovementMode& SearchGroundMovementMode);
	void OnNPCStateChanged(const ENPCBehaviorState& OldState, const ENPCBehaviorState& NewState);
	void SetGroundMovementMode(const EGroundMovementMode& NewGroundMovementMode);
	void SetLocomotionState(const ENPCBehaviorState& BehaviourState, EGroundMovementMode NewGroundMovementMode);
	void UpdateLocomotionState();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaNPCMovementComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaNPCMovementComponent")
	}
	static class USmutaNPCMovementComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmutaNPCMovementComponent>();
	}
};
DUMPER7_ASSERTS_USmutaNPCMovementComponent;

// Class Smuta.SmutaPlayerMappableKeyProfile
// 0x0000 (0x00A0 - 0x00A0)
class USmutaPlayerMappableKeyProfile final : public UEnhancedPlayerMappableKeyProfile
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaPlayerMappableKeyProfile")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaPlayerMappableKeyProfile")
	}
	static class USmutaPlayerMappableKeyProfile* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmutaPlayerMappableKeyProfile>();
	}
};
DUMPER7_ASSERTS_USmutaPlayerMappableKeyProfile;

// Class Smuta.SmutaSimpleDialogueGameplayBehavior
// 0x0020 (0x01C0 - 0x01A0)
class USmutaSimpleDialogueGameplayBehavior final : public USmutaDialogueGameplayBehavior
{
public:
	TMulticastInlineDelegate<void()>              OnPrepareSectionFinished;                          // 0x01A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B0[0x10];                                     // 0x01B0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaSimpleDialogueGameplayBehavior")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaSimpleDialogueGameplayBehavior")
	}
	static class USmutaSimpleDialogueGameplayBehavior* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmutaSimpleDialogueGameplayBehavior>();
	}
};
DUMPER7_ASSERTS_USmutaSimpleDialogueGameplayBehavior;

// Class Smuta.SmutaTabListWidget
// 0x0000 (0x03E0 - 0x03E0)
class USmutaTabListWidget final : public UCommonTabListWidgetBase
{
public:
	void SelectNextTab();
	void SelectPreviousTab();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaTabListWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaTabListWidget")
	}
	static class USmutaTabListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmutaTabListWidget>();
	}
};
DUMPER7_ASSERTS_USmutaTabListWidget;

// Class Smuta.SpawnOptimizationComponent
// 0x0040 (0x00F8 - 0x00B8)
class USpawnOptimizationComponent final : public USignificanceActorComponent
{
public:
	TMulticastInlineDelegate<void()>              OnDestroyDelegate;                                 // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnRespawnDelegate;                                 // 0x00C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         InvisibleDistance;                                 // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DestroyDistance;                                   // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E0[0x18];                                      // 0x00E0(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool ShouldSpawn() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpawnOptimizationComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpawnOptimizationComponent")
	}
	static class USpawnOptimizationComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpawnOptimizationComponent>();
	}
};
DUMPER7_ASSERTS_USpawnOptimizationComponent;

// Class Smuta.SplineVolumeComponent
// 0x0070 (0x06E0 - 0x0670)
class USplineVolumeComponent final : public USplineComponent
{
public:
	TMulticastInlineDelegate<void()>              OnEnterVolume;                                     // 0x0670(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnExitVolume;                                      // 0x0680(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UBillboardComponent*                    Billboard;                                         // 0x0690(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       SphereVolume;                                      // 0x0698(0x0008)(Edit, ExportObject, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ActorOverlapSphere;                                // 0x06A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ActorOverlapSpline;                                // 0x06A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceFade;                                      // 0x06B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Debug;                                             // 0x06B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6B5[0x2B];                                     // 0x06B5(0x002B)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void EndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void EnterVolume(class AActor* Actor);
	void ExitVolume(class AActor* Actor);
	void UpdateVolume(class AActor* Actor, float Alpha);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SplineVolumeComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SplineVolumeComponent")
	}
	static class USplineVolumeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USplineVolumeComponent>();
	}
};
DUMPER7_ASSERTS_USplineVolumeComponent;

// Class Smuta.SpyCameraBase
// 0x0188 (0x0420 - 0x0298)
class ASpyCameraBase : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	ESpyCameraState                               State;                                             // 0x02A0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ASpyCameraBase* InstigatorActor, ESpyCameraState State)> OnSpyCameraStateChanged; // 0x02A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            CameraSpyEffectClass;                              // 0x02B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInteractionComponent*                  InteractionComponent;                              // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                          BoxInteraction;                                    // 0x02C8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBillboardComponent*                    Billboard;                                         // 0x02D0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCineCameraComponent*                   CameraComponent;                                   // 0x02D8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionWidgetComponent*            InteractionWidgetComponent;                        // 0x02E0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESpyCameraEventType                           EventType;                                         // 0x02E8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ActorToFocus;                                      // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeToLook;                                        // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUpdateHUD;                                        // 0x02FC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsFade;                                           // 0x02FD(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          HasInnerVoiceOnFinished;                           // 0x02FE(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          HasInnerVoiceOnPlay;                               // 0x02FF(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSubtitlesInfo                         OnFinishedInnerInfo;                               // 0x0300(0x0038)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundWave>              OnFinishedInnerVoice;                              // 0x0338(0x0028)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         OnFinishedInnerVoiceStartTime;                     // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSubtitlesInfo                         OnPlayInnerInfo;                                   // 0x0368(0x0038)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundWave>              OnPlayInnerVoice;                                  // 0x03A0(0x0028)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         OnPlayInnerVoiceStartTime;                         // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            StartPlayerMontage;                                // 0x03D0(0x0028)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CameraInteractionDelay;                            // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bInnerVoiceOnPlayerCharacter;                      // 0x03FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3FD[0x23];                                     // 0x03FD(0x0023)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ActivateSpyCamera();
	void ChangeSpyCameraState(ESpyCameraState NewState);
	void DeactivateSpyCamera();
	void OnCameraDeactivated();
	void SpyCameraOut();
	void SpyCameraView();
	void StartSpyCamera();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpyCameraBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpyCameraBase")
	}
	static class ASpyCameraBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASpyCameraBase>();
	}
};
DUMPER7_ASSERTS_ASpyCameraBase;

// Class Smuta.StarterAnimData
// 0x0008 (0x0030 - 0x0028)
class UStarterAnimData final : public UAnimMetaData
{
public:
	EEnterCondition                               StarterType;                                       // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StarterAnimData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StarterAnimData")
	}
	static class UStarterAnimData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStarterAnimData>();
	}
};
DUMPER7_ASSERTS_UStarterAnimData;

// Class Smuta.TargetedWidgetComponent
// 0x0000 (0x06F0 - 0x06F0)
class UTargetedWidgetComponent final : public UWidgetComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetedWidgetComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetedWidgetComponent")
	}
	static class UTargetedWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetedWidgetComponent>();
	}
};
DUMPER7_ASSERTS_UTargetedWidgetComponent;

// Class Smuta.TeaseAbilityOptionalObject
// 0x0010 (0x0038 - 0x0028)
class UTeaseAbilityOptionalObject final : public UBaseOptionalAbilityObject
{
public:
	class UActionDataAsset*                       ActionDataAsset;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           AnimationTag;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	struct FGameplayTag GetAnimationTag();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TeaseAbilityOptionalObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TeaseAbilityOptionalObject")
	}
	static class UTeaseAbilityOptionalObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTeaseAbilityOptionalObject>();
	}
};
DUMPER7_ASSERTS_UTeaseAbilityOptionalObject;

// Class Smuta.TechDesignLibrary
// 0x0000 (0x0028 - 0x0028)
class UTechDesignLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void AutoCreateDialogueAsset(class UDlgDialogue* DialogueAsset, const int32 NodesCount);
	static void AutoFillDialogueAsset(class UDlgDialogue* DialogueAsset, class UObject* StringAsset, const TArray<struct FDialogueTableInfo>& DialogueTableInfo);
	static void AutoFillSpeechDialogueText(class UDlgNode* Node, class UObject* StringAsset, const class FString& AudioName);
	static void AutoFillSpeechSequenceDialogueText(class UDlgNode* Node, class UObject* StringAsset, const class FString& AudioName, int32 NodeIndex);
	static void AutoFillStringTable(class UObject* Asset, const class FString& ToKey, const class FString& ToSourceString);
	static void CheckAndFillStringTable(class UObject* Asset, const class UDataTable* DataTable, class FName KeyPropertyName, class FName ValuePropertyName);
	static class UObject* CreateCustomAsset(const class FString& AssetName, const class FString& AssetPath, class UClass* AssetClass, bool* bOutSuccess);
	static class FString FillEmotionOnDialogue(const class UDataTable* DataTable, const class FString& NodeText, class FName ValuePropertyName, class FName EmotionPropertyName);
	static void GenerateBS(const struct FBSWalkParams& WalkParams, class UBlendSpace* BlendSpaceTemplate);
	static TArray<struct FBlendSpaceAnalysisInfo> GetBlendSamplesFromBS(class UBlendSpace* BlendSpace);
	static class FString GetBranchDialogueName(const class FString& SourceString);
	static class FString GetDialogueNameToTable(const class FString& SourceString);
	static float GetEffectiveTimeDilation(const class UObject* WorldContextObject);
	static struct FEnchancedSplinePointParams GetEnchancedSplinePointParams(class UEnchancedSplineComponent* EnchancedSplineComponent, int32 PointIndex);
	static class FString GetPhraseNum(const class FString& SourceString);
	static TSet<TSoftObjectPtr<class UAnimMontage>> GetReferencedMontages(class AActor* InActor);
	static void GetSortedByHeights(const TArray<class UObject*>& Unsorted, const TArray<float>& Heights, TArray<class UObject*>* Sorted);
	static TSoftObjectPtr<class USoundWave> GetSpeakerAudio(const class FString& SoundInString, const TArray<class FString>& SoundArray);
	static TSoftObjectPtr<class UDataAsset> GetSpeakerPassport(const class FString& Passport);
	static class FName GetStringTableID(class UObject* StringAsset);
	static bool IsBegunPlay(const class AActor* Actor);
	static bool IsPlayInEditor(const class AActor* Actor);
	static bool MontageHasNotifyOfClass(const class UAnimMontage* Montage, class UClass* NotifyClass);
	static void NormalCurvesFromAnim(class UAnimSequence* AnimationSequence, float Delta);
	static void ReplaceSmartObjects();
	static void ScriptSetHiddenSteps(class UGenericQuest* Quest);
	static void ScriptSetNameAndDescription(class UGenericQuest* Quest, class UObject* StringTable);
	static void SearchAllAnimReferences(class UClass* Class_0, class USkeleton** Skeleton, TMap<class UBaseEquipmentSet*, TSubclassOf<class UEquipmentItem>>* Equipment);
	static void SetEnchancedSplinePointParams(class UEnchancedSplineComponent* EnchancedSplineComponent, const struct FEnchancedSplinePointParams& PointParams, int32 PointIndex);
	static void SetNodeDataToDialogueAsset(class UDlgNode_Speech* DialogueNode, class UDlgNodeData* NodeData);
	static void SetSmartObjectsCanUseCollectionProperty(bool bValue, class UObject* SmartObject);
	static void SetupFace(class USkeletalMesh* Face, TSubclassOf<class UAnimInstance> PostProcessAnimBlueprint, const TArray<TSubclassOf<class UAssetUserData>>& UserDataList);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TechDesignLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TechDesignLibrary")
	}
	static class UTechDesignLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTechDesignLibrary>();
	}
};
DUMPER7_ASSERTS_UTechDesignLibrary;

// Class Smuta.TraversalInteraction
// 0x01B0 (0x0448 - 0x0298)
class ATraversalInteraction : public AActor
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractionComponent*                  InteractionComponent;                              // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       InteractionLookOn;                                 // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       InteractionOverlap;                                // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBillboardComponent*                    Billboard;                                         // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                        DirectionArrow;                                    // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInteractionWidgetComponent*            InteractionWidgetComponent;                        // 0x02C8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        AnimTargetPoints;                                  // 0x02D0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETraversalType                                TraversalType;                                     // 0x02D8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTraversalSettings                     TraversalSettings;                                 // 0x02E0(0x0030)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bActiveAtStart;                                    // 0x0310(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableAfterInteraction;                          // 0x0311(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_312[0x6];                                      // 0x0312(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ATraversalInteraction>   PairInteraction;                                   // 0x0318(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<ETraversalType, struct FTraversalSettings> DefaultTraversalSettings;                        // 0x0340(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FVector2D, TSoftObjectPtr<class UAnimMontage>> ClimbingHeightMontages;               // 0x0390(0x0050)(Edit, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<struct FVector2D, TSoftObjectPtr<class UAnimMontage>> SqueezingDistanceMontages;            // 0x03E0(0x0050)(Edit, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_430[0x18];                                     // 0x0430(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void GenerateMotionWarpingPoints();
	void OnInteracted(class AActor* InteractedActor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TraversalInteraction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TraversalInteraction")
	}
	static class ATraversalInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATraversalInteraction>();
	}
};
DUMPER7_ASSERTS_ATraversalInteraction;

// Class Smuta.TutorialBasePopupHintContent
// 0x0030 (0x01A8 - 0x0178)
class UTutorialBasePopupHintContent : public UTutorialBaseContent
{
public:
	class FText                                   HintText;                                          // 0x0178(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   GamepadHintText;                                   // 0x0190(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialBasePopupHintContent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialBasePopupHintContent")
	}
	static class UTutorialBasePopupHintContent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialBasePopupHintContent>();
	}
};
DUMPER7_ASSERTS_UTutorialBasePopupHintContent;

// Class Smuta.TutorialComboHintContent
// 0x0058 (0x01D0 - 0x0178)
class UTutorialComboHintContent final : public UTutorialBaseContent
{
public:
	class FText                                   HintText;                                          // 0x0178(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   GamepadHintText;                                   // 0x0190(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         DelayBetweenActions;                               // 0x01A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeIntervalForAction;                             // 0x01AC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoCloseOnSuccess;                               // 0x01B0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AutoCloseTimeOnSuccess;                            // 0x01B4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanRepeatComboOnSuccess;                          // 0x01B8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDataTableRowHandle>            ComboInputActions;                                 // 0x01C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialComboHintContent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialComboHintContent")
	}
	static class UTutorialComboHintContent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialComboHintContent>();
	}
};
DUMPER7_ASSERTS_UTutorialComboHintContent;

// Class Smuta.TutorialComboWidget
// 0x0030 (0x04A0 - 0x0470)
class UTutorialComboWidget : public UTutorialBaseWidget
{
public:
	class UTutorialComboHintContent*              Content;                                           // 0x0470(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_478[0x28];                                     // 0x0478(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnComboFailed();
	void OnComboKeyPressed(int32 ComboKeyIndex);
	void OnComboRestarted();
	void OnComboSuccess();
	void SetContent(const class FName& InHintName, const class UTutorialComboHintContent* InContent);

	TArray<class UTutorialComboItemObject*> GetComboItems() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialComboWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialComboWidget")
	}
	static class UTutorialComboWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialComboWidget>();
	}
};
DUMPER7_ASSERTS_UTutorialComboWidget;

// Class Smuta.TutorialConfig
// 0x0050 (0x0080 - 0x0030)
class UTutorialConfig final : public UDataAsset
{
public:
	TMap<class FName, class UTutorialBaseContent*> Contents;                                         // 0x0030(0x0050)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	void GetContents(bool bInShowInCodex, TArray<class FName>* OutContent) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialConfig")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialConfig")
	}
	static class UTutorialConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialConfig>();
	}
};
DUMPER7_ASSERTS_UTutorialConfig;

// Class Smuta.TutorialItemObject
// 0x0010 (0x0038 - 0x0028)
class UTutorialItemObject final : public UObject
{
public:
	class FName                                   HintName;                                          // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTutorialBaseContent*                   Content;                                           // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialItemObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialItemObject")
	}
	static class UTutorialItemObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialItemObject>();
	}
};
DUMPER7_ASSERTS_UTutorialItemObject;

// Class Smuta.TutorialManager
// 0x0080 (0x00B0 - 0x0030)
class UTutorialManager final : public UGameInstanceSubsystem
{
public:
	TMulticastInlineDelegate<void(const class FName& HintName)> OnHintClosedDelegate;                // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class FName>                           ShownTutorials;                                    // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           ActiveTutorials;                                   // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTutorialConfig>         ConfigSoftPtr;                                     // 0x0060(0x0028)(Config, GlobalConfig, NoClear, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_88[0x28];                                      // 0x0088(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClearShownTutorials();
	void CloseTutorialHint(const class FName& HintName);
	void OnExitSmutaGame();
	void OnSubSystemsInited();
	void OnTutorialHintClosed(const class FName& HintName);
	void SetAllCodexTutorialsShown();
	bool ShowTutorialHint(const class FName& HintName);

	const class UTutorialConfig* GetConfig() const;
	class UTutorialBaseContent* GetContent(const class FName& HintName) const;
	TArray<class UTutorialItemObject*> GetShownTutorials(bool bForCodexOnly) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialManager")
	}
	static class UTutorialManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialManager>();
	}
};
DUMPER7_ASSERTS_UTutorialManager;

// Class Smuta.TutorialNonBlockingHintContent
// 0x0030 (0x01A8 - 0x0178)
class UTutorialNonBlockingHintContent final : public UTutorialBaseContent
{
public:
	class FText                                   HintText;                                          // 0x0178(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   GamepadHintText;                                   // 0x0190(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialNonBlockingHintContent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialNonBlockingHintContent")
	}
	static class UTutorialNonBlockingHintContent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialNonBlockingHintContent>();
	}
};
DUMPER7_ASSERTS_UTutorialNonBlockingHintContent;

// Class Smuta.TutorialPopupHintImageContent
// 0x0028 (0x01D0 - 0x01A8)
class UTutorialPopupHintImageContent final : public UTutorialBasePopupHintContent
{
public:
	TSoftObjectPtr<class UTexture2D>              Texture;                                           // 0x01A8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialPopupHintImageContent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialPopupHintImageContent")
	}
	static class UTutorialPopupHintImageContent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialPopupHintImageContent>();
	}
};
DUMPER7_ASSERTS_UTutorialPopupHintImageContent;

// Class Smuta.TutorialPopupHintVideoContent
// 0x0028 (0x01D0 - 0x01A8)
class UTutorialPopupHintVideoContent final : public UTutorialBasePopupHintContent
{
public:
	TSoftObjectPtr<class UMediaSource>            MediaSource;                                       // 0x01A8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialPopupHintVideoContent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialPopupHintVideoContent")
	}
	static class UTutorialPopupHintVideoContent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialPopupHintVideoContent>();
	}
};
DUMPER7_ASSERTS_UTutorialPopupHintVideoContent;

// Class Smuta.TutorialPopupWidget
// 0x0008 (0x0478 - 0x0470)
class UTutorialPopupWidget : public UTutorialBaseWidget
{
public:
	class UTutorialBasePopupHintContent*          Content;                                           // 0x0470(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void SetContent(const class FName& InHintName, const class UTutorialBasePopupHintContent* InContent);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialPopupWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialPopupWidget")
	}
	static class UTutorialPopupWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialPopupWidget>();
	}
};
DUMPER7_ASSERTS_UTutorialPopupWidget;

// Class Smuta.DistanceTraitsSetting
// 0x0010 (0x0038 - 0x0028)
class UDistanceTraitsSetting final : public UObject
{
public:
	EDistanceCheckType                            DistanceCheckType;                                 // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Distance;                                          // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Tolerance;                                         // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DistanceTraitsSetting")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DistanceTraitsSetting")
	}
	static class UDistanceTraitsSetting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDistanceTraitsSetting>();
	}
};
DUMPER7_ASSERTS_UDistanceTraitsSetting;

// Class Smuta.UIFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UUIFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class UWidget* GetMostLeftWidgetInPanel(const class UUniformGridPanel* ParentWidget, const int32 RowNumber);
	static class UWidget* GetMostRightWidgetInPanel(const class UUniformGridPanel* ParentWidget, const int32 RowNumber);
	static class UWidget* GetNextChildWidget(const TArray<class UPanelWidget*>& ParentWidgets, const class UWidget* ChildWidget, const bool bNext);
	static class UUniformGridSlot* GetNextUniformGridSlot(const class UUniformGridPanel* ParentWidget, const class UUniformGridSlot* Slot, const EUniformGridPanelDirection Direction);
	static class UWidget* GetNextUniformGridSlotFromWidget(const class UUniformGridPanel* ParentWidget, const class UWidget* ChildWidget, const EUniformGridPanelDirection Direction);
	static int32 GetWidgetColumnInPanel(const class UUniformGridPanel* ParentWidget, const class UWidget* ChildWidget);
	static int32 GetWidgetRowInPanel(const class UUniformGridPanel* ParentWidget, const class UWidget* ChildWidget);
	static bool IsWidgetMostLeftInPanel(const class UUniformGridPanel* ParentWidget, const class UWidget* ChildWidget);
	static bool IsWidgetMostRightInPanel(const class UUniformGridPanel* ParentWidget, const class UWidget* ChildWidget);
	static void SetMousePosition(float LocationX, float LocationY);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UIFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UIFunctionLibrary")
	}
	static class UUIFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UUIFunctionLibrary;

// Class Smuta.UpgradesSubsystem
// 0x0010 (0x0040 - 0x0030)
class UUpgradesSubsystem final : public UGameInstanceSubsystem
{
public:
	TArray<TSubclassOf<class UBaseUpgradeObject>> GrantedUpgradesClasses;                            // 0x0030(0x0010)(ZeroConstructor, SaveGame, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	static TSubclassOf<class UBaseUpgradeObject> GetUpgradeClassFromRowHandle(const struct FDataTableRowHandle& UpgradeRowHandle);

	void ApplyUpgradeByClass(TSubclassOf<class UBaseUpgradeObject> Upgrade);
	void ApplyUpgradeByRowHandle(const struct FDataTableRowHandle& UpgradeRowHandle);

	bool IsUpgradeClassApplied(TSubclassOf<class UBaseUpgradeObject> Upgrade) const;
	bool IsUpgradeRowHandleApplied(const struct FDataTableRowHandle& UpgradeRowHandle) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UpgradesSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UpgradesSubsystem")
	}
	static class UUpgradesSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUpgradesSubsystem>();
	}
};
DUMPER7_ASSERTS_UUpgradesSubsystem;

// Class Smuta.VATSubsystem
// 0x0018 (0x0058 - 0x0040)
class UVATSubsystem final : public UTickableWorldSubsystem
{
public:
	float                                         GlobalVATTime;                                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AVertexActor*>                   VertexActors;                                      // 0x0048(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)

public:
	bool AddVertexActor(class AVertexActor* VertexActor);
	bool RemoveVertexActor(class AVertexActor* VertexActor);

	float GetGlobalVATTime() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VATSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VATSubsystem")
	}
	static class UVATSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVATSubsystem>();
	}
};
DUMPER7_ASSERTS_UVATSubsystem;

// Class Smuta.VertexActorDialogue
// 0x0170 (0x0510 - 0x03A0)
class AVertexActorDialogue : public ABaseVertexActor
{
public:
	class UChildActorComponent*                   VertexActorSpeaker;                                // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                   VertexActorListener;                               // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                       AudioTriggerDialogue;                              // 0x03A8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                        AudioVoiceDialogue;                                // 0x03B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeOffset;                                        // 0x03B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PlayRate;                                          // 0x03BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVertexAssetDialogue*                   VertexAssetDialogue;                               // 0x03C0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C8[0x8];                                      // 0x03C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVertexTalking                         VertexAssetSpeaker;                                // 0x03D0(0x0090)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVertexTalking                         VertexAssetListener;                               // 0x0460(0x0090)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class AVertexActor>               VertexClass;                                       // 0x04F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class AActor>>             ClassTriggerArray;                                 // 0x04F8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	float                                         AudioTriggerRadius;                                // 0x0508(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UAudioComponent* GetAudioComponentVoice();
	class USphereComponent* GetAudioTriggerComponent();
	float GetPlayRate();
	float GetTimeOffset();
	class UChildActorComponent* GetVertexActorListener();
	class UChildActorComponent* GetVertexActorSpeaker();
	class UVertexAssetDialogue* GetVertexAssetDialogue();
	struct FVertexTalking GetVertexAssetListener();
	struct FVertexTalking GetVertexAssetSpeaker();
	bool IsPlayerCheck(class AActor* ActorCheck);
	bool IsPlayerOverlap();
	void OnBeginOverlapPlayer(class UPrimitiveComponent* ThisComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnEndOverlapPlayer(class UPrimitiveComponent* ThisComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void SetPlayRate(float NewPlayRate);
	void SetTimeOffset(float NewTimeOffset);
	void SetVertexAssetDialogue(class UVertexAssetDialogue* NewVertexAssetDialogue);
	void SetVertexAssetListener(const struct FVertexTalking& NewVertexAssetListener);
	void SetVertexAssetSpeaker(const struct FVertexTalking& NewVertexAssetSpeaker);
	void ToggleDialogue(bool Activate);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VertexActorDialogue")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VertexActorDialogue")
	}
	static class AVertexActorDialogue* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVertexActorDialogue>();
	}
};
DUMPER7_ASSERTS_AVertexActorDialogue;

// Class Smuta.VertexAsset
// 0x00F0 (0x0120 - 0x0030)
class UVertexAsset final : public UDataAsset
{
public:
	class UStaticMesh*                            BodyStatic;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             StaticRelativeTransform;                           // 0x0040(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             CollisionRelativeTransform;                        // 0x00A0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HalfHeight;                                        // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CapsuleRadius;                                     // 0x0104(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVertexAnimInfo>                AnimArray;                                         // 0x0108(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bMale;                                             // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VertexAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VertexAsset")
	}
	static class UVertexAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVertexAsset>();
	}
};
DUMPER7_ASSERTS_UVertexAsset;

// Class Smuta.VertexAssetPair
// 0x0010 (0x0040 - 0x0030)
class UVertexAssetPair final : public UDataAsset
{
public:
	TArray<struct FVertexPairInfo>                VertexPairInfos;                                   // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VertexAssetPair")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VertexAssetPair")
	}
	static class UVertexAssetPair* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVertexAssetPair>();
	}
};
DUMPER7_ASSERTS_UVertexAssetPair;

// Class Smuta.VoiceTagsDataAsset
// 0x0050 (0x0080 - 0x0030)
class UVoiceTagsDataAsset final : public UDataAsset
{
public:
	TMap<struct FGameplayTag, class FString>      TagParticipantNames;                               // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	bool GetParticipantName(const struct FGameplayTag& VoiceTag, class FString* Name_0);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VoiceTagsDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VoiceTagsDataAsset")
	}
	static class UVoiceTagsDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVoiceTagsDataAsset>();
	}
};
DUMPER7_ASSERTS_UVoiceTagsDataAsset;

// Class Smuta.WaitSaveDoneCondition
// 0x0008 (0x0060 - 0x0058)
class UWaitSaveDoneCondition final : public UQuestStepCondition
{
public:
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WaitSaveDoneCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WaitSaveDoneCondition")
	}
	static class UWaitSaveDoneCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWaitSaveDoneCondition>();
	}
};
DUMPER7_ASSERTS_UWaitSaveDoneCondition;

// Class Smuta.WaitTutorialKeyDownCondition
// 0x0028 (0x0080 - 0x0058)
class UWaitTutorialKeyDownCondition final : public UQuestStepCondition
{
public:
	struct FDataTableRowHandle                    InputAction;                                       // 0x0058(0x0010)(Edit, SaveGame, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_68[0x18];                                      // 0x0068(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WaitTutorialKeyDownCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WaitTutorialKeyDownCondition")
	}
	static class UWaitTutorialKeyDownCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWaitTutorialKeyDownCondition>();
	}
};
DUMPER7_ASSERTS_UWaitTutorialKeyDownCondition;

// Class Smuta.WorkHumanPOI
// 0x0030 (0x0300 - 0x02D0)
class AWorkHumanPOI : public AHumanPOI
{
public:
	EHumanRoleType                                PointFor;                                          // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASpeakerHumanPOI*                       Speaker;                                           // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActionWorkPOI*>                 ActionWorkPOIs;                                    // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TArray<class AActionWorkPOI*>                 SortActionWorkPOIs;                                // 0x02F0(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WorkHumanPOI")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WorkHumanPOI")
	}
	static class AWorkHumanPOI* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWorkHumanPOI>();
	}
};
DUMPER7_ASSERTS_AWorkHumanPOI;

// Class Smuta.WorldMapSubsystem
// 0x0038 (0x0068 - 0x0030)
class UWorldMapSubsystem : public UWorldSubsystem
{
public:
	TMulticastInlineDelegate<void(class AWorldMapBorderActor* NewMap)> OnMap2DChanged;               // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          IsMiniMapVisible;                                  // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_41[0x27];                                      // 0x0041(0x0027)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_Initialize();
	class AWorldMapBorderActor* GetCurrentMap();
	class AWorldMapBorderActor* GetDefaultMap();
	void PushMap(class AWorldMapBorderActor* NewMap);
	void RemoveMap(class AWorldMapBorderActor* Map);
	void SetMiniMapVisibility(bool NewVisibility);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WorldMapSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WorldMapSubsystem")
	}
	static class UWorldMapSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWorldMapSubsystem>();
	}
};
DUMPER7_ASSERTS_UWorldMapSubsystem;

// Class Smuta.ZastavaFlag
// 0x0060 (0x02F8 - 0x0298)
class AZastavaFlag : public AActor
{
public:
	class UBillboardComponent*                    BillboardComponent;                                // 0x0298(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                        SceneComponent;                                    // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   Flagpole;                                          // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   Flag;                                              // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AZastavaMain*                           FlagOwner;                                         // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlagOffsetRate;                                    // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimerRate;                                         // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FlagOffset;                                        // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2CC[0x2C];                                     // 0x02CC(0x002C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ActivateFlag();
	void DeactivateFlag();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ZastavaFlag")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ZastavaFlag")
	}
	static class AZastavaFlag* GetDefaultObj()
	{
		return GetDefaultObjImpl<AZastavaFlag>();
	}
};
DUMPER7_ASSERTS_AZastavaFlag;

// Class Smuta.ZastavaPatrol
// 0x0018 (0x0378 - 0x0360)
class AZastavaPatrol final : public ASpawnerPointZastava
{
public:
	bool                                          HasReactToAlarm;                                   // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          IsLeader;                                          // 0x0361(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_362[0x6];                                      // 0x0362(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADefaultCharacter*>              PatrolTeam;                                        // 0x0368(0x0010)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ZastavaPatrol")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ZastavaPatrol")
	}
	static class AZastavaPatrol* GetDefaultObj()
	{
		return GetDefaultObjImpl<AZastavaPatrol>();
	}
};
DUMPER7_ASSERTS_AZastavaPatrol;

// Class Smuta.ZastavaSub
// 0x02C0 (0x05E0 - 0x0320)
class AZastavaSub : public AZastavaBase
{
public:
	bool                                          IsCapture;                                         // 0x0320(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AZastavaMain*                           MainZastava;                                       // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USplineMeshComponent*>           SubBorders;                                        // 0x0330(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<class ASpawnerPointZastava*, struct FEnemyData> NightGuard;                                 // 0x0340(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TMap<class ASpawnerPointZastava*, struct FPatrolData> Patrol;                                    // 0x0390(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TMap<class ASpawnerPointZastava*, struct FEnemyData> guard;                                      // 0x03E0(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TMap<class ASpawnerPointZastava*, struct FEnemyData> FreeMember;                                 // 0x0430(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TArray<class AZastavaPOI*>                    RamblePoints;                                      // 0x0480(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TMap<class ASpawnerPointZastava*, struct FEnemyData> NewNightGuard;                              // 0x0490(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TMap<class ASpawnerPointZastava*, struct FPatrolData> NewPatrol;                                 // 0x04E0(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TMap<class ASpawnerPointZastava*, struct FEnemyData> NewGuard;                                   // 0x0530(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TMap<class ASpawnerPointZastava*, struct FEnemyData> NewFreeMember;                              // 0x0580(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TArray<class AZastavaPOI*>                    NewRamblePoints;                                   // 0x05D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ZastavaSub")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ZastavaSub")
	}
	static class AZastavaSub* GetDefaultObj()
	{
		return GetDefaultObjImpl<AZastavaSub>();
	}
};
DUMPER7_ASSERTS_AZastavaSub;

// Class Smuta.MainAIController
// 0x0020 (0x03E0 - 0x03C0)
class AMainAIController : public AFightZoneAIController
{
public:
	class UBehaviorTree*                          DefaultBehaviorTree;                               // 0x03C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class USmartObjectHelperComponent> SmartObjectHelperComponent;                    // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UEnemyAggroController>   EnemyAggroController;                              // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UTargetPrioritizationComponent> TargetPrioritizationComponent;              // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void SetCharacterFocalPoint(const struct FVector& NewFocus);
	void SetCharacterFocus(class AActor* NewFocus);
	void SetEnemyFocalPoint(const struct FVector& NewFocus);
	void SetEnemyFocus(class AActor* NewFocus);
	void SetGameplayFocalPoint(const struct FVector& NewFocus);
	void SetGameplayFocus(class AActor* NewFocus);
	void SetScriptFocalPoint(const struct FVector& NewFocus);
	void SetScriptFocus(class AActor* NewFocus);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MainAIController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MainAIController")
	}
	static class AMainAIController* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMainAIController>();
	}
};
DUMPER7_ASSERTS_AMainAIController;

// Class Smuta.SmutaCommonButtonBase
// 0x0020 (0x15A0 - 0x1580)
class USmutaCommonButtonBase : public UCommonButtonBase
{
public:
	TMulticastInlineDelegate<void(bool bPresed)>  ActionPressDelegate;                               // 0x1580(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1590[0x10];                                    // 0x1590(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SendClickedEvent();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SmutaCommonButtonBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SmutaCommonButtonBase")
	}
	static class USmutaCommonButtonBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmutaCommonButtonBase>();
	}
};
DUMPER7_ASSERTS_USmutaCommonButtonBase;

}

