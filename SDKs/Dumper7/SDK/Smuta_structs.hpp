#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Smuta

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CombatHitDetection_structs.hpp"
#include "CommandExtention_structs.hpp"
#include "InventorySystemModule_structs.hpp"
#include "Engine_structs.hpp"
#include "SubtitlesSystem_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// Enum Smuta.EGroundMovementMode
// NumValues: 0x0005
enum class EGroundMovementMode : uint8
{
	Walk                                     = 0,
	Run                                      = 1,
	Sprint                                   = 2,
	Crouch                                   = 3,
	EGroundMovementMode_MAX                  = 4,
};

// Enum Smuta.EDetectionAIState
// NumValues: 0x0007
enum class EDetectionAIState : uint8
{
	Calm                                     = 0,
	Suspicion                                = 1,
	Search                                   = 2,
	Found                                    = 3,
	Battle                                   = 4,
	Dead                                     = 5,
	EDetectionAIState_MAX                    = 6,
};

// Enum Smuta.EEvidenceState
// NumValues: 0x0005
enum class EEvidenceState : uint8
{
	None                                     = 0,
	Waited                                   = 1,
	Activated                                = 2,
	Deactivated                              = 3,
	EEvidenceState_MAX                       = 4,
};

// Enum Smuta.ESmutaDLCFraction
// NumValues: 0x0008
enum class ESmutaDLCFraction : uint8
{
	SDF_None                                 = 0,
	SDF_Fraction1                            = 1,
	SDF_Fraction2                            = 2,
	SDF_Fraction3                            = 3,
	SDF_Fraction4                            = 4,
	SDF_Fraction5                            = 5,
	SDF_Fraction6                            = 6,
	SDF_Max                                  = 7,
};

// Enum Smuta.EInteractionActorState
// NumValues: 0x0004
enum class EInteractionActorState : uint8
{
	None                                     = 0,
	Activated                                = 1,
	Deactivated                              = 2,
	EInteractionActorState_MAX               = 3,
};

// Enum Smuta.ENPCBehaviorState
// NumValues: 0x0005
enum class ENPCBehaviorState : uint8
{
	Calm                                     = 0,
	Search                                   = 1,
	InBattle                                 = 2,
	Flee                                     = 3,
	ENPCBehaviorState_MAX                    = 4,
};

// Enum Smuta.EActivatedObjectState
// NumValues: 0x0004
enum class EActivatedObjectState : uint8
{
	AOS_None                                 = 0,
	AOS_Activated                            = 1,
	AOS_Deactivated                          = 2,
	AOS_MAX                                  = 3,
};

// Enum Smuta.ESpyCameraState
// NumValues: 0x0005
enum class ESpyCameraState : uint8
{
	None                                     = 0,
	Waited                                   = 1,
	Activated                                = 2,
	Deactivated                              = 3,
	ESpyCameraState_MAX                      = 4,
};

// Enum Smuta.ESupportEvidenceStatus
// NumValues: 0x0004
enum class ESupportEvidenceStatus : uint8
{
	None                                     = 0,
	Locked                                   = 1,
	Unlocked                                 = 2,
	ESupportEvidenceStatus_MAX               = 3,
};

// Enum Smuta.ENPCAnimatedArmId
// NumValues: 0x0005
enum class ENPCAnimatedArmId : uint8
{
	AAI_None                                 = 0,
	AAI_Left                                 = 1,
	AAI_Right                                = 2,
	AAI_Both                                 = 3,
	AAI_MAX                                  = 4,
};

// Enum Smuta.EAbilityInputID
// NumValues: 0x0019
enum class EAbilityInputID : uint8
{
	None                                     = 0,
	Confirm                                  = 1,
	Cancel                                   = 2,
	Sprint                                   = 3,
	SprintGamepad                            = 4,
	Jump                                     = 5,
	Mount                                    = 6,
	LightAttack                              = 7,
	HeavyAttack                              = 8,
	KickAttack                               = 9,
	VigorousAttack                           = 10,
	RangeAttack                              = 11,
	AimMode                                  = 12,
	Reload                                   = 13,
	FencingDefence                           = 14,
	DodgeDefence                             = 15,
	WeaponSwitch                             = 16,
	RangeWeaponFirstSlot                     = 17,
	RangeWeaponSecondSlot                    = 18,
	UseConsumable                            = 19,
	Intuition                                = 20,
	Search                                   = 21,
	StealthSwitch                            = 22,
	Distract                                 = 23,
	EAbilityInputID_MAX                      = 24,
};

// Enum Smuta.EMontageTagSelectionApproach
// NumValues: 0x0005
enum class EMontageTagSelectionApproach : uint8
{
	MTS_ByDefaultTagOnly                     = 0,
	MTS_ByCurrentMontageMetaData             = 1,
	MTS_ByOwnerActorTags                     = 2,
	MTS_ByInstigatorActorTags                = 3,
	MTS_MAX                                  = 4,
};

// Enum Smuta.EShootType
// NumValues: 0x0004
enum class EShootType : uint8
{
	None                                     = 0,
	Quick                                    = 1,
	Aimed                                    = 2,
	EShootType_MAX                           = 3,
};

// Enum Smuta.EAimStand
// NumValues: 0x0004
enum class EAimStand : uint8
{
	None                                     = 0,
	Stand                                    = 1,
	Crouch                                   = 2,
	EAimStand_MAX                            = 3,
};

// Enum Smuta.EShootAnimationType
// NumValues: 0x0009
enum class EShootAnimationType : uint8
{
	None                                     = 0,
	StartAim                                 = 1,
	IdleAim                                  = 2,
	Shoot                                    = 3,
	ReleaseAim                               = 4,
	NoAmmo                                   = 5,
	Reload                                   = 6,
	IdleAimBlocked                           = 7,
	EShootAnimationType_MAX                  = 8,
};

// Enum Smuta.EAimCenterMoveAnimationType
// NumValues: 0x0004
enum class EAimCenterMoveAnimationType : uint8
{
	None                                     = 0,
	Increase                                 = 1,
	Decrease                                 = 2,
	EAimCenterMoveAnimationType_MAX          = 3,
};

// Enum Smuta.EAimNotchMoveAnimationType
// NumValues: 0x0004
enum class EAimNotchMoveAnimationType : uint8
{
	None                                     = 0,
	Shrink                                   = 1,
	Expand                                   = 2,
	EAimNotchMoveAnimationType_MAX           = 3,
};

// Enum Smuta.EAimNotchSizeAnimationType
// NumValues: 0x0004
enum class EAimNotchSizeAnimationType : uint8
{
	None                                     = 0,
	Increase                                 = 1,
	Decrease                                 = 2,
	EAimNotchSizeAnimationType_MAX           = 3,
};

// Enum Smuta.EAimNotchElementPosition
// NumValues: 0x000A
enum class EAimNotchElementPosition : uint8
{
	None                                     = 0,
	Notch_TopLeft                            = 1,
	Notch_TopMid                             = 2,
	Notch_TopRight                           = 3,
	Notch_MidLeft                            = 4,
	Notch_MidRight                           = 5,
	Notch_BottomLeft                         = 6,
	Notch_BottomMid                          = 7,
	Notch_BottomRight                        = 8,
	EAimNotchElementPosition_MAX             = 9,
};

// Enum Smuta.ENPCAction
// NumValues: 0x0009
enum class Smuta::ENPCAction : uint8
{
	None                                     = 0,
	Hit                                      = 1,
	Agression                                = 2,
	Defence                                  = 3,
	LightAttack                              = 4,
	AttackSkill                              = 5,
	Kick                                     = 6,
	Dodge                                    = 7,
	ENPCAction_MAX                           = 8,
};

// Enum Smuta.EAnimalType
// NumValues: 0x0004
enum class EAnimalType : uint8
{
	None                                     = 0,
	Deer                                     = 1,
	Fox                                      = 2,
	EAnimalType_MAX                          = 3,
};

// Enum Smuta.EAnimalState
// NumValues: 0x0008
enum class EAnimalState : uint8
{
	None                                     = 0,
	Stand                                    = 1,
	Walk                                     = 2,
	Run                                      = 3,
	Eat                                      = 4,
	Rest                                     = 5,
	Hunt                                     = 6,
	EAnimalState_MAX                         = 7,
};

// Enum Smuta.EForestRestState
// NumValues: 0x0005
enum class EForestRestState : uint8
{
	None                                     = 0,
	Start                                    = 1,
	Idle                                     = 2,
	Finish                                   = 3,
	EForestRestState_MAX                     = 4,
};

// Enum Smuta.EForestEatState
// NumValues: 0x0004
enum class EForestEatState : uint8
{
	None                                     = 0,
	Digging                                  = 1,
	Action                                   = 2,
	EForestEatState_MAX                      = 3,
};

// Enum Smuta.ERoute
// NumValues: 0x0005
enum class ERoute : uint8
{
	Forward                                  = 0,
	Left                                     = 1,
	Right                                    = 2,
	Back                                     = 3,
	ERoute_MAX                               = 4,
};

// Enum Smuta.EAttackAbilityEndReason
// NumValues: 0x0005
enum class EAttackAbilityEndReason : uint8
{
	None                                     = 0,
	MontageInterrupt                         = 1,
	MontageEnd                               = 2,
	Canceled                                 = 3,
	EAttackAbilityEndReason_MAX              = 4,
};

// Enum Smuta.EAttackAnimationRandomType
// NumValues: 0x0004
enum class EAttackAnimationRandomType : uint8
{
	DefaultRandom                            = 0,
	ExclusiveRandom                          = 1,
	Queue                                    = 2,
	EAttackAnimationRandomType_MAX           = 3,
};

// Enum Smuta.EAttackStage
// NumValues: 0x0005
enum class EAttackStage : uint8
{
	None                                     = 0,
	Preparation                              = 1,
	Execution                                = 2,
	Recover                                  = 3,
	EAttackStage_MAX                         = 4,
};

// Enum Smuta.EWaterSurfaceType
// NumValues: 0x0004
enum class EWaterSurfaceType : uint8
{
	NoWater                                  = 0,
	CleanWater                               = 1,
	SwampWater                               = 2,
	EWaterSurfaceType_MAX                    = 3,
};

// Enum Smuta.EFightAction
// NumValues: 0x000E
enum class EFightAction : uint8
{
	None                                     = 0,
	LightAttack                              = 1,
	HeavyAttack                              = 2,
	DefaultAttack                            = 3,
	UblockableAttack                         = 4,
	UnparryAttack                            = 5,
	Block                                    = 6,
	Dodge                                    = 7,
	Parry                                    = 8,
	Kick                                     = 9,
	RangeAttack                              = 10,
	Hit                                      = 11,
	Finisher                                 = 12,
	EFightAction_MAX                         = 13,
};

// Enum Smuta.ECityAnimalType
// NumValues: 0x0004
enum class ECityAnimalType : uint8
{
	None                                     = 0,
	Dog                                      = 1,
	Cat                                      = 2,
	ECityAnimalType_MAX                      = 3,
};

// Enum Smuta.ECodexImageLayout
// NumValues: 0x0004
enum class ECodexImageLayout : uint8
{
	Left                                     = 0,
	Top                                      = 1,
	Count                                    = 2,
	ECodexImageLayout_MAX                    = 3,
};

// Enum Smuta.ECodexTriggerShape
// NumValues: 0x0004
enum class ECodexTriggerShape : uint8
{
	Cube                                     = 0,
	Sphere                                   = 1,
	Capsule                                  = 2,
	ECodexTriggerShape_MAX                   = 3,
};

// Enum Smuta.EComboType
// NumValues: 0x0005
enum class EComboType : uint8
{
	None                                     = 0,
	Light                                    = 1,
	Heavy                                    = 2,
	Mixed                                    = 3,
	EComboType_MAX                           = 4,
};

// Enum Smuta.EComboAttackType
// NumValues: 0x0005
enum class EComboAttackType : uint8
{
	None                                     = 0,
	Starter                                  = 1,
	Middle                                   = 2,
	Finisher                                 = 3,
	EComboAttackType_MAX                     = 4,
};

// Enum Smuta.EAttackType
// NumValues: 0x0005
enum class EAttackType : uint8
{
	None                                     = 0,
	Light                                    = 1,
	Heavy                                    = 2,
	Range                                    = 3,
	EAttackType_MAX                          = 4,
};

// Enum Smuta.EEnemyPosition
// NumValues: 0x0006
enum class EEnemyPosition : uint8
{
	InFront                                  = 0,
	Left                                     = 1,
	Right                                    = 2,
	BehindLeft                               = 3,
	BehindRight                              = 4,
	EEnemyPosition_MAX                       = 5,
};

// Enum Smuta.EWeaponPosition
// NumValues: 0x0004
enum class EWeaponPosition : uint8
{
	Default                                  = 0,
	Left                                     = 1,
	Right                                    = 2,
	EWeaponPosition_MAX                      = 3,
};

// Enum Smuta.ELegsPosition
// NumValues: 0x0004
enum class ELegsPosition : uint8
{
	Default                                  = 0,
	LeftLegForward                           = 1,
	RightLegForward                          = 2,
	ELegsPosition_MAX                        = 3,
};

// Enum Smuta.EDirectionSide
// NumValues: 0x0006
enum class EDirectionSide : uint8
{
	DS_None                                  = 0,
	DS_Front                                 = 1,
	DS_Back                                  = 2,
	DS_Left                                  = 3,
	DS_Right                                 = 4,
	DS_MAX                                   = 5,
};

// Enum Smuta.EStimulusType
// NumValues: 0x0008
enum class EStimulusType : uint8
{
	None                                     = 0,
	Stone                                    = 1,
	NPC                                      = 2,
	NPC_Corpse                               = 3,
	NPC_Sleep                                = 4,
	NPC_Help                                 = 5,
	Player                                   = 6,
	EStimulusType_MAX                        = 7,
};

// Enum Smuta.ESenseType
// NumValues: 0x0005
enum class ESenseType : uint8
{
	Other                                    = 0,
	Sight                                    = 1,
	Hearing                                  = 2,
	SixSense                                 = 3,
	ESenseType_MAX                           = 4,
};

// Enum Smuta.EHearingSenseType
// NumValues: 0x0010
enum class EHearingSenseType : uint8
{
	Default                                  = 0,
	Walking                                  = 1,
	Running                                  = 2,
	Crouch                                   = 3,
	CrouchRunning                            = 4,
	Attack                                   = 5,
	RangeAttack                              = 6,
	Death                                    = 7,
	Stone                                    = 8,
	StoneHit                                 = 9,
	Pistol                                   = 10,
	PistolHit                                = 11,
	Knife                                    = 12,
	KnifeHit                                 = 13,
	KnockOut                                 = 14,
	MAX                                      = 15,
};

// Enum Smuta.EFraction
// NumValues: 0x0013
enum class EFraction : uint8
{
	None                                     = 0,
	Player                                   = 1,
	QuestGiver                               = 2,
	CommonEnemy                              = 3,
	CommonEnemyLow                           = 4,
	CommonEnemyHigh                          = 5,
	Peasant                                  = 6,
	Townsman                                 = 7,
	Strelets                                 = 8,
	Pole                                     = 9,
	PoleMiddle                               = 10,
	Brigand                                  = 11,
	German                                   = 12,
	Cherkas                                  = 13,
	Cossack                                  = 14,
	Animal                                   = 15,
	Pet                                      = 16,
	Fraction_Max                             = 17,
	EFraction_MAX                            = 18,
};

// Enum Smuta.EExtendedAttitude
// NumValues: 0x0005
enum class EExtendedAttitude : uint8
{
	Friendly                                 = 0,
	Neutral                                  = 1,
	Hostile                                  = 2,
	ScaryOf                                  = 3,
	EExtendedAttitude_MAX                    = 4,
};

// Enum Smuta.EAttackState2
// NumValues: 0x0008
enum class EAttackState2 : uint8
{
	Locomotion                               = 0,
	LightAttack                              = 1,
	HeavyAttack                              = 2,
	Evade                                    = 3,
	Block                                    = 4,
	GotHit                                   = 5,
	Dying                                    = 6,
	EAttackState2_MAX                        = 7,
};

// Enum Smuta.EAttackLevel2
// NumValues: 0x0004
enum class EAttackLevel2 : uint8
{
	Low                                      = 0,
	Middle                                   = 1,
	High                                     = 2,
	EAttackLevel2_MAX                        = 3,
};

// Enum Smuta.EAttackSide2
// NumValues: 0x0007
enum class EAttackSide2 : uint8
{
	LeftToRight                              = 0,
	RightToLeft                              = 1,
	TopDown                                  = 2,
	Forward                                  = 3,
	UpperCut                                 = 4,
	Back                                     = 5,
	EAttackSide2_MAX                         = 6,
};

// Enum Smuta.ItemType
// NumValues: 0x0007
enum class Smuta::EItemType : uint8
{
	Item_Other                               = 0,
	Item_Saber                               = 1,
	Item_Axe                                 = 2,
	Item_Cure                                = 3,
	Item_Bardiche                            = 4,
	Item_Knife_Torch                         = 5,
	Item_MAX                                 = 6,
};

// Enum Smuta.EEvidenceType
// NumValues: 0x0005
enum class EEvidenceType : uint8
{
	None                                     = 0,
	Static                                   = 1,
	Skeletal                                 = 2,
	Decal                                    = 3,
	EEvidenceType_MAX                        = 4,
};

// Enum Smuta.EEvidenceInteraction
// NumValues: 0x0004
enum class EEvidenceInteraction : uint8
{
	None                                     = 0,
	PickUp                                   = 1,
	Check                                    = 2,
	EEvidenceInteraction_MAX                 = 3,
};

// Enum Smuta.EEvidenceAnimationMode
// NumValues: 0x0005
enum class EEvidenceAnimationMode : uint8
{
	TurnToEvidence                           = 0,
	TurnToEvidenceArrow                      = 1,
	WarpToEvidence                           = 2,
	WarpAndTurn                              = 3,
	EEvidenceAnimationMode_MAX               = 4,
};

// Enum Smuta.EInvestigationTrackingMode
// NumValues: 0x0006
enum class EInvestigationTrackingMode : uint8
{
	Right                                    = 0,
	RightClose                               = 1,
	Left                                     = 2,
	LeftClose                                = 3,
	Neutral                                  = 4,
	EInvestigationTrackingMode_MAX           = 5,
};

// Enum Smuta.EFootprintsType
// NumValues: 0x0003
enum class EFootprintsType : uint8
{
	Independent                              = 0,
	FromArea                                 = 1,
	EFootprintsType_MAX                      = 2,
};

// Enum Smuta.EFractionState
// NumValues: 0x0005
enum class EFractionState : uint8
{
	None                                     = 0,
	Normal                                   = 1,
	Secret                                   = 2,
	Dead                                     = 3,
	EFractionState_MAX                       = 4,
};

// Enum Smuta.EHumanRoleType
// NumValues: 0x0013
enum class EHumanRoleType : uint8
{
	None                                     = 0,
	Bezdelnik                                = 1,
	Prodavets                                = 2,
	Povar                                    = 3,
	SborshchikSena                           = 4,
	Loshadnik                                = 5,
	Kurnik                                   = 6,
	Remeslenik                               = 7,
	Sobiratel                                = 8,
	Shkuroder                                = 9,
	Kuznec                                   = 10,
	Prachka                                  = 11,
	Doyarka                                  = 12,
	Pyanitsa                                 = 13,
	Prokhozhiy                               = 14,
	Gusyatnik                                = 15,
	Dozorniy                                 = 16,
	Ozhidayushchiy                           = 17,
	EHumanRoleType_MAX                       = 18,
};

// Enum Smuta.EHumanAnimState
// NumValues: 0x0007
enum class EHumanAnimState : uint8
{
	Stand                                    = 0,
	Walk                                     = 1,
	Work                                     = 2,
	Rest                                     = 3,
	Speak                                    = 4,
	Pray                                     = 5,
	EHumanAnimState_MAX                      = 6,
};

// Enum Smuta.EHumanWorkState
// NumValues: 0x0006
enum class EHumanWorkState : uint8
{
	None                                     = 0,
	Rotate                                   = 1,
	Stand                                    = 2,
	Active                                   = 3,
	Speak                                    = 4,
	EHumanWorkState_MAX                      = 5,
};

// Enum Smuta.EHumanPrayState
// NumValues: 0x0005
enum class EHumanPrayState : uint8
{
	None                                     = 0,
	Rotate                                   = 1,
	Cross                                    = 2,
	Return                                   = 3,
	EHumanPrayState_MAX                      = 4,
};

// Enum Smuta.EHumanSpeakState
// NumValues: 0x0005
enum class EHumanSpeakState : uint8
{
	None                                     = 0,
	Rotate                                   = 1,
	Stand                                    = 2,
	Speak                                    = 3,
	EHumanSpeakState_MAX                     = 4,
};

// Enum Smuta.EHumanRestState
// NumValues: 0x0005
enum class EHumanRestState : uint8
{
	None                                     = 0,
	Start                                    = 1,
	Idle                                     = 2,
	Finish                                   = 3,
	EHumanRestState_MAX                      = 4,
};

// Enum Smuta.EActiveWorkState
// NumValues: 0x0004
enum class EActiveWorkState : uint8
{
	None                                     = 0,
	Stand                                    = 1,
	Activation                               = 2,
	EActiveWorkState_MAX                     = 3,
};

// Enum Smuta.EHumanType
// NumValues: 0x0004
enum class EHumanType : uint8
{
	None                                     = 0,
	Walker                                   = 1,
	Worker                                   = 2,
	EHumanType_MAX                           = 3,
};

// Enum Smuta.EHumanPOIState
// NumValues: 0x0005
enum class EHumanPOIState : uint8
{
	Free                                     = 0,
	Reserve                                  = 1,
	Busy                                     = 2,
	Lock                                     = 3,
	EHumanPOIState_MAX                       = 4,
};

// Enum Smuta.EDayNightState
// NumValues: 0x0005
enum class EDayNightState : uint8
{
	None                                     = 0,
	Day                                      = 1,
	Night                                    = 2,
	Forever                                  = 3,
	EDayNightState_MAX                       = 4,
};

// Enum Smuta.EPlaceResidence
// NumValues: 0x0004
enum class EPlaceResidence : uint8
{
	None                                     = 0,
	Peasant                                  = 1,
	Citizen                                  = 2,
	EPlaceResidence_MAX                      = 3,
};

// Enum Smuta.EUnlockingEvent
// NumValues: 0x0005
enum class EUnlockingEvent : uint8
{
	None                                     = 0,
	LockingEvidence                          = 1,
	QuestEvent                               = 2,
	Key                                      = 3,
	EUnlockingEvent_MAX                      = 4,
};

// Enum Smuta.EGenderType
// NumValues: 0x0004
enum class EGenderType : uint8
{
	None                                     = 0,
	Male                                     = 1,
	Female                                   = 2,
	EGenderType_MAX                          = 3,
};

// Enum Smuta.EOverlapType
// NumValues: 0x0003
enum class EOverlapType : uint8
{
	BeginOverlap                             = 0,
	EndOverlap                               = 1,
	EOverlapType_MAX                         = 2,
};

// Enum Smuta.ENPCAttackType
// NumValues: 0x0006
enum class ENPCAttackType : uint8
{
	None                                     = 0,
	Default                                  = 1,
	Unblockable                              = 2,
	Unparry                                  = 3,
	Dodge                                    = 4,
	ENPCAttackType_MAX                       = 5,
};

// Enum Smuta.ENPCComboType
// NumValues: 0x0007
enum class ENPCComboType : uint8
{
	None                                     = 0,
	Default                                  = 1,
	Unblockable                              = 2,
	Unparry                                  = 3,
	Mixed                                    = 4,
	Counter                                  = 5,
	ENPCComboType_MAX                        = 6,
};

// Enum Smuta.ERotationPattern
// NumValues: 0x0008
enum class ERotationPattern : uint8
{
	NoRotation                               = 0,
	Left45                                   = 1,
	Left90                                   = 2,
	Left180                                  = 3,
	Right45                                  = 4,
	Right90                                  = 5,
	Right180                                 = 6,
	ERotationPattern_MAX                     = 7,
};

// Enum Smuta.EStartRotation
// NumValues: 0x000A
enum class EStartRotation : uint8
{
	F                                        = 0,
	L45                                      = 1,
	L90                                      = 2,
	L135                                     = 3,
	L180                                     = 4,
	R45                                      = 5,
	R90                                      = 6,
	R135                                     = 7,
	R180                                     = 8,
	EStartRotation_MAX                       = 9,
};

// Enum Smuta.EPostProcessLayer
// NumValues: 0x0005
enum class EPostProcessLayer : uint8
{
	High                                     = 0,
	Mid                                      = 1,
	Low                                      = 2,
	Count                                    = 3,
	EPostProcessLayer_MAX                    = 4,
};

// Enum Smuta.EPostProcessOrder
// NumValues: 0x0005
enum class EPostProcessOrder : uint8
{
	InsertBefore                             = 0,
	Interrupt                                = 1,
	Queue                                    = 2,
	Reject                                   = 3,
	EPostProcessOrder_MAX                    = 4,
};

// Enum Smuta.EForceBlendspace
// NumValues: 0x0003
enum class EForceBlendspace : uint8
{
	Default                                  = 0,
	Custom                                   = 1,
	EForceBlendspace_MAX                     = 2,
};

// Enum Smuta.EPrevResult
// NumValues: 0x0004
enum class EPrevResult : uint8
{
	FirstRound                               = 0,
	PrevWin                                  = 1,
	PrevLose                                 = 2,
	EPrevResult_MAX                          = 3,
};

// Enum Smuta.EQTE_Type
// NumValues: 0x0007
enum class EQTE_Type : uint8
{
	QuickTapping                             = 0,
	ButtonsHolding                           = 1,
	ButtonsCombination                       = 2,
	LineHitting                              = 3,
	ThreeStones                              = 4,
	QuickTappingOverlapEnd                   = 5,
	EQTE_MAX                                 = 6,
};

// Enum Smuta.EQTE_FailAction
// NumValues: 0x0004
enum class EQTE_FailAction : uint8
{
	Current                                  = 0,
	Forward                                  = 1,
	Backward                                 = 2,
	EQTE_MAX                                 = 3,
};

// Enum Smuta.EQTE_WhoFirst
// NumValues: 0x0004
enum class EQTE_WhoFirst : uint8
{
	Player                                   = 0,
	NPC                                      = 1,
	Random                                   = 2,
	EQTE_MAX                                 = 3,
};

// Enum Smuta.EQTE_LHDir
// NumValues: 0x0005
enum class EQTE_LHDir : uint8
{
	CW                                       = 0,
	CCW                                      = 1,
	PushInvert                               = 2,
	CatchInvert                              = 3,
	EQTE_MAX                                 = 4,
};

// Enum Smuta.EQTE_InActionType
// NumValues: 0x0009
enum class EQTE_InActionType : uint8
{
	Start                                    = 0,
	NewRound                                 = 1,
	PlayerTurn                               = 2,
	NPCTurn                                  = 3,
	PlayerFroze                              = 4,
	PlayerWin                                = 5,
	PlayerLoose                              = 6,
	Phrase                                   = 7,
	EQTE_MAX                                 = 8,
};

// Enum Smuta.EQTE_Emotion
// NumValues: 0x000B
enum class EQTE_Emotion : uint8
{
	Default                                  = 0,
	Angry                                    = 1,
	Dobry                                    = 2,
	Ispug                                    = 3,
	Serious                                  = 4,
	Smile                                    = 5,
	Spoke                                    = 6,
	Udivlen                                  = 7,
	Vnimat                                   = 8,
	Grustny                                  = 9,
	EQTE_MAX                                 = 10,
};

// Enum Smuta.AttributeOp
// NumValues: 0x0006
enum class EAttributeOp : uint8
{
	Lower                                    = 0,
	LowerEqual                               = 1,
	Equal                                    = 2,
	GreatEqual                               = 3,
	Greater                                  = 4,
	AttributeOp_MAX                          = 5,
};

// Enum Smuta.EQTE_Dependence
// NumValues: 0x0008
enum class EQTE_Dependence : uint8
{
	None                                     = 0,
	Success                                  = 1,
	Round                                    = 2,
	Fail                                     = 3,
	FirstRound                               = 4,
	PrevWin                                  = 5,
	PrevLose                                 = 6,
	EQTE_MAX                                 = 7,
};

// Enum Smuta.EEnemyState
// NumValues: 0x0008
enum class EEnemyState : uint8
{
	GuardPoint                               = 0,
	PatrolPoints                             = 1,
	WarningPlayer                            = 2,
	Chase                                    = 3,
	Battle                                   = 4,
	LookingForEnemy                          = 5,
	Free                                     = 6,
	EEnemyState_MAX                          = 7,
};

// Enum Smuta.ESpyCameraEventType
// NumValues: 0x0004
enum class ESpyCameraEventType : uint8
{
	None                                     = 0,
	Interaction                              = 1,
	Overlapped                               = 2,
	ESpyCameraEventType_MAX                  = 3,
};

// Enum Smuta.EEnterCondition
// NumValues: 0x0006
enum class EEnterCondition : uint8
{
	Default                                  = 0,
	Sprint                                   = 1,
	Fall                                     = 2,
	Counter                                  = 3,
	Vigor                                    = 4,
	EEnterCondition_MAX                      = 5,
};

// Enum Smuta.ESupportEvidenceType
// NumValues: 0x0004
enum class ESupportEvidenceType : uint8
{
	None                                     = 0,
	Static                                   = 1,
	Skeletal                                 = 2,
	ESupportEvidenceType_MAX                 = 3,
};

// Enum Smuta.ETagQueryMatchType
// NumValues: 0x0004
enum class ETagQueryMatchType : uint8
{
	Any                                      = 0,
	All                                      = 1,
	None                                     = 2,
	ETagQueryMatchType_MAX                   = 3,
};

// Enum Smuta.ETransferEffectOperation
// NumValues: 0x0003
enum class ETransferEffectOperation : uint8
{
	AddEffect                                = 0,
	RemoveEffect                             = 1,
	ETransferEffectOperation_MAX             = 2,
};

// Enum Smuta.ETraversalType
// NumValues: 0x0006
enum class ETraversalType : uint8
{
	Climbing                                 = 0,
	Squeezing                                = 1,
	CrawlingUnder                            = 2,
	JumpingOver                              = 3,
	JumpingDown                              = 4,
	ETraversalType_MAX                       = 5,
};

// Enum Smuta.ETutorialComboItemState
// NumValues: 0x0004
enum class ETutorialComboItemState : uint8
{
	None                                     = 0,
	Success                                  = 1,
	Failed                                   = 2,
	ETutorialComboItemState_MAX              = 3,
};

// Enum Smuta.EDistanceCheckType
// NumValues: 0x0004
enum class EDistanceCheckType : uint8
{
	MoreThan                                 = 0,
	LessThan                                 = 1,
	Equal                                    = 2,
	EDistanceCheckType_MAX                   = 3,
};

// Enum Smuta.EUniformGridPanelDirection
// NumValues: 0x0005
enum class EUniformGridPanelDirection : uint8
{
	Left                                     = 0,
	Right                                    = 1,
	Up                                       = 2,
	Down                                     = 3,
	EUniformGridPanelDirection_MAX           = 4,
};

// Enum Smuta.EUpgradeType
// NumValues: 0x0008
enum class EUpgradeType : uint8
{
	Saber                                    = 0,
	Pistol                                   = 1,
	Knife                                    = 2,
	HPPotion                                 = 3,
	Health                                   = 4,
	Stealth                                  = 5,
	Concentration                            = 6,
	EUpgradeType_MAX                         = 7,
};

// Enum Smuta.EVillageAnimalType
// NumValues: 0x0008
enum class EVillageAnimalType : uint8
{
	None                                     = 0,
	Chicken                                  = 1,
	Rooster                                  = 2,
	Chick                                    = 3,
	Pig                                      = 4,
	Piglet                                   = 5,
	Cow                                      = 6,
	EVillageAnimalType_MAX                   = 7,
};

// Enum Smuta.EVillageRestState
// NumValues: 0x0005
enum class EVillageRestState : uint8
{
	None                                     = 0,
	Start                                    = 1,
	Idle                                     = 2,
	Finish                                   = 3,
	EVillageRestState_MAX                    = 4,
};

// Enum Smuta.EVillageEatState
// NumValues: 0x0004
enum class EVillageEatState : uint8
{
	None                                     = 0,
	Digging                                  = 1,
	Action                                   = 2,
	EVillageEatState_MAX                     = 3,
};

// Enum Smuta.EWarpUpdate
// NumValues: 0x0004
enum class EWarpUpdate : uint8
{
	EWU_OnlyWarpRotation                     = 0,
	EWU_OnlyWarpLocation                     = 1,
	EWU_WarpRotationAndLocation              = 2,
	EWU_MAX                                  = 3,
};

// Enum Smuta.EWeaponNoiseAttackType
// NumValues: 0x0004
enum class EWeaponNoiseAttackType : uint8
{
	LightAttack                              = 0,
	HeavyAttack                              = 1,
	RangeAttack                              = 2,
	EWeaponNoiseAttackType_MAX               = 3,
};

// Enum Smuta.EWeaponNoiseTarget
// NumValues: 0x0005
enum class EWeaponNoiseTarget : uint8
{
	Self                                     = 0,
	Target                                   = 1,
	Both                                     = 2,
	None                                     = 3,
	EWeaponNoiseTarget_MAX                   = 4,
};

// Enum Smuta.EZastavaPOIState
// NumValues: 0x0005
enum class EZastavaPOIState : uint8
{
	Free                                     = 0,
	Reserve                                  = 1,
	Busy                                     = 2,
	Lock                                     = 3,
	EZastavaPOIState_MAX                     = 4,
};

// ScriptStruct Smuta.Actions
// 0x0010 (0x0010 - 0x0000)
struct FActions final
{
public:
	TArray<class UBaseActionData*>                ActionsData;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FActions;

// ScriptStruct Smuta.NPCReaction
// 0x00A0 (0x00A0 - 0x0000)
struct FNPCReaction final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UReactionCondition*>             ReactionConditions;                                // 0x0008(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          bAggression;                                       // 0x0018(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            ReactionMontage;                                   // 0x0020(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDlgDialogue>            ReactionMonologue;                                 // 0x0048(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           OptionalMonologueTag;                              // 0x0070(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReactionMaxDistance;                               // 0x0078(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDoNotAbortTree;                                   // 0x007C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEndAfterReaction;                                 // 0x007D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDoOnce;                                           // 0x007E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bChangeAttitude;                                   // 0x007F(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EExtendedAttitude                             NewAttitude;                                       // 0x0080(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RepeatNumToChangeAttitude;                         // 0x0084(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DelayToChangeAttitude;                             // 0x0088(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C[0x14];                                      // 0x008C(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FNPCReaction;

// ScriptStruct Smuta.StatUpgradesInfo
// 0x0080 (0x0080 - 0x0000)
struct FStatUpgradesInfo final
{
public:
	TArray<struct FDataTableRowHandle>            UpgradeRowHandles;                                 // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FString                                 StatName;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StatDescription;                                   // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              DefaultIconTexture;                                // 0x0030(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              DefaultLargeViewIcon;                              // 0x0058(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FStatUpgradesInfo;

// ScriptStruct Smuta.AITraits_AgroSettings
// 0x0048 (0x0048 - 0x0000)
struct FAITraits_AgroSettings final
{
public:
	float                                         AgroDistance;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallForHelpRadius;                                 // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SafeDistanceOfScary;                               // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CalmdownScaryDistance;                             // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Priority;                                          // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EFraction>                             CallForHelpFractions;                              // 0x0018(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         CalmDownDuration;                                  // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanAgro;                                          // 0x002C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanDisagro;                                       // 0x002D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UGameplayEffect>>    ChangeAttitudeGEClasses;                           // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	EFraction                                     Fraction;                                          // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAITraits_AgroSettings;

// ScriptStruct Smuta.AimActionMontages
// 0x0050 (0x0050 - 0x0000)
struct FAimActionMontages final
{
public:
	TMap<EShootAnimationType, TSoftObjectPtr<class UAnimMontage>> Montages;                          // 0x0000(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAimActionMontages;

// ScriptStruct Smuta.MontageWithDescription
// 0x0030 (0x0030 - 0x0000)
struct FMontageWithDescription final
{
public:
	TSoftObjectPtr<class UAnimMontage>            Montage;                                           // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEnterCondition                               EnterCondition;                                    // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELegsPosition                                 LegsStartPosition;                                 // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMontageWithDescription;

// ScriptStruct Smuta.MontageArrayWrapper
// 0x0010 (0x0010 - 0x0000)
struct FMontageArrayWrapper final
{
public:
	TArray<struct FMontageWithDescription>        Array;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMontageArrayWrapper;

// ScriptStruct Smuta.AttackWithRotationMontages
// 0x0050 (0x0050 - 0x0000)
struct FAttackWithRotationMontages final
{
public:
	TMap<EEnemyPosition, struct FMontageArrayWrapper> Montage;                                       // 0x0000(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAttackWithRotationMontages;

// ScriptStruct Smuta.OldDialogueTableInfo
// 0x0030 (0x0038 - 0x0008)
struct FOldDialogueTableInfo final : public FTableRowBase
{
public:
	class FString                                 Key;                                               // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PhraseText;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Emotion;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FOldDialogueTableInfo;

// ScriptStruct Smuta.AimStandActionMontages
// 0x0050 (0x0050 - 0x0000)
struct FAimStandActionMontages final
{
public:
	TMap<EAimStand, struct FAimActionMontages>    Data;                                              // 0x0000(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAimStandActionMontages;

// ScriptStruct Smuta.AITraits_DetectionHelp
// 0x000C (0x000C - 0x0000)
struct FAITraits_DetectionHelp final
{
public:
	float                                         Chance;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxNumber;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAITraits_DetectionHelp;

// ScriptStruct Smuta.AimElementAppearanceSettings
// 0x0060 (0x0060 - 0x0000)
struct FAimElementAppearanceSettings
{
public:
	TSoftObjectPtr<class UTexture2D>              Texture;                                           // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWidgetTransform                       Transform;                                         // 0x0028(0x0038)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAimElementAppearanceSettings;

// ScriptStruct Smuta.AimCenterElementAppearanceSettings
// 0x0068 (0x00C8 - 0x0060)
struct FAimCenterElementAppearanceSettings final : public FAimElementAppearanceSettings
{
public:
	TSoftObjectPtr<class UTexture2D>              HighlightTexture;                                  // 0x0060(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWidgetTransform                       HighlightTransform;                                // 0x0088(0x0038)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          FriendlyHighlighted;                               // 0x00C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NeutralHighlighted;                                // 0x00C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HostileHighlighted;                                // 0x00C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C3[0x5];                                       // 0x00C3(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAimCenterElementAppearanceSettings;

// ScriptStruct Smuta.CodexArticle
// 0x0078 (0x0078 - 0x0000)
struct FCodexArticle final
{
public:
	class FText                                   Category;                                          // 0x0000(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Name;                                              // 0x0018(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              Image;                                             // 0x0030(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Text;                                              // 0x0058(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	ECodexImageLayout                             ImageLayout;                                       // 0x0070(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCodexArticle;

// ScriptStruct Smuta.AnimationReactionData
// 0x0020 (0x0020 - 0x0000)
struct FAnimationReactionData final
{
public:
	class UAnimMontage*                           WarningAnimation;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundWave*                             WarningSound;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           SkipAnimation;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundWave*                             SkipSound;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAnimationReactionData;

// ScriptStruct Smuta.EnemyData
// 0x0030 (0x0030 - 0x0000)
struct FEnemyData final
{
public:
	class UDataAsset*                             AITraits;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimationReactionData                 Animation;                                         // 0x0008(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bKilled;                                           // 0x0028(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FEnemyData;

// ScriptStruct Smuta.PatrolData
// 0x0010 (0x0010 - 0x0000)
struct FPatrolData final
{
public:
	TArray<struct FEnemyData>                     PatrolData;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPatrolData;

// ScriptStruct Smuta.AimNotchElementAppearanceSettings
// 0x0000 (0x0060 - 0x0060)
struct FAimNotchElementAppearanceSettings final : public FAimElementAppearanceSettings
{
};
DUMPER7_ASSERTS_FAimNotchElementAppearanceSettings;

// ScriptStruct Smuta.BehaviorTreeData
// 0x0050 (0x0050 - 0x0000)
struct FBehaviorTreeData final
{
public:
	TMap<struct FGameplayTag, class UObject*>     SettingsObjects;                                   // 0x0000(0x0050)(Edit, BlueprintVisible, ExportObject, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBehaviorTreeData;

// ScriptStruct Smuta.AITraits_Peaceful
// 0x0068 (0x0068 - 0x0000)
struct FAITraits_Peaceful final
{
public:
	TMap<class FString, struct FBehaviorTreeData> BTData;                                            // 0x0000(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FNPCReaction>                   Reactions;                                         // 0x0050(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGameplayTag                           VoiceTag;                                          // 0x0060(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAITraits_Peaceful;

// ScriptStruct Smuta.AITraits_PerceptionKey
// 0x0002 (0x0002 - 0x0000)
struct FAITraits_PerceptionKey final
{
public:
	EDetectionAIState                             State;                                             // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NightOrDay;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAITraits_PerceptionKey;

// ScriptStruct Smuta.AITraits_DetectionGeneral
// 0x002C (0x002C - 0x0000)
struct FAITraits_DetectionGeneral final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DetectionScaleMax;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SuspicionThreshold;                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SearchThreshold;                                   // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeToStartRestoreScale;                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DelayToAgro;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAITraits_DetectionHelp                CallForHelp;                                       // 0x0018(0x000C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bCalmdownOnDistance;                               // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CalmdownDistance;                                  // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAITraits_DetectionGeneral;

// ScriptStruct Smuta.AITraits_Sight
// 0x0038 (0x0038 - 0x0000)
struct FAITraits_Sight final
{
public:
	float                                         SightLength;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SightHorizontalAngle;                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SightVerticalUpperAngle;                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SightVerticalLowerAngle;                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>             SightDetectionDebuffCurve;                         // 0x0010(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAITraits_Sight;

// ScriptStruct Smuta.AITraits_Hearing
// 0x0030 (0x0030 - 0x0000)
struct FAITraits_Hearing final
{
public:
	float                                         HearingRange;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UCurveFloat>             HearingDetectionDebuffCurve;                       // 0x0008(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAITraits_Hearing;

// ScriptStruct Smuta.AITraits_ImmediateDetection
// 0x0030 (0x0030 - 0x0000)
struct FAITraits_ImmediateDetection final
{
public:
	float                                         ImmediateDetectionLength;                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ImmediateDetectionAngle;                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>             ImmediateDetectionDebuffCurve;                     // 0x0008(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAITraits_ImmediateDetection;

// ScriptStruct Smuta.AITraits_SixSense
// 0x0030 (0x0030 - 0x0000)
struct FAITraits_SixSense final
{
public:
	float                                         SixSenseLength;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SixSenseAngle;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>             SixSenseDebuffCurve;                               // 0x0008(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAITraits_SixSense;

// ScriptStruct Smuta.AITraits_PerceptionV2
// 0x00C8 (0x00C8 - 0x0000)
struct FAITraits_PerceptionV2 final
{
public:
	struct FAITraits_Sight                        Sight;                                             // 0x0000(0x0038)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FAITraits_Hearing                      Hearing;                                           // 0x0038(0x0030)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FAITraits_ImmediateDetection           ImmediateDetection;                                // 0x0068(0x0030)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FAITraits_SixSense                     SixSense;                                          // 0x0098(0x0030)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAITraits_PerceptionV2;

// ScriptStruct Smuta.AITraits_EnemyDetection
// 0x0080 (0x0080 - 0x0000)
struct FAITraits_EnemyDetection final
{
public:
	struct FAITraits_DetectionGeneral             General;                                           // 0x0000(0x002C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FAITraits_PerceptionKey, struct FAITraits_PerceptionV2> Perception;                  // 0x0030(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAITraits_EnemyDetection;

// ScriptStruct Smuta.AISmutaNoiseEvent
// 0x0040 (0x0040 - 0x0000)
struct FAISmutaNoiseEvent final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NoiseLocation;                                     // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NoiseRadius;                                       // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRange;                                          // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Instigator;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Tag;                                               // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAISmutaNoiseEvent;

// ScriptStruct Smuta.AITraits_Attributes
// 0x0020 (0x0020 - 0x0000)
struct FAITraits_Attributes final
{
public:
	float                                         BaseAttributes_Health;                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BattleStats_Damage;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BattleStats_HeavyDamage;                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BattleStats_Armor;                                 // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BattleStats_KillExperience;                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MovementStats_MoveSpeed;                           // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MovementStats_RunSpeed;                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MovementStats_SprintSpeed;                         // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAITraits_Attributes;

// ScriptStruct Smuta.AITraits_Behavior
// 0x00D0 (0x00D0 - 0x0000)
struct FAITraits_Behavior final
{
public:
	float                                         Agression;                                         // 0x0000(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReactionSpeed;                                     // 0x0004(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AttackSkill;                                       // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AttackBalance;                                     // 0x000C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefenceSkill;                                      // 0x0010(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RangeAttack;                                       // 0x0014(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DodgePreference;                                   // 0x0018(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         KickPreference;                                    // 0x001C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HitBreakChance;                                    // 0x0020(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultActionChanceDelta;                          // 0x0024(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FBehaviorTreeData> BTData;                                            // 0x0028(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                         GrantTicketTime;                                   // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PostAttackDelay;                                   // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<Smuta::ENPCAction, float>                CustomActionChanceDelta;                           // 0x0080(0x0050)(BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAITraits_Behavior;

// ScriptStruct Smuta.AITraits_AbilitiesOnTimer
// 0x0010 (0x0010 - 0x0000)
struct FAITraits_AbilitiesOnTimer final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayAbility>           Ability;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAITraits_AbilitiesOnTimer;

// ScriptStruct Smuta.AITraits_Global
// 0x0180 (0x0180 - 0x0000)
struct FAITraits_Global final
{
public:
	struct FAITraits_Behavior                     Behavior;                                          // 0x0000(0x00D0)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAITraits_EnemyDetection               EnemyDetection;                                    // 0x00D0(0x0080)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FAITraits_Attributes                   Attributes;                                        // 0x0150(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FAITraits_AbilitiesOnTimer>     AbilitiesOnTimer;                                  // 0x0170(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAITraits_Global;

// ScriptStruct Smuta.AITraits_BattleFlee
// 0x0050 (0x0050 - 0x0000)
struct FAITraits_BattleFlee final
{
public:
	TMap<class FString, struct FBehaviorTreeData> BTData;                                            // 0x0000(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAITraits_BattleFlee;

// ScriptStruct Smuta.BehaviorTreePreset
// 0x0058 (0x0058 - 0x0000)
struct FBehaviorTreePreset final
{
public:
	TMap<class FString, struct FBehaviorTreeData> BTData;                                            // 0x0000(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                         GrantTicketTime;                                   // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PostAttackDelay;                                   // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBehaviorTreePreset;

// ScriptStruct Smuta.BoneHitResult
// 0x0038 (0x0038 - 0x0000)
struct FBoneHitResult final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Normal;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HitPoint;                                          // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBoneHitResult;

// ScriptStruct Smuta.AttributeSaveData
// 0x0040 (0x0040 - 0x0000)
struct FAttributeSaveData final
{
public:
	struct FGameplayAttribute                     Attribute;                                         // 0x0000(0x0038)(SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AttributeBaseValue;                                // 0x0038(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAttributeSaveData;

// ScriptStruct Smuta.PlayerProgressSaveData
// 0x000C (0x000C - 0x0000)
struct FPlayerProgressSaveData final
{
public:
	int32                                         XP;                                                // 0x0000(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Level;                                             // 0x0004(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SpellPoints;                                       // 0x0008(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPlayerProgressSaveData;

// ScriptStruct Smuta.EffectSaveData
// 0x0060 (0x0060 - 0x0000)
struct FEffectSaveData final
{
public:
	TSubclassOf<class UGameplayEffect>            EffectClass;                                       // 0x0000(0x0008)(ZeroConstructor, SaveGame, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, float>              SetByCallerTagMagnitudes;                          // 0x0008(0x0050)(SaveGame, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0058(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StackCount;                                        // 0x005C(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FEffectSaveData;

// ScriptStruct Smuta.BlueprintAttributeDefaults
// 0x0010 (0x0010 - 0x0000)
struct FBlueprintAttributeDefaults final
{
public:
	TSubclassOf<class UAttributeSet>              Attributes;                                        // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                             DefaultStartingTable;                              // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBlueprintAttributeDefaults;

// ScriptStruct Smuta.TaggedMontages
// 0x0050 (0x0050 - 0x0000)
struct FTaggedMontages
{
public:
	TMap<TSoftObjectPtr<class UAnimMontage>, struct FGameplayTagContainer> Montages;                 // 0x0000(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTaggedMontages;

// ScriptStruct Smuta.TeaseActionMontages
// 0x0050 (0x0050 - 0x0000)
struct FTeaseActionMontages final
{
public:
	TMap<struct FGameplayTag, TSoftObjectPtr<class UAnimMontage>> TeaseMontages;                     // 0x0000(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTeaseActionMontages;

// ScriptStruct Smuta.ParryActionMontages
// 0x00F0 (0x00F0 - 0x0000)
struct FParryActionMontages final
{
public:
	TSoftObjectPtr<class UAnimMontage>            ParryAction;                                       // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>            ParryStunAction;                                   // 0x0028(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, TSoftObjectPtr<class UAnimMontage>> SuccessParry;                      // 0x0050(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, TSoftObjectPtr<class UAnimMontage>> ParryTarget;                       // 0x00A0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FParryActionMontages;

// ScriptStruct Smuta.KickActionMontages
// 0x0050 (0x0050 - 0x0000)
struct FKickActionMontages final
{
public:
	TMap<struct FGameplayTag, TSoftObjectPtr<class UAnimMontage>> KickMontages;                      // 0x0000(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FKickActionMontages;

// ScriptStruct Smuta.HitActionMontages
// 0x0050 (0x0050 - 0x0000)
struct FHitActionMontages final
{
public:
	TMap<struct FGameplayTag, TSoftObjectPtr<class UAnimMontage>> HitMontages;                       // 0x0000(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FHitActionMontages;

// ScriptStruct Smuta.FinisherAnimMontage
// 0x00E0 (0x00E0 - 0x0000)
struct FFinisherAnimMontage final
{
public:
	TSoftObjectPtr<class UAnimMontage>            PlayerFinisherMontage;                             // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>            NPC_FinisherMontage;                               // 0x0028(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>            NPC_MilSkelFinisherMontage;                        // 0x0050(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceBetweenActors;                             // 0x0078(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            ScaledPlayerFinisherMontage;                       // 0x0080(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>            Scaled_NPC_FinisherMontage;                        // 0x00A8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScaledDistanceBetweenActors;                       // 0x00D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CameraBoneName;                                    // 0x00D4(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFinisherAnimMontage;

// ScriptStruct Smuta.FinisherActionMontages
// 0x0010 (0x0010 - 0x0000)
struct FFinisherActionMontages final
{
public:
	TArray<struct FFinisherAnimMontage>           FinisherMontages;                                  // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFinisherActionMontages;

// ScriptStruct Smuta.DodgeActionMontages
// 0x00A0 (0x00A0 - 0x0000)
struct FDodgeActionMontages final
{
public:
	TMap<struct FGameplayTag, TSoftObjectPtr<class UAnimMontage>> DodgeMontagesRightLegForward;      // 0x0000(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, TSoftObjectPtr<class UAnimMontage>> DodgeMontagesLeftLegForward;       // 0x0050(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDodgeActionMontages;

// ScriptStruct Smuta.DeathActionMontages
// 0x0050 (0x0050 - 0x0000)
struct FDeathActionMontages final
{
public:
	TMap<struct FGameplayTag, TSoftObjectPtr<class UAnimMontage>> DeathMontages;                     // 0x0000(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDeathActionMontages;

// ScriptStruct Smuta.AttackActionMontages
// 0x0050 (0x0050 - 0x0000)
struct FAttackActionMontages final
{
public:
	TMap<struct FGameplayTag, TSoftObjectPtr<class UAnimMontage>> AttackMontages;                    // 0x0000(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAttackActionMontages;

// ScriptStruct Smuta.BattleMovementMontages
// 0x0050 (0x0050 - 0x0000)
struct FBattleMovementMontages final
{
public:
	TMap<struct FGameplayTag, TSoftObjectPtr<class UAnimMontage>> BattleMovementMontages;            // 0x0000(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBattleMovementMontages;

// ScriptStruct Smuta.BlockActionMontages
// 0x00A0 (0x00A0 - 0x0000)
struct FBlockActionMontages final
{
public:
	TSoftObjectPtr<class UAnimMontage>            PreparingMontage;                                  // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>            StanceMontage;                                     // 0x0028(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, TSoftObjectPtr<class UAnimMontage>> BlockMontages;                     // 0x0050(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBlockActionMontages;

// ScriptStruct Smuta.StealthFinisherAnimMontage
// 0x00E0 (0x00E0 - 0x0000)
struct FStealthFinisherAnimMontage final
{
public:
	TSoftObjectPtr<class UAnimMontage>            PlayerStealthFinisherMontage;                      // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>            NPC_StealthFinisherMontage;                        // 0x0028(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>            NPC_MilSkelStealthFinisherMontage;                 // 0x0050(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StealthDistanceBetweenActors;                      // 0x0078(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            ScaledPlayerStealthFinisherMontage;                // 0x0080(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>            Scaled_NPC_StealthFinisherMontage;                 // 0x00A8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScaledStealthDistanceBetweenActors;                // 0x00D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CameraBoneName;                                    // 0x00D4(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FStealthFinisherAnimMontage;

// ScriptStruct Smuta.StealthFinisherActionMontages
// 0x0010 (0x0010 - 0x0000)
struct FStealthFinisherActionMontages final
{
public:
	TArray<struct FStealthFinisherAnimMontage>    FinisherMontages;                                  // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FStealthFinisherActionMontages;

// ScriptStruct Smuta.AggroActionMontages
// 0x0050 (0x0050 - 0x0000)
struct FAggroActionMontages final
{
public:
	TSoftObjectPtr<class UAnimMontage>            StartAggroMontage;                                 // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>            EndAggroMontage;                                   // 0x0028(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAggroActionMontages;

// ScriptStruct Smuta.AnimalAttackActionMontages
// 0x0010 (0x0010 - 0x0000)
struct FAnimalAttackActionMontages final
{
public:
	TArray<TSoftObjectPtr<class UAnimMontage>>    AttackMontage;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAnimalAttackActionMontages;

// ScriptStruct Smuta.SoftMontagesArray
// 0x0010 (0x0010 - 0x0000)
struct FSoftMontagesArray final
{
public:
	TArray<TSoftObjectPtr<class UAnimMontage>>    Montages;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSoftMontagesArray;

// ScriptStruct Smuta.PairedTaggedMontages
// 0x0008 (0x0058 - 0x0050)
struct FPairedTaggedMontages final : public FTaggedMontages
{
public:
	float                                         PairDistance;                                      // 0x0050(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FPairedTaggedMontages;

// ScriptStruct Smuta.PairedMontagesData
// 0x0010 (0x0010 - 0x0000)
struct FPairedMontagesData final
{
public:
	TArray<struct FPairedTaggedMontages>          PairedTaggedMontages;                              // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPairedMontagesData;

// ScriptStruct Smuta.StartStopBattleActionMontages
// 0x0050 (0x0050 - 0x0000)
struct FStartStopBattleActionMontages final
{
public:
	TMap<struct FGameplayTag, TSoftObjectPtr<class UAnimMontage>> StartStopMontages;                 // 0x0000(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FStartStopBattleActionMontages;

// ScriptStruct Smuta.AttackResponseInfo
// 0x0020 (0x0020 - 0x0000)
struct FAttackResponseInfo final
{
public:
	bool                                          bHitHappen;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               AngleToAttacker;                                   // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAttackResponseInfo;

// ScriptStruct Smuta.EffectProperties
// 0x0058 (0x0058 - 0x0000)
struct FEffectProperties final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UBaseAbilitiesComponent*                SourceASC;                                         // 0x0018(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 SourceAvatarActor;                                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AController*                            SourceController;                                  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACharacter*                             SourceCharacter;                                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBaseAbilitiesComponent*                TargetASC;                                         // 0x0038(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 TargetAvatarActor;                                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AController*                            TargetController;                                  // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACharacter*                             TargetCharacter;                                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FEffectProperties;

// ScriptStruct Smuta.UpgradeUIData
// 0x0060 (0x0060 - 0x0000)
struct FUpgradeUIData final
{
public:
	class FString                                 UpgradeName;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              UpgradeIconTexture;                                // 0x0010(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              UpgradeLargeViewIcon;                              // 0x0038(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUpgradeUIData;

// ScriptStruct Smuta.ArticleCategoryData
// 0x0040 (0x0040 - 0x0000)
struct FArticleCategoryData final
{
public:
	class FText                                   Name;                                              // 0x0000(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              Image;                                             // 0x0018(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FArticleCategoryData;

// ScriptStruct Smuta.CodexArticleStateInfo
// 0x0002 (0x0002 - 0x0000)
struct FCodexArticleStateInfo final
{
public:
	bool                                          bIsOpened;                                         // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsNew;                                            // 0x0001(0x0001)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCodexArticleStateInfo;

// ScriptStruct Smuta.AttackHitData
// 0x0210 (0x0210 - 0x0000)
struct FAttackHitData final
{
public:
	class ADefaultCharacter*                      DefenderCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    DefenderComponent;                                 // 0x0008(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADefaultCharacter*                      AttackerCharacter;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEquipmentComponent*                    AttackerEquipmentComponent;                        // 0x0018(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  AttackTags;                                        // 0x0020(0x0020)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	EHand                                         WeaponHand;                                        // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipmentType                                WeaponEquipmentType;                               // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipmentType                                DefenderRightHandEquipmentType;                    // 0x0042(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipmentType                                DefenderLeftHandEquipmentType;                     // 0x0043(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipmentType                                AttackerRightHandEquipmentType;                    // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipmentType                                AttackerLeftHandEquipmentType;                     // 0x0045(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipmentDefenceStyle                        DefenceStyle;                                      // 0x0046(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDefenceZoneType                              DefenceZoneType;                                   // 0x0047(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           BodyPartType;                                      // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ImpactLocation;                                    // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ImpactNormal;                                      // 0x0068(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCombatHitData                         WeaponHitData;                                     // 0x0080(0x0190)(BlueprintVisible, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAttackHitData;

// ScriptStruct Smuta.ComboAnimMontages
// 0x0060 (0x0060 - 0x0000)
struct FComboAnimMontages final
{
public:
	TArray<struct FMontageWithDescription>        Montages;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<EEnemyPosition, struct FMontageArrayWrapper> RotationMontages;                              // 0x0010(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FComboAnimMontages;

// ScriptStruct Smuta.NextMontages
// 0x0050 (0x0050 - 0x0000)
struct FNextMontages final
{
public:
	TMap<EAttackType, struct FComboAnimMontages>  Animations;                                        // 0x0000(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNextMontages;

// ScriptStruct Smuta.MontagesByEnemyPosition
// 0x0050 (0x0050 - 0x0000)
struct FMontagesByEnemyPosition final
{
public:
	TMap<EEnemyPosition, struct FMontageArrayWrapper> Montages;                                      // 0x0000(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMontagesByEnemyPosition;

// ScriptStruct Smuta.CharacterStand
// 0x0002 (0x0002 - 0x0000)
struct FCharacterStand final
{
public:
	EWeaponPosition                               WeaponPosition;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELegsPosition                                 LegsPosition;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCharacterStand;

// ScriptStruct Smuta.TargetPrioritySettingsWrapper
// 0x0018 (0x0018 - 0x0000)
struct FTargetPrioritySettingsWrapper final
{
public:
	class UDA_TargetPrioritySettings*             Settings;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDA_TargetPrioritySettings*             InstanceSettings;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideSettings;                                 // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTargetPrioritySettingsWrapper;

// ScriptStruct Smuta.HearingStimulusParams
// 0x000C (0x000C - 0x0000)
struct FHearingStimulusParams final
{
public:
	float                                         MaxDetectionScale;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Range;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRange;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FHearingStimulusParams;

// ScriptStruct Smuta.AttitudeArray
// 0x0018 (0x0018 - 0x0000)
struct FAttitudeArray final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EExtendedAttitude>                     Attitudes;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAttitudeArray;

// ScriptStruct Smuta.StimulusDescription
// 0x0010 (0x0010 - 0x0000)
struct FStimulusDescription final
{
public:
	EStimulusType                                 StimulusType;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESenseType                                    SenseType;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHearingSenseType                             HearingSenseType;                                  // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              RegisteredTime;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FStimulusDescription;

// ScriptStruct Smuta.FractionPhrases
// 0x0010 (0x0010 - 0x0000)
struct FFractionPhrases final
{
public:
	TArray<TSoftObjectPtr<class USoundBase>>      Phrases;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFractionPhrases;

// ScriptStruct Smuta.DetectionReaction
// 0x0060 (0x0060 - 0x0000)
struct FDetectionReaction final
{
public:
	TArray<TSoftObjectPtr<class UAnimMontage>>    Animations;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<EFraction, struct FFractionPhrases>      Phrases;                                           // 0x0010(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDetectionReaction;

// ScriptStruct Smuta.DetectionStateReaction
// 0x0050 (0x0050 - 0x0000)
struct FDetectionStateReaction final
{
public:
	TMap<EDetectionAIState, struct FDetectionReaction> Animations;                                   // 0x0000(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDetectionStateReaction;

// ScriptStruct Smuta.StoneStimulusData
// 0x0068 (0x0068 - 0x0000)
struct alignas(0x08) FStoneStimulusData final
{
public:
	uint8                                         Pad_0[0x68];                                       // 0x0000(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FStoneStimulusData;

// ScriptStruct Smuta.FractionMemberProgressionInfo
// 0x0001 (0x0001 - 0x0000)
struct FFractionMemberProgressionInfo final
{
public:
	bool                                          bIsOpened;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFractionMemberProgressionInfo;

// ScriptStruct Smuta.FractionProgressionInfo
// 0x0058 (0x0058 - 0x0000)
struct FFractionProgressionInfo final
{
public:
	bool                                          bIsHidden;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFractionState                                State;                                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Influence;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, struct FFractionMemberProgressionInfo> FractionMemberProgressionMap;           // 0x0008(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, SaveGame, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFractionProgressionInfo;

// ScriptStruct Smuta.FractionMemberData
// 0x0088 (0x0088 - 0x0000)
struct FFractionMemberData final
{
public:
	class FText                                   Name;                                              // 0x0000(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0018(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              PortraitTexture2D;                                 // 0x0030(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              NotOpenedPortraitTexture2D;                        // 0x0058(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CodexArticleID;                                    // 0x0080(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFractionMemberData;

// ScriptStruct Smuta.FractionStateDependedData
// 0x0040 (0x0040 - 0x0000)
struct FFractionStateDependedData final
{
public:
	class FText                                   Name;                                              // 0x0000(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              StateLogoTexture2DStateMap;                        // 0x0018(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFractionStateDependedData;

// ScriptStruct Smuta.FractionData
// 0x00A0 (0x00A0 - 0x0000)
struct FFractionData final
{
public:
	TMap<EFractionState, struct FFractionStateDependedData> StateDependedDataMap;                    // 0x0000(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<class FName, struct FFractionMemberData> FractionMembers;                                   // 0x0050(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFractionData;

// ScriptStruct Smuta.MatrixDialogues
// 0x0010 (0x0010 - 0x0000)
struct FMatrixDialogues final
{
public:
	TArray<class UMatrixDialogue*>                WorkDialogues;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMatrixDialogues;

// ScriptStruct Smuta.MatrixReactionData
// 0x0050 (0x0050 - 0x0000)
struct FMatrixReactionData final
{
public:
	TSoftObjectPtr<class USoundWave>              SoundReaction;                                     // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequence>           LipSync;                                           // 0x0028(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMatrixReactionData;

// ScriptStruct Smuta.ReactionsToPlayer
// 0x0018 (0x0018 - 0x0000)
struct FReactionsToPlayer final
{
public:
	EFraction                                     PlayerFraction;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMatrixReactionData>            Reactions;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FReactionsToPlayer;

// ScriptStruct Smuta.InputChangeData
// 0x0080 (0x0088 - 0x0008)
struct FInputChangeData final : public FTableRowBase
{
public:
	TSet<class FName>                             InputNames;                                        // 0x0008(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   OptionName;                                        // 0x0058(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   OptionDescription;                                 // 0x0070(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInputChangeData;

// ScriptStruct Smuta.YuraLevelUpInfo
// 0x000C (0x000C - 0x0000)
struct FYuraLevelUpInfo final
{
public:
	int32                                         LevelUpRequirement;                                // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AttributePointAward;                               // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SpellPointAward;                                   // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FYuraLevelUpInfo;

// ScriptStruct Smuta.CameraModeSetup
// 0x0050 (0x0050 - 0x0000)
struct FCameraModeSetup final
{
public:
	struct FGameplayTagQuery                      ModeQuery;                                         // 0x0000(0x0048)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UCameraModeData*                        CameraMode;                                        // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCameraModeSetup;

// ScriptStruct Smuta.MatrixPhraseData
// 0x0058 (0x0058 - 0x0000)
struct FMatrixPhraseData final
{
public:
	EHumanRoleType                                Speaker;                                           // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundWave>              SoundDialogue;                                     // 0x0008(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequence>           LipSync;                                           // 0x0030(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMatrixPhraseData;

// ScriptStruct Smuta.MatrixPhrasesData
// 0x0010 (0x0010 - 0x0000)
struct FMatrixPhrasesData final
{
public:
	TArray<struct FMatrixPhraseData>              PhraseData;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMatrixPhrasesData;

// ScriptStruct Smuta.PCSystemInfo
// 0x0070 (0x0070 - 0x0000)
struct FPCSystemInfo final
{
public:
	class FString                                 CPUVendor;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CPUBrand;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OSVersion;                                         // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumOfCores;                                        // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 GPUBrand;                                          // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RHIVersion;                                        // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GPUDriver;                                         // 0x0058(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MemorySize;                                        // 0x0068(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FPCSystemInfo;

// ScriptStruct Smuta.NPCAppearanceWrapper
// 0x0018 (0x0018 - 0x0000)
struct FNPCAppearanceWrapper final
{
public:
	TSubclassOf<class UNPCAppearanceItem>         AppearanceClass;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNPCAppearanceItem*                     AppearanceInstance;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideSettings;                                 // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FNPCAppearanceWrapper;

// ScriptStruct Smuta.NPCEquipmentItemAnimData
// 0x0050 (0x0050 - 0x0000)
struct FNPCEquipmentItemAnimData final
{
public:
	TMap<ENPCAnimatedArmId, class UAnimSequence*> ArmsAASMap;                                        // 0x0000(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNPCEquipmentItemAnimData;

// ScriptStruct Smuta.NPCShootMontages
// 0x0050 (0x0050 - 0x0000)
struct FNPCShootMontages final
{
public:
	TSoftObjectPtr<class UAnimMontage>            Reload;                                            // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>            Shoot;                                             // 0x0028(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNPCShootMontages;

// ScriptStruct Smuta.StartAnims
// 0x0048 (0x0048 - 0x0000)
struct FStartAnims final
{
public:
	class UAnimSequence*                          F;                                                 // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          L45;                                               // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          L90;                                               // 0x0010(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          L135;                                              // 0x0018(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          L180;                                              // 0x0020(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          R45;                                               // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          R90;                                               // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          R135;                                              // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          R180;                                              // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FStartAnims;

// ScriptStruct Smuta.TurnAnims
// 0x0020 (0x0020 - 0x0000)
struct FTurnAnims final
{
public:
	class UAnimSequence*                          L90;                                               // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          L180;                                              // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          R90;                                               // 0x0010(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          R180;                                              // 0x0018(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTurnAnims;

// ScriptStruct Smuta.AnimInstancePeacefulInfo
// 0x0100 (0x0100 - 0x0000)
struct FAnimInstancePeacefulInfo final
{
public:
	struct FAnimationSequencesForRandomPlayer     RandomIdles;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UAnimSequence*                          Idle_AS;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          Walk_AS;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          Run_AS;                                            // 0x0020(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          WalkStop_AS;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          RunStop_AS;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStartAnims                            WalkStartAnims;                                    // 0x0038(0x0048)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FStartAnims                            RunStartAnims;                                     // 0x0080(0x0048)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FTurnAnims                             TurnAnims;                                         // 0x00C8(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class UBlendSpace*                            Lean_BS;                                           // 0x00E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                            HeadOrientation_BS;                                // 0x00F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERotationPattern                              RotationPattern;                                   // 0x00F8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAnimInstancePeacefulInfo;

// ScriptStruct Smuta.PostProcessEffectSettings
// 0x0180 (0x0180 - 0x0000)
struct FPostProcessEffectSettings final
{
public:
	EPostProcessType                              Type;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPostProcessLayer                             Layer;                                             // 0x0001(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPostProcessOrder                             Order;                                             // 0x0002(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<EPostProcessType>                        ToCancel;                                          // 0x0008(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     Material;                                          // 0x0058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           Tag;                                               // 0x0060(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     BlendIn;                                           // 0x0068(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         LifeTime;                                          // 0x00F0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     BlendOut;                                          // 0x00F8(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPostProcessEffectSettings;

// ScriptStruct Smuta.QTE_Animate
// 0x0058 (0x0058 - 0x0000)
struct FQTE_Animate final
{
public:
	bool                                          isPlayer;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  Actor;                                             // 0x0008(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>            Animation;                                         // 0x0030(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FQTE_Animate;

// ScriptStruct Smuta.QTE_AnimSequence
// 0x0058 (0x0058 - 0x0000)
struct FQTE_AnimSequence final
{
public:
	bool                                          isPlayer;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  Actor;                                             // 0x0008(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequence>           Animation;                                         // 0x0030(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FQTE_AnimSequence;

// ScriptStruct Smuta.QTE_Teleport
// 0x00C0 (0x00C0 - 0x0000)
struct FQTE_Teleport final
{
public:
	bool                                          isPlayer;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  Actor;                                             // 0x0008(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AActor>                  Target;                                            // 0x0030(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RelativeTransform;                                 // 0x0060(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FQTE_Teleport;

// ScriptStruct Smuta.QTE_WaitedAnim
// 0x0030 (0x0030 - 0x0000)
struct FQTE_WaitedAnim final
{
public:
	TArray<TSoftObjectPtr<class USoundBase>>      Sound2D;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FQTE_Animate>                   Animation;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	class ULevelSequence*                         StageEndSequence;                                  // 0x0020(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Delay;                                             // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FQTE_WaitedAnim;

// ScriptStruct Smuta.QTE_Stage
// 0x01A0 (0x01A0 - 0x0000)
struct FQTE_Stage final
{
public:
	TSoftObjectPtr<class USoundBase>              Sound2D;                                           // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FQTE_Animate>                   StartAnimation;                                    // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          LevelSequenceAnimation;                            // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         StageStartSequence;                                // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ACameraActor>            Camera;                                            // 0x0048(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeDilation;                                      // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeChangeSpeed;                                   // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QTE_Timer;                                         // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QTE_Preview;                                       // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EQTE_Type                                     eStageType;                                        // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         QTE_Press_Points;                                  // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QTE_Hold_Time;                                     // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QTE_Hold_Points;                                   // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QTE_Delta_Points;                                  // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QTE_Points_Goal;                                   // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QTE_Bonus_Time;                                    // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QTE_Bonus_Ammount;                                 // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QTE_Min_Hold_Time;                                 // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QTE_Max_Hold_Time;                                 // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         QTE_Holding_Goal;                                  // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 QTE_Pairs_Array;                                   // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QTE_Penalty_Time;                                  // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         QTE_Symbols_Goal;                                  // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 QTE_Buttons_Array;                                 // 0x00C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QTE_Speed;                                         // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QTE_Min_Length;                                    // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QTE_Max_Length;                                    // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QTE_Accel_Time;                                    // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QTE_Bonus_Size;                                    // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         QTE_Bonus_Points;                                  // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QTE_ArcStart;                                      // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QTE_BallStart;                                     // 0x00F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EQTE_LHDir                                    QTE_Direction;                                     // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Stones_MinS;                                       // 0x00FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Stones_MaxS;                                       // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Stones_FailBorder;                                 // 0x0104(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Stones_GrowChance;                                 // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Stones_MinDelay;                                   // 0x010C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Stones_MaxDelay;                                   // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Stones_Width;                                      // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Stones_Height;                                     // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EQTE_WhoFirst                                 Stones_Who_First;                                  // 0x011C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FQTE_Animate>                   PlayerFirstAnimation;                              // 0x0120(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FQTE_Animate>                   NPCFirstAnimation;                                 // 0x0130(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FQTE_WaitedAnim                        Success;                                           // 0x0140(0x0030)(Edit, BlueprintVisible, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	struct FQTE_WaitedAnim                        Fail;                                              // 0x0170(0x0030)(Edit, BlueprintVisible, DisableEditOnTemplate, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FQTE_Stage;

// ScriptStruct Smuta.QTE_FinishData
// 0x00B0 (0x00B0 - 0x0000)
struct FQTE_FinishData final
{
public:
	TSoftObjectPtr<class USoundBase>              Sound2D;                                           // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelSequence*                         LevelSequence;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FQTE_Teleport>                  Teleport;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	struct FGameplayTag                           Tag;                                               // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayAbility>           Ability;                                           // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            Effect;                                            // 0x0050(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Timeout;                                           // 0x0058(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ADefaultCharacter>       ParticipantB;                                      // 0x0060(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDlgDialogue>            Dialogue;                                          // 0x0088(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FQTE_FinishData;

// ScriptStruct Smuta.QTE_InActionData
// 0x0058 (0x0058 - 0x0000)
struct FQTE_InActionData final
{
public:
	bool                                          isPlayer;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  Actor;                                             // 0x0008(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UQTE_InAction>           InAction;                                          // 0x0030(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FQTE_InActionData;

// ScriptStruct Smuta.QTE_BlendSpace
// 0x0058 (0x0058 - 0x0000)
struct FQTE_BlendSpace final
{
public:
	bool                                          isPlayer;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  Actor;                                             // 0x0008(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UBlendSpace>             BlendSpace;                                        // 0x0030(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FQTE_BlendSpace;

// ScriptStruct Smuta.QTE_StartData
// 0x0078 (0x0078 - 0x0000)
struct FQTE_StartData final
{
public:
	TArray<TSoftObjectPtr<class AActor>>          DisableCollision;                                  // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class AActor>>          AttachableMesh;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FQTE_Teleport>                  StartTeleport;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TArray<struct FQTE_InActionData>              InAction;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	class ULevelSequence*                         LevelSequence;                                     // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   HintName;                                          // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EForceBlendspace                              UseAnimation;                                      // 0x0050(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FQTE_BlendSpace>                BlendSpaces;                                       // 0x0058(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TArray<struct FQTE_AnimSequence>              idle;                                              // 0x0068(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FQTE_StartData;

// ScriptStruct Smuta.QTE_AttribConditions
// 0x0048 (0x0048 - 0x0000)
struct FQTE_AttribConditions final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                     Attribute;                                         // 0x0008(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAttributeOp                                  CompareOperation;                                  // 0x0040(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RefValue;                                          // 0x0044(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FQTE_AttribConditions;

// ScriptStruct Smuta.QTE_Conditions
// 0x0008 (0x0008 - 0x0000)
struct FQTE_Conditions final
{
public:
	EQTE_Dependence                               Dependence;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAttributeOp                                  CompareOperation;                                  // 0x0001(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RefValue;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FQTE_Conditions;

// ScriptStruct Smuta.QTE_InActionEvent
// 0x0058 (0x0058 - 0x0000)
struct FQTE_InActionEvent final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESubtitlePhraseType                           PhraseType;                                        // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0008(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class USoundWave*                             Sound;                                             // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EQTE_Emotion                                  Emotion;                                           // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimSequenceBase>       LipSync;                                           // 0x0030(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FQTE_InActionEvent;

// ScriptStruct Smuta.QTE_InActionEventTag
// 0x00A8 (0x00A8 - 0x0000)
struct FQTE_InActionEventTag final
{
public:
	struct FQTE_AttribConditions                  AttribCondition;                                   // 0x0000(0x0048)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FQTE_Conditions                        Condition;                                         // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Delay;                                             // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESubtitlePhraseType                           PhraseType;                                        // 0x0054(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0058(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class USoundWave*                             Sound;                                             // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EQTE_Emotion                                  Emotion;                                           // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimSequenceBase>       LipSync;                                           // 0x0080(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FQTE_InActionEventTag;

// ScriptStruct Smuta.QTE_InActionEventIndex
// 0x0060 (0x0060 - 0x0000)
struct FQTE_InActionEventIndex final
{
public:
	EQTE_InActionType                             eActionType;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Delay;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESubtitlePhraseType                           PhraseType;                                        // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0010(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class USoundWave*                             Sound;                                             // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EQTE_Emotion                                  Emotion;                                           // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimSequenceBase>       LipSync;                                           // 0x0038(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FQTE_InActionEventIndex;

// ScriptStruct Smuta.RichInputActionRow
// 0x0010 (0x0018 - 0x0008)
struct FRichInputActionRow final : public FTableRowBase
{
public:
	struct FDataTableRowHandle                    InputAction;                                       // 0x0008(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRichInputActionRow;

// ScriptStruct Smuta.SaveMigrationData
// 0x0020 (0x0020 - 0x0000)
struct FSaveMigrationData final
{
public:
	class UClass*                                 SavedObjectClass;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SavedObjectName;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USaveMigrationHandler>      SavedDataHandler;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSaveMigrationData;

// ScriptStruct Smuta.LegacyBuildVersionData
// 0x0020 (0x0020 - 0x0000)
struct FLegacyBuildVersionData final
{
public:
	class FString                                 LegacySaveVersion;                                 // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSaveMigrationData>             SaveMigrationData;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLegacyBuildVersionData;

// ScriptStruct Smuta.ShootActionSequenceMontages
// 0x0050 (0x0050 - 0x0000)
struct FShootActionSequenceMontages final
{
public:
	TSoftObjectPtr<class UAnimMontage>            Reload;                                            // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>            Shoot;                                             // 0x0028(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FShootActionSequenceMontages;

// ScriptStruct Smuta.ShootActionMontages
// 0x0050 (0x0050 - 0x0000)
struct FShootActionMontages final
{
public:
	TMap<struct FGameplayTag, struct FShootActionSequenceMontages> ShootAndReloadMontages;           // 0x0000(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FShootActionMontages;

// ScriptStruct Smuta.NPCMovementSettings
// 0x0010 (0x0010 - 0x0000)
struct FNPCMovementSettings final
{
public:
	float                                         MaxWalkSpeed;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AccelerationSpeed;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DecelerationSpeed;                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotationRate;                                      // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNPCMovementSettings;

// ScriptStruct Smuta.NPCGaitSettings
// 0x0050 (0x0050 - 0x0000)
struct FNPCGaitSettings final
{
public:
	TMap<EGroundMovementMode, struct FNPCMovementSettings> Gaits;                                    // 0x0000(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNPCGaitSettings;

// ScriptStruct Smuta.NPCMovementInfo
// 0x0050 (0x0058 - 0x0008)
struct FNPCMovementInfo final : public FTableRowBase
{
public:
	TMap<ENPCBehaviorState, struct FNPCGaitSettings> Settings;                                       // 0x0008(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNPCMovementInfo;

// ScriptStruct Smuta.SurfaceSoundsTable
// 0x0050 (0x0058 - 0x0008)
struct FSurfaceSoundsTable final : public FTableRowBase
{
public:
	TMap<EPhysicalSurface, TSoftObjectPtr<class USoundBase>> SurfaceSounds;                          // 0x0008(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSurfaceSoundsTable;

// ScriptStruct Smuta.BSWalkParams
// 0x0050 (0x0050 - 0x0000)
struct FBSWalkParams final
{
public:
	class FString                                 SavePath;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AssetName;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeleton*                              Skeleton;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          WalkF;                                             // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          WalkUp;                                            // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          WalkDown;                                          // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          WalkR;                                             // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          WalkL;                                             // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBSWalkParams;

// ScriptStruct Smuta.WeaponTypeDataInfo
// 0x0058 (0x0060 - 0x0008)
struct FWeaponTypeDataInfo final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UBaseEquipmentSet>       EquipmentSet;                                      // 0x0008(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   WeaponItemClass;                                   // 0x0030(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipmentType                                EquipmentType;                                     // 0x0058(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeaponTypeDataInfo;

// ScriptStruct Smuta.BattleAnimInfo
// 0x0048 (0x0050 - 0x0008)
struct FBattleAnimInfo final : public FTableRowBase
{
public:
	TSoftObjectPtr<class USkeleton>               Skeleton;                                          // 0x0008(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWeaponTypeDataInfo>            WeaponTypeData;                                    // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UAnimMontage>>    Montages;                                          // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBattleAnimInfo;

// ScriptStruct Smuta.DialogueTableInfo
// 0x0080 (0x0088 - 0x0008)
struct FDialogueTableInfo final : public FTableRowBase
{
public:
	class FString                                 DialogueName;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BranchName;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PhraseNum;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 IDSpeaker;                                         // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NameSpeaker;                                       // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PhraseText;                                        // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Emotion;                                           // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AudioFileName;                                     // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDialogueTableInfo;

// ScriptStruct Smuta.BlendSpaceAnalysisInfo
// 0x0040 (0x0048 - 0x0008)
struct FBlendSpaceAnalysisInfo final : public FTableRowBase
{
public:
	class FString                                 BlendSpaceData;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AnimationData;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 VectorValue;                                       // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RateScale;                                         // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBlendSpaceAnalysisInfo;

// ScriptStruct Smuta.TransferEffectData
// 0x0138 (0x0138 - 0x0000)
struct FTransferEffectData final
{
public:
	TSubclassOf<class UGameplayEffect>            TriggerEffect;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagRequirements               OwnTagRequirements;                                // 0x0008(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagRequirements               TargetTagRequirements;                             // 0x0090(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         Probability;                                       // 0x0118(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            TransferEffect;                                    // 0x0120(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETransferEffectOperation                      TransferOperationType;                             // 0x0128(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EffectLevel;                                       // 0x012C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRemoveChildEffects;                               // 0x0130(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTransferEffectData;

// ScriptStruct Smuta.TraversalSettings
// 0x0030 (0x0030 - 0x0000)
struct FTraversalSettings final
{
public:
	TSoftObjectPtr<class UAnimMontage>            TraversalMontage;                                  // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayAbility>           TraversalAbility;                                  // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTraversalSettings;

// ScriptStruct Smuta.TagEventEntry
// 0x0038 (0x0038 - 0x0000)
struct FTagEventEntry final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  FailTags;                                          // 0x0008(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UTexture2D*                             Icon;                                              // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputAction*                           InputAction;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTagEventEntry;

// ScriptStruct Smuta.UpgradeData
// 0x0028 (0x0030 - 0x0008)
struct FUpgradeData final : public FTableRowBase
{
public:
	TSoftClassPtr<class UClass>                   UpgradeClass;                                      // 0x0008(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUpgradeData;

// ScriptStruct Smuta.VATLodSetting
// 0x0020 (0x0020 - 0x0000)
struct FVATLodSetting final
{
public:
	int32                                         LODIndex;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceConstant*>      Materials;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UTexture2D*                             WeightTexture;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVATLodSetting;

// ScriptStruct Smuta.VATCharacter
// 0x0038 (0x0038 - 0x0000)
struct FVATCharacter final
{
public:
	class USkeletalMesh*                          SkeletalMesh;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            StaticMesh;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVATLodSetting>                 LODSettings;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         UVChanel;                                          // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimToTextureDataAsset*                TextureDataAsset;                                  // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVertexAsset*                           VertexAsset;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVATCharacter;

// ScriptStruct Smuta.VATAnimation
// 0x0020 (0x0020 - 0x0000)
struct FVATAnimation final
{
public:
	class UAnimSequence*                          Animation;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            ItemStaticMesh;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundWave*                             SoundVFX;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundWave*                             SoundVoice;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVATAnimation;

// ScriptStruct Smuta.VertexAnimInfo
// 0x0100 (0x0100 - 0x0000)
struct FVertexAnimInfo final
{
public:
	class UStaticMesh*                            EquipmentStatic;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StartFrame;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EndFrame;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SampleFrameRate;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundWave*                             SoundSFX;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundWave*                             SoundVoice;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             AdditionTransformStatic;                           // 0x0030(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             AdditionTransformCollision;                        // 0x0090(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCollision;                                        // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F1[0xF];                                       // 0x00F1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FVertexAnimInfo;

// ScriptStruct Smuta.VertexTalking
// 0x0090 (0x0090 - 0x0000)
struct FVertexTalking final
{
public:
	class UVertexAsset*                           VertexAssetTalking;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PlaySound;                                         // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HideItem;                                          // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AnimationIndex;                                    // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeOffset;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayRate;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             AdditionTransformActor;                            // 0x0020(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundWave*                             OverrideSFX;                                       // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FVertexTalking;

// ScriptStruct Smuta.VertexPairInfo
// 0x0090 (0x0090 - 0x0000)
struct FVertexPairInfo final
{
public:
	class UVertexAsset*                           VertexAsset;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             AdditionTransformActor;                            // 0x0010(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AnimationIndexPair;                                // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeOffset;                                        // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayRate;                                          // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideItem;                                         // 0x007C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlaySound;                                        // 0x007D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayVoice;                                        // 0x007E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7F[0x1];                                       // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundWave*                             OverrideSFX;                                       // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundWave*                             OverrideVoice;                                     // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVertexPairInfo;

// ScriptStruct Smuta.WeaponNoiseSettings
// 0x0010 (0x0010 - 0x0000)
struct FWeaponNoiseSettings final
{
public:
	EWeaponNoiseTarget                            Target;                                            // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Noise;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Range;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponNoiseSettings;

// ScriptStruct Smuta.WeaponNoiseAttackMap
// 0x0050 (0x0050 - 0x0000)
struct FWeaponNoiseAttackMap final
{
public:
	TMap<EWeaponNoiseAttackType, struct FWeaponNoiseSettings> WeaponSettings;                        // 0x0000(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponNoiseAttackMap;

}

