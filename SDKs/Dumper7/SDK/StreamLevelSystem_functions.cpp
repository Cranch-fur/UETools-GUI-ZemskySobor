#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StreamLevelSystem

#include "Basic.hpp"

#include "StreamLevelSystem_classes.hpp"
#include "StreamLevelSystem_parameters.hpp"


namespace SDK
{

// Function StreamLevelSystem.StreamLevelManager.AddStreamLevelToAlwaysLoaded
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TSoftObjectPtr<class UWorld>&     Level                                                  (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bLoadImmediately                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStreamLevelManager::AddStreamLevelToAlwaysLoaded(const TSoftObjectPtr<class UWorld>& Level, const bool bLoadImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StreamLevelManager", "AddStreamLevelToAlwaysLoaded");

	Params::StreamLevelManager_AddStreamLevelToAlwaysLoaded Parms{};

	Parms.Level = Level;
	Parms.bLoadImmediately = bLoadImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function StreamLevelSystem.StreamLevelManager.AddStreamLevelToAlwaysUnloaded
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TSoftObjectPtr<class UWorld>&     Level                                                  (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             UnloadTimeout                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStreamLevelManager::AddStreamLevelToAlwaysUnloaded(const TSoftObjectPtr<class UWorld>& Level, const float UnloadTimeout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StreamLevelManager", "AddStreamLevelToAlwaysUnloaded");

	Params::StreamLevelManager_AddStreamLevelToAlwaysUnloaded Parms{};

	Parms.Level = Level;
	Parms.UnloadTimeout = UnloadTimeout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function StreamLevelSystem.StreamLevelManager.ClearAll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bUnloadImmediately                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStreamLevelManager::ClearAll(const bool bUnloadImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StreamLevelManager", "ClearAll");

	Params::StreamLevelManager_ClearAll Parms{};

	Parms.bUnloadImmediately = bUnloadImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function StreamLevelSystem.StreamLevelManager.ClearAlwaysLoaded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bUnloadImmediately                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStreamLevelManager::ClearAlwaysLoaded(const bool bUnloadImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StreamLevelManager", "ClearAlwaysLoaded");

	Params::StreamLevelManager_ClearAlwaysLoaded Parms{};

	Parms.bUnloadImmediately = bUnloadImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function StreamLevelSystem.StreamLevelManager.ClearAlwaysUnloaded
// (Final, Native, Public, BlueprintCallable)

void UStreamLevelManager::ClearAlwaysUnloaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StreamLevelManager", "ClearAlwaysUnloaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function StreamLevelSystem.StreamLevelManager.RemoveStreamLevelFromAlwaysLoaded
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TSoftObjectPtr<class UWorld>&     Level                                                  (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bUnloadImmediately                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStreamLevelManager::RemoveStreamLevelFromAlwaysLoaded(const TSoftObjectPtr<class UWorld>& Level, const bool bUnloadImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StreamLevelManager", "RemoveStreamLevelFromAlwaysLoaded");

	Params::StreamLevelManager_RemoveStreamLevelFromAlwaysLoaded Parms{};

	Parms.Level = Level;
	Parms.bUnloadImmediately = bUnloadImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function StreamLevelSystem.StreamLevelManager.RemoveStreamLevelFromAlwaysUnloaded
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TSoftObjectPtr<class UWorld>&     Level                                                  (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStreamLevelManager::RemoveStreamLevelFromAlwaysUnloaded(const TSoftObjectPtr<class UWorld>& Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StreamLevelManager", "RemoveStreamLevelFromAlwaysUnloaded");

	Params::StreamLevelManager_RemoveStreamLevelFromAlwaysUnloaded Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

