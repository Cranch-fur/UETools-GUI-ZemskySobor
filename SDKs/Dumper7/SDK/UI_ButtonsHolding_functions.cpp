#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ButtonsHolding

#include "Basic.hpp"

#include "UI_ButtonsHolding_classes.hpp"
#include "UI_ButtonsHolding_parameters.hpp"


namespace SDK
{

// Function UI_ButtonsHolding.UI_ButtonsHolding_C.Both Key Down
// (BlueprintCallable, BlueprintEvent)

void UUI_ButtonsHolding_C::Both_Key_Down()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ButtonsHolding_C", "Both Key Down");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ButtonsHolding.UI_ButtonsHolding_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_ButtonsHolding_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ButtonsHolding_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ButtonsHolding.UI_ButtonsHolding_C.ExecuteUbergraph_UI_ButtonsHolding
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ButtonsHolding_C::ExecuteUbergraph_UI_ButtonsHolding(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ButtonsHolding_C", "ExecuteUbergraph_UI_ButtonsHolding");

	Params::UI_ButtonsHolding_C_ExecuteUbergraph_UI_ButtonsHolding Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ButtonsHolding.UI_ButtonsHolding_C.OnAnimationFinished
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const class UWidgetAnimation*           Animation                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UUI_ButtonsHolding_C::OnAnimationFinished(const class UWidgetAnimation* Animation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ButtonsHolding_C", "OnAnimationFinished");

	Params::UI_ButtonsHolding_C_OnAnimationFinished Parms{};

	Parms.Animation = Animation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ButtonsHolding.UI_ButtonsHolding_C.OnInputChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECommonInputType                        bNewInputType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ButtonsHolding_C::OnInputChanged(ECommonInputType bNewInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ButtonsHolding_C", "OnInputChanged");

	Params::UI_ButtonsHolding_C_OnInputChanged Parms{};

	Parms.bNewInputType = bNewInputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ButtonsHolding.UI_ButtonsHolding_C.OnWrongKey
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ButtonsHolding_C::OnWrongKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ButtonsHolding_C", "OnWrongKey");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ButtonsHolding.UI_ButtonsHolding_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ButtonsHolding_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ButtonsHolding_C", "PreConstruct");

	Params::UI_ButtonsHolding_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ButtonsHolding.UI_ButtonsHolding_C.Reset Animation
// (BlueprintCallable, BlueprintEvent)

void UUI_ButtonsHolding_C::Reset_Animation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ButtonsHolding_C", "Reset Animation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ButtonsHolding.UI_ButtonsHolding_C.Set Default Color and Opacity
// (BlueprintCallable, BlueprintEvent)

void UUI_ButtonsHolding_C::Set_Default_Color_and_Opacity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ButtonsHolding_C", "Set Default Color and Opacity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ButtonsHolding.UI_ButtonsHolding_C.SetKeyProgress
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Stage                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Progress                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ButtonsHolding_C::SetKeyProgress(int32 Stage, double Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ButtonsHolding_C", "SetKeyProgress");

	Params::UI_ButtonsHolding_C_SetKeyProgress Parms{};

	Parms.Stage = Stage;
	Parms.Progress = Progress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ButtonsHolding.UI_ButtonsHolding_C.SetKeyText
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    K1                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    K2                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UUI_ButtonsHolding_C::SetKeyText(const class FString& K1, const class FString& K2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ButtonsHolding_C", "SetKeyText");

	Params::UI_ButtonsHolding_C_SetKeyText Parms{};

	Parms.K1 = std::move(K1);
	Parms.K2 = std::move(K2);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ButtonsHolding.UI_ButtonsHolding_C.SetNumStages
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Stages_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ButtonsHolding_C::SetNumStages(int32 Stages_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ButtonsHolding_C", "SetNumStages");

	Params::UI_ButtonsHolding_C_SetNumStages Parms{};

	Parms.Stages_0 = Stages_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ButtonsHolding.UI_ButtonsHolding_C.SetSquareProgress
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ButtonsHolding_C::SetSquareProgress(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ButtonsHolding_C", "SetSquareProgress");

	Params::UI_ButtonsHolding_C_SetSquareProgress Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ButtonsHolding.UI_ButtonsHolding_C.SetStageActive
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Stage                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ButtonsHolding_C::SetStageActive(int32 Stage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ButtonsHolding_C", "SetStageActive");

	Params::UI_ButtonsHolding_C_SetStageActive Parms{};

	Parms.Stage = Stage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ButtonsHolding.UI_ButtonsHolding_C.SetTexture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImage*                           Image                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Left                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ButtonsHolding_C::SetTexture(class UImage* Image, const class FString& Key, bool Left)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ButtonsHolding_C", "SetTexture");

	Params::UI_ButtonsHolding_C_SetTexture Parms{};

	Parms.Image = Image;
	Parms.Key = std::move(Key);
	Parms.Left = Left;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ButtonsHolding.UI_ButtonsHolding_C.SetTime
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ButtonsHolding_C::SetTime(float Time_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ButtonsHolding_C", "SetTime");

	Params::UI_ButtonsHolding_C_SetTime Parms{};

	Parms.Time_0 = Time_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ButtonsHolding.UI_ButtonsHolding_C.UpdateKeys
// (BlueprintCallable, BlueprintEvent)

void UUI_ButtonsHolding_C::UpdateKeys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ButtonsHolding_C", "UpdateKeys");

	UObject::ProcessEvent(Func, nullptr);
}

}

