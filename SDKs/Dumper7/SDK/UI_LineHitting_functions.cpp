#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_LineHitting

#include "Basic.hpp"

#include "UI_LineHitting_classes.hpp"
#include "UI_LineHitting_parameters.hpp"


namespace SDK
{

// Function UI_LineHitting.UI_LineHitting_C.ActivateProgressBar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LineHitting_C::ActivateProgressBar(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LineHitting_C", "ActivateProgressBar");

	Params::UI_LineHitting_C_ActivateProgressBar Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LineHitting.UI_LineHitting_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_LineHitting_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LineHitting_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LineHitting.UI_LineHitting_C.ExecuteUbergraph_UI_LineHitting
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LineHitting_C::ExecuteUbergraph_UI_LineHitting(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LineHitting_C", "ExecuteUbergraph_UI_LineHitting");

	Params::UI_LineHitting_C_ExecuteUbergraph_UI_LineHitting Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LineHitting.UI_LineHitting_C.FailResult
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  FailTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LineHitting_C::FailResult(double FailTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LineHitting_C", "FailResult");

	Params::UI_LineHitting_C_FailResult Parms{};

	Parms.FailTime = FailTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LineHitting.UI_LineHitting_C.GetTexForRound
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Board                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Round                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D**                      Tex                                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    Color                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LineHitting_C::GetTexForRound(int32 Board, int32 Round, class UTexture2D** Tex, struct FLinearColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LineHitting_C", "GetTexForRound");

	Params::UI_LineHitting_C_GetTexForRound Parms{};

	Parms.Board = Board;
	Parms.Round = Round;

	UObject::ProcessEvent(Func, &Parms);

	if (Tex != nullptr)
		*Tex = Parms.Tex;

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function UI_LineHitting.UI_LineHitting_C.OnInputChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECommonInputType                        bNewInputType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LineHitting_C::OnInputChanged(ECommonInputType bNewInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LineHitting_C", "OnInputChanged");

	Params::UI_LineHitting_C_OnInputChanged Parms{};

	Parms.bNewInputType = bNewInputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LineHitting.UI_LineHitting_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LineHitting_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LineHitting_C", "PreConstruct");

	Params::UI_LineHitting_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LineHitting.UI_LineHitting_C.Set Hidden Fail
// (BlueprintCallable, BlueprintEvent)

void UUI_LineHitting_C::Set_Hidden_Fail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LineHitting_C", "Set Hidden Fail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LineHitting.UI_LineHitting_C.Set Hidden Success
// (BlueprintCallable, BlueprintEvent)

void UUI_LineHitting_C::Set_Hidden_Success()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LineHitting_C", "Set Hidden Success");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LineHitting.UI_LineHitting_C.SetRound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Round                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LineHitting_C::SetRound(int32 Round)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LineHitting_C", "SetRound");

	Params::UI_LineHitting_C_SetRound Parms{};

	Parms.Round = Round;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LineHitting.UI_LineHitting_C.SetRoundFail
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_LineHitting_C::SetRoundFail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LineHitting_C", "SetRoundFail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_LineHitting.UI_LineHitting_C.SetRoundsTotal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Rounds                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LineHitting_C::SetRoundsTotal(int32 Rounds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LineHitting_C", "SetRoundsTotal");

	Params::UI_LineHitting_C_SetRoundsTotal Parms{};

	Parms.Rounds = Rounds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LineHitting.UI_LineHitting_C.SetTime
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LineHitting_C::SetTime(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LineHitting_C", "SetTime");

	Params::UI_LineHitting_C_SetTime Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LineHitting.UI_LineHitting_C.StartRoundTime
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_LineHitting_C::StartRoundTime(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LineHitting_C", "StartRoundTime");

	Params::UI_LineHitting_C_StartRoundTime Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_LineHitting.UI_LineHitting_C.SuccesResult
// (BlueprintCallable, BlueprintEvent)

void UUI_LineHitting_C::SuccesResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LineHitting_C", "SuccesResult");

	UObject::ProcessEvent(Func, nullptr);
}

}

