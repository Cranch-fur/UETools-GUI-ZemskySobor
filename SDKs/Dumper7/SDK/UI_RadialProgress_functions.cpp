#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_RadialProgress

#include "Basic.hpp"

#include "UI_RadialProgress_classes.hpp"
#include "UI_RadialProgress_parameters.hpp"


namespace SDK
{

// Function UI_RadialProgress.UI_RadialProgress_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_RadialProgress_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RadialProgress_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_RadialProgress.UI_RadialProgress_C.ExecuteUbergraph_UI_RadialProgress
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_RadialProgress_C::ExecuteUbergraph_UI_RadialProgress(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RadialProgress_C", "ExecuteUbergraph_UI_RadialProgress");

	Params::UI_RadialProgress_C_ExecuteUbergraph_UI_RadialProgress Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_RadialProgress.UI_RadialProgress_C.InvertScale
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_RadialProgress_C::InvertScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RadialProgress_C", "InvertScale");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_RadialProgress.UI_RadialProgress_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_RadialProgress_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RadialProgress_C", "PreConstruct");

	Params::UI_RadialProgress_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_RadialProgress.UI_RadialProgress_C.SetDefaultColor
// (BlueprintCallable, BlueprintEvent)

void UUI_RadialProgress_C::SetDefaultColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RadialProgress_C", "SetDefaultColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_RadialProgress.UI_RadialProgress_C.SetFailColor
// (BlueprintCallable, BlueprintEvent)

void UUI_RadialProgress_C::SetFailColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RadialProgress_C", "SetFailColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_RadialProgress.UI_RadialProgress_C.SetPercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InPercent                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OutPercent                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AngleRoller                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RedPercentIn                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RedPercentOut                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_RadialProgress_C::SetPercent(double InPercent, double OutPercent, float AngleRoller, double RedPercentIn, double RedPercentOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RadialProgress_C", "SetPercent");

	Params::UI_RadialProgress_C_SetPercent Parms{};

	Parms.InPercent = InPercent;
	Parms.OutPercent = OutPercent;
	Parms.AngleRoller = AngleRoller;
	Parms.RedPercentIn = RedPercentIn;
	Parms.RedPercentOut = RedPercentOut;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_RadialProgress.UI_RadialProgress_C.SetSuccessColor
// (BlueprintCallable, BlueprintEvent)

void UUI_RadialProgress_C::SetSuccessColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RadialProgress_C", "SetSuccessColor");

	UObject::ProcessEvent(Func, nullptr);
}

}

