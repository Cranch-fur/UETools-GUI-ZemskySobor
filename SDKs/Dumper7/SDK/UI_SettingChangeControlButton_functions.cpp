#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_SettingChangeControlButton

#include "Basic.hpp"

#include "UI_SettingChangeControlButton_classes.hpp"
#include "UI_SettingChangeControlButton_parameters.hpp"


namespace SDK
{

// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.BndEvt__UI_SettingChangeControlButton_ChangeButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UUI_SettingChangeControlButton_C::BndEvt__UI_SettingChangeControlButton_ChangeButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "BndEvt__UI_SettingChangeControlButton_ChangeButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");

	Params::UI_SettingChangeControlButton_C_BndEvt__UI_SettingChangeControlButton_ChangeButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UUI_SettingChangeControlButton_C::BP_OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "BP_OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.BP_OnUnhovered
// (Event, Protected, BlueprintEvent)

void UUI_SettingChangeControlButton_C::BP_OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "BP_OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.ChangeKey
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      NewKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UUI_SettingChangeControlButton_C::ChangeKey(const struct FKey& NewKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "ChangeKey");

	Params::UI_SettingChangeControlButton_C_ChangeKey Parms{};

	Parms.NewKey = std::move(NewKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_SettingChangeControlButton_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.ExecuteUbergraph_UI_SettingChangeControlButton
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_SettingChangeControlButton_C::ExecuteUbergraph_UI_SettingChangeControlButton(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "ExecuteUbergraph_UI_SettingChangeControlButton");

	Params::UI_SettingChangeControlButton_C_ExecuteUbergraph_UI_SettingChangeControlButton Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.FindInputDataByInputName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InputName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FInputChangeData*                Out_Row                                                (Parm, OutParm)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_SettingChangeControlButton_C::FindInputDataByInputName(class FName InputName, struct FInputChangeData* Out_Row, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "FindInputDataByInputName");

	Params::UI_SettingChangeControlButton_C_FindInputDataByInputName Parms{};

	Parms.InputName = InputName;

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Row != nullptr)
		*Out_Row = std::move(Parms.Out_Row);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.Get Bound Keyboard Key for Input
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey*                            Key                                                    (Parm, OutParm, HasGetValueTypeHash)

void UUI_SettingChangeControlButton_C::Get_Bound_Keyboard_Key_for_Input(bool* Result, struct FKey* Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "Get Bound Keyboard Key for Input");

	Params::UI_SettingChangeControlButton_C_Get_Bound_Keyboard_Key_for_Input Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (Key != nullptr)
		*Key = std::move(Parms.Key);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.GetDescription
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText*                            Description                                            (Parm, OutParm)

void UUI_SettingChangeControlButton_C::GetDescription(class FText* Description)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "GetDescription");

	Params::UI_SettingChangeControlButton_C_GetDescription Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Description != nullptr)
		*Description = std::move(Parms.Description);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.HandleAlreadyBoundKeyOption
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlayerAgree                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UUI_SettingChangeControlButton_C::HandleAlreadyBoundKeyOption(bool IsPlayerAgree, const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "HandleAlreadyBoundKeyOption");

	Params::UI_SettingChangeControlButton_C_HandleAlreadyBoundKeyOption Parms{};

	Parms.IsPlayerAgree = IsPlayerAgree;
	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.IsDirty
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_SettingChangeControlButton_C::IsDirty(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "IsDirty");

	Params::UI_SettingChangeControlButton_C_IsDirty Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.IsKeyAlreadyBound
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName*                            AlreadyBoundName                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_SettingChangeControlButton_C::IsKeyAlreadyBound(const struct FKey& Key, bool* Result, class FName* AlreadyBoundName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "IsKeyAlreadyBound");

	Params::UI_SettingChangeControlButton_C_IsKeyAlreadyBound Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (AlreadyBoundName != nullptr)
		*AlreadyBoundName = Parms.AlreadyBoundName;
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.OnAddedToFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FFocusEvent&               InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UUI_SettingChangeControlButton_C::OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "OnAddedToFocusPath");

	Params::UI_SettingChangeControlButton_C_OnAddedToFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.OnChangeButtonPressed
// (BlueprintCallable, BlueprintEvent)

void UUI_SettingChangeControlButton_C::OnChangeButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "OnChangeButtonPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.OnChangeButtonReleased
// (BlueprintCallable, BlueprintEvent)

void UUI_SettingChangeControlButton_C::OnChangeButtonReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "OnChangeButtonReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.OnCurrentTextStyleChanged
// (Event, Protected, BlueprintEvent)

void UUI_SettingChangeControlButton_C::OnCurrentTextStyleChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "OnCurrentTextStyleChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.OnFocusReceived
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FFocusEvent&               InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UUI_SettingChangeControlButton_C::OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "OnFocusReceived");

	Params::UI_SettingChangeControlButton_C_OnFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.OnInputChangeEnded
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_SettingChangeControlButton_C::OnInputChangeEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "OnInputChangeEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.OnKeySelectionCanceled
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_SettingChangeControlButton_C::OnKeySelectionCanceled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "OnKeySelectionCanceled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.OnKeyUpdated
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_SettingChangeControlButton_C::OnKeyUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "OnKeyUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.OnNewKeySelected
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UUI_SettingChangeControlButton_C::OnNewKeySelected(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "OnNewKeySelected");

	Params::UI_SettingChangeControlButton_C_OnNewKeySelected Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.OnRemovedFromFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FFocusEvent&               InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UUI_SettingChangeControlButton_C::OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "OnRemovedFromFocusPath");

	Params::UI_SettingChangeControlButton_C_OnRemovedFromFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.OnSettingsChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UEnhancedInputUserSettings*       Settings                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UUI_SettingChangeControlButton_C::OnSettingsChanged(class UEnhancedInputUserSettings* Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "OnSettingsChanged");

	Params::UI_SettingChangeControlButton_C_OnSettingsChanged Parms{};

	Parms.Settings = Settings;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.RevertSetting
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_SettingChangeControlButton_C::RevertSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "RevertSetting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.SaveSetting
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_SettingChangeControlButton_C::SaveSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "SaveSetting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.UnbindAllFromKey
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UUI_SettingChangeControlButton_C::UnbindAllFromKey(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "UnbindAllFromKey");

	Params::UI_SettingChangeControlButton_C_UnbindAllFromKey Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SettingChangeControlButton.UI_SettingChangeControlButton_C.UpdateKeyIcon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_SettingChangeControlButton_C::UpdateKeyIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SettingChangeControlButton_C", "UpdateKeyIcon");

	UObject::ProcessEvent(Func, nullptr);
}

}

