#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_SkillTreeSlot

#include "Basic.hpp"

#include "UI_SkillTreeSlot_classes.hpp"
#include "UI_SkillTreeSlot_parameters.hpp"


namespace SDK
{

// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.Available For Purchase
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_SkillTreeSlot_C::Available_For_Purchase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "Available For Purchase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.BP_OnClicked
// (Event, Protected, BlueprintEvent)

void UUI_SkillTreeSlot_C::BP_OnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "BP_OnClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.BP_OnDoubleClicked
// (Event, Protected, BlueprintEvent)

void UUI_SkillTreeSlot_C::BP_OnDoubleClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "BP_OnDoubleClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.BP_OnSelected
// (Event, Protected, BlueprintEvent)

void UUI_SkillTreeSlot_C::BP_OnSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "BP_OnSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_SkillTreeSlot_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_SkillTreeSlot_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.EnabledChildForUnlockedSlot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_SkillTreeSlot_C::EnabledChildForUnlockedSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "EnabledChildForUnlockedSlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.ExecuteUbergraph_UI_SkillTreeSlot
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_SkillTreeSlot_C::ExecuteUbergraph_UI_SkillTreeSlot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "ExecuteUbergraph_UI_SkillTreeSlot");

	Params::UI_SkillTreeSlot_C_ExecuteUbergraph_UI_SkillTreeSlot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.filteringForStone
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UUI_SkillTreeSlot_C::filteringForStone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "filteringForStone");

	Params::UI_SkillTreeSlot_C_filteringForStone Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.HideSelection
// (BlueprintCallable, BlueprintEvent)

void UUI_SkillTreeSlot_C::HideSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "HideSelection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.Init
// (BlueprintCallable, BlueprintEvent)

void UUI_SkillTreeSlot_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.InitChildArray
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_SkillTreeSlot_C::InitChildArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "InitChildArray");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.InitDefaults
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_SkillTreeSlot_C::InitDefaults()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "InitDefaults");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.initFilter
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_SkillTreeSlot_C::initFilter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "initFilter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.initForInventory
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_SkillTreeSlot_C::initForInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "initForInventory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.Install Item
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDA_SkillTree_Unit_Base_C*        l_item                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UUI_SkillTreeSlot_C::Install_Item(class UDA_SkillTree_Unit_Base_C* l_item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "Install Item");

	Params::UI_SkillTreeSlot_C_Install_Item Parms{};

	Parms.l_item = l_item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.IsAvailableForPurchase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UUI_SkillTreeSlot_C::IsAvailableForPurchase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "IsAvailableForPurchase");

	Params::UI_SkillTreeSlot_C_IsAvailableForPurchase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.IsItemInstalled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UUI_SkillTreeSlot_C::IsItemInstalled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "IsItemInstalled");

	Params::UI_SkillTreeSlot_C_IsItemInstalled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.On Clicked Slot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_SkillTreeSlot_C::On_Clicked_Slot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "On Clicked Slot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.onFocused
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    focused                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_SkillTreeSlot_C::onFocused(bool focused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "onFocused");

	Params::UI_SkillTreeSlot_C_onFocused Parms{};

	Parms.focused = focused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.OnMouseButtonDoubleClick
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 InMyGeometry                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             InMouseEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UUI_SkillTreeSlot_C::OnMouseButtonDoubleClick(const struct FGeometry& InMyGeometry, const struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "OnMouseButtonDoubleClick");

	Params::UI_SkillTreeSlot_C_OnMouseButtonDoubleClick Parms{};

	Parms.InMyGeometry = std::move(InMyGeometry);
	Parms.InMouseEvent = std::move(InMouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UUI_SkillTreeSlot_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "OnMouseButtonDown");

	Params::UI_SkillTreeSlot_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_SkillTreeSlot_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "PreConstruct");

	Params::UI_SkillTreeSlot_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.ResetSlot
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_SkillTreeSlot_C::ResetSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "ResetSlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.SaveSlotInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_SkillTreeSlot_C::SaveSlotInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "SaveSlotInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.Set Is Unlocked
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_SkillTreeSlot_C::Set_Is_Unlocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "Set Is Unlocked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.SlotDebug
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    InString                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UUI_SkillTreeSlot_C::SlotDebug(const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "SlotDebug");

	Params::UI_SkillTreeSlot_C_SlotDebug Parms{};

	Parms.InString = std::move(InString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.UnistallItem
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_SkillTreeSlot_C::UnistallItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "UnistallItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.Update
// (BlueprintCallable, BlueprintEvent)

void UUI_SkillTreeSlot_C::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_SkillTreeSlot.UI_SkillTreeSlot_C.UpdateLines
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_SkillTreeSlot_C::UpdateLines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SkillTreeSlot_C", "UpdateLines");

	UObject::ProcessEvent(Func, nullptr);
}

}

