#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_StealthIndicator

#include "Basic.hpp"

#include "UI_StealthIndicator_classes.hpp"
#include "UI_StealthIndicator_parameters.hpp"


namespace SDK
{

// Function UI_StealthIndicator.UI_StealthIndicator_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_StealthIndicator_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StealthIndicator_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_StealthIndicator.UI_StealthIndicator_C.DelayedHide
// (BlueprintCallable, BlueprintEvent)

void UUI_StealthIndicator_C::DelayedHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StealthIndicator_C", "DelayedHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_StealthIndicator.UI_StealthIndicator_C.ExecuteUbergraph_UI_StealthIndicator
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_StealthIndicator_C::ExecuteUbergraph_UI_StealthIndicator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StealthIndicator_C", "ExecuteUbergraph_UI_StealthIndicator");

	Params::UI_StealthIndicator_C_ExecuteUbergraph_UI_StealthIndicator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_StealthIndicator.UI_StealthIndicator_C.HideSelf
// (BlueprintCallable, BlueprintEvent)

void UUI_StealthIndicator_C::HideSelf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StealthIndicator_C", "HideSelf");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_StealthIndicator.UI_StealthIndicator_C.OnStealthWarning_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_StealthIndicator_C::OnStealthWarning_Event(bool IsActive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StealthIndicator_C", "OnStealthWarning_Event");

	Params::UI_StealthIndicator_C_OnStealthWarning_Event Parms{};

	Parms.IsActive_0 = IsActive_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_StealthIndicator.UI_StealthIndicator_C.OnTagChangedWithASC_Event
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAbilitySystemComponent*          ASC                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              UpdatedTag                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    Exists                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_StealthIndicator_C::OnTagChangedWithASC_Event(class UAbilitySystemComponent* ASC, const struct FGameplayTag& UpdatedTag, bool Exists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StealthIndicator_C", "OnTagChangedWithASC_Event");

	Params::UI_StealthIndicator_C_OnTagChangedWithASC_Event Parms{};

	Parms.ASC = ASC;
	Parms.UpdatedTag = std::move(UpdatedTag);
	Parms.Exists = Exists;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_StealthIndicator.UI_StealthIndicator_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_StealthIndicator_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StealthIndicator_C", "PreConstruct");

	Params::UI_StealthIndicator_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_StealthIndicator.UI_StealthIndicator_C.ResetAlarmAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_StealthIndicator_C::ResetAlarmAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StealthIndicator_C", "ResetAlarmAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_StealthIndicator.UI_StealthIndicator_C.ShowProgressBar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_StealthIndicator_C::ShowProgressBar(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StealthIndicator_C", "ShowProgressBar");

	Params::UI_StealthIndicator_C_ShowProgressBar Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_StealthIndicator.UI_StealthIndicator_C.ShowShine
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_StealthIndicator_C::ShowShine(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StealthIndicator_C", "ShowShine");

	Params::UI_StealthIndicator_C_ShowShine Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_StealthIndicator.UI_StealthIndicator_C.ShowStealthIndicator
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_StealthIndicator_C::ShowStealthIndicator(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StealthIndicator_C", "ShowStealthIndicator");

	Params::UI_StealthIndicator_C_ShowStealthIndicator Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_StealthIndicator.UI_StealthIndicator_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_StealthIndicator_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StealthIndicator_C", "Tick");

	Params::UI_StealthIndicator_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_StealthIndicator.UI_StealthIndicator_C.UpdateAlarmStateNew
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AlarmPercent_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_StealthIndicator_C::UpdateAlarmStateNew(double AlarmPercent_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StealthIndicator_C", "UpdateAlarmStateNew");

	Params::UI_StealthIndicator_C_UpdateAlarmStateNew Parms{};

	Parms.AlarmPercent_0 = AlarmPercent_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_StealthIndicator.UI_StealthIndicator_C.UpdateIcon
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_StealthIndicator_C::UpdateIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StealthIndicator_C", "UpdateIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_StealthIndicator.UI_StealthIndicator_C.UpdateIconNew
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_StealthIndicator_C::UpdateIconNew()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StealthIndicator_C", "UpdateIconNew");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_StealthIndicator.UI_StealthIndicator_C.UpdateProgressBar
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_StealthIndicator_C::UpdateProgressBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StealthIndicator_C", "UpdateProgressBar");

	UObject::ProcessEvent(Func, nullptr);
}

}

