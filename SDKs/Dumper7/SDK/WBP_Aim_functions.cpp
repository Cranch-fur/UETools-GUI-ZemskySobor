#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Aim

#include "Basic.hpp"

#include "WBP_Aim_classes.hpp"
#include "WBP_Aim_parameters.hpp"


namespace SDK
{

// Function WBP_Aim.WBP_Aim_C.Clear Notch Images
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Aim_C::Clear_Notch_Images()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Aim_C", "Clear Notch Images");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Aim.WBP_Aim_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Aim_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Aim_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Aim.WBP_Aim_C.ExecuteUbergraph_WBP_Aim
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Aim_C::ExecuteUbergraph_WBP_Aim(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Aim_C", "ExecuteUbergraph_WBP_Aim");

	Params::WBP_Aim_C_ExecuteUbergraph_WBP_Aim Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Aim.WBP_Aim_C.Init Aim Element Image
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImage*                           Image                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>        Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// const struct FWidgetTransform&          Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UWBP_Aim_C::Init_Aim_Element_Image(class UImage* Image, TSoftObjectPtr<class UTexture2D> Texture, const struct FWidgetTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Aim_C", "Init Aim Element Image");

	Params::WBP_Aim_C_Init_Aim_Element_Image Parms{};

	Parms.Image = Image;
	Parms.Texture = Texture;
	Parms.Transform = std::move(Transform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Aim.WBP_Aim_C.Init Default Aim Center
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAimSettingsDataAsset*            Aim_Settings_Data                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_Aim_C::Init_Default_Aim_Center(class UAimSettingsDataAsset* Aim_Settings_Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Aim_C", "Init Default Aim Center");

	Params::WBP_Aim_C_Init_Default_Aim_Center Parms{};

	Parms.Aim_Settings_Data = Aim_Settings_Data;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Aim.WBP_Aim_C.On Deal Hit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADefaultCharacter*                HitInstigator                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ADefaultCharacter*                HitTarget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_Aim_C::On_Deal_Hit(class ADefaultCharacter* HitInstigator, class ADefaultCharacter* HitTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Aim_C", "On Deal Hit");

	Params::WBP_Aim_C_On_Deal_Hit Parms{};

	Parms.HitInstigator = HitInstigator;
	Parms.HitTarget = HitTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Aim.WBP_Aim_C.On Predicted Damage
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const float&                            Damage                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Aim_C::On_Predicted_Damage(const float& Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Aim_C", "On Predicted Damage");

	Params::WBP_Aim_C_On_Predicted_Damage Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Aim.WBP_Aim_C.Play Hit Callback Animation
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Aim_C::Play_Hit_Callback_Animation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Aim_C", "Play Hit Callback Animation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Aim.WBP_Aim_C.Play On Shot Animations
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Aim_C::Play_On_Shot_Animations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Aim_C", "Play On Shot Animations");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Aim.WBP_Aim_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Aim_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Aim_C", "PreConstruct");

	Params::WBP_Aim_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Aim.WBP_Aim_C.Reset Aim
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Aim_C::Reset_Aim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Aim_C", "Reset Aim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Aim.WBP_Aim_C.Set Aim Target Actor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           New_Aim_Target_Actor                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_Aim_C::Set_Aim_Target_Actor(class AActor* New_Aim_Target_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Aim_C", "Set Aim Target Actor");

	Params::WBP_Aim_C_Set_Aim_Target_Actor Parms{};

	Parms.New_Aim_Target_Actor = New_Aim_Target_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Aim.WBP_Aim_C.Set Current Weaponry Type
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEquipmentType                          NewWeaponryType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Aim_C::Set_Current_Weaponry_Type(EEquipmentType NewWeaponryType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Aim_C", "Set Current Weaponry Type");

	Params::WBP_Aim_C_Set_Current_Weaponry_Type Parms{};

	Parms.NewWeaponryType = NewWeaponryType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Aim.WBP_Aim_C.Update Aim by Current Attitude
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAimSettingsDataAsset*            Anim_Settings_Data                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_Aim_C::Update_Aim_by_Current_Attitude(class UAimSettingsDataAsset* Anim_Settings_Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Aim_C", "Update Aim by Current Attitude");

	Params::WBP_Aim_C_Update_Aim_by_Current_Attitude Parms{};

	Parms.Anim_Settings_Data = Anim_Settings_Data;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Aim.WBP_Aim_C.Update Aim by Target State
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAimSettingsDataAsset*            Aim_Settings_Data                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_Aim_C::Update_Aim_by_Target_State(class UAimSettingsDataAsset* Aim_Settings_Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Aim_C", "Update Aim by Target State");

	Params::WBP_Aim_C_Update_Aim_by_Target_State Parms{};

	Parms.Aim_Settings_Data = Aim_Settings_Data;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Aim.WBP_Aim_C.Update Center by Current Attitude
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAimSettingsDataAsset*            Aim_Settings_Data                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_Aim_C::Update_Center_by_Current_Attitude(class UAimSettingsDataAsset* Aim_Settings_Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Aim_C", "Update Center by Current Attitude");

	Params::WBP_Aim_C_Update_Center_by_Current_Attitude Parms{};

	Parms.Aim_Settings_Data = Aim_Settings_Data;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Aim.WBP_Aim_C.Update Current Attitude
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Aim_C::Update_Current_Attitude()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Aim_C", "Update Current Attitude");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Aim.WBP_Aim_C.Update Notch by Current Attitude
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAimSettingsDataAsset*            Aim_Settings_Data                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_Aim_C::Update_Notch_by_Current_Attitude(class UAimSettingsDataAsset* Aim_Settings_Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Aim_C", "Update Notch by Current Attitude");

	Params::WBP_Aim_C_Update_Notch_by_Current_Attitude Parms{};

	Parms.Aim_Settings_Data = Aim_Settings_Data;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Aim.WBP_Aim_C.Update Target State
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Aim_C::Update_Target_State()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Aim_C", "Update Target State");

	UObject::ProcessEvent(Func, nullptr);
}

}

