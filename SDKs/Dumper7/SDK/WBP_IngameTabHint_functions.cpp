#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_IngameTabHint

#include "Basic.hpp"

#include "WBP_IngameTabHint_classes.hpp"
#include "WBP_IngameTabHint_parameters.hpp"


namespace SDK
{

// Function WBP_IngameTabHint.WBP_IngameTabHint_C.BP_IsQueueAvailable
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_IngameTabHint_C::BP_IsQueueAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_IngameTabHint_C", "BP_IsQueueAvailable");

	Params::WBP_IngameTabHint_C_BP_IsQueueAvailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_IngameTabHint.WBP_IngameTabHint_C.BP_OnHintFinished
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UInGameHintTrackerData*           Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_IngameTabHint_C::BP_OnHintFinished(class UInGameHintTrackerData* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_IngameTabHint_C", "BP_OnHintFinished");

	Params::WBP_IngameTabHint_C_BP_OnHintFinished Parms{};

	Parms.Data = Data;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IngameTabHint.WBP_IngameTabHint_C.BP_RunHint
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UInGameHintTrackerData*           Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_IngameTabHint_C::BP_RunHint(class UInGameHintTrackerData* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_IngameTabHint_C", "BP_RunHint");

	Params::WBP_IngameTabHint_C_BP_RunHint Parms{};

	Parms.Data = Data;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IngameTabHint.WBP_IngameTabHint_C.BP_StopCurrentHint
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UWBP_IngameTabHint_C::BP_StopCurrentHint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_IngameTabHint_C", "BP_StopCurrentHint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IngameTabHint.WBP_IngameTabHint_C.ClearData
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_IngameTabHint_C::ClearData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_IngameTabHint_C", "ClearData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IngameTabHint.WBP_IngameTabHint_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_IngameTabHint_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_IngameTabHint_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_IngameTabHint.WBP_IngameTabHint_C.ExecuteUbergraph_WBP_IngameTabHint
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IngameTabHint_C::ExecuteUbergraph_WBP_IngameTabHint(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_IngameTabHint_C", "ExecuteUbergraph_WBP_IngameTabHint");

	Params::WBP_IngameTabHint_C_ExecuteUbergraph_WBP_IngameTabHint Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IngameTabHint.WBP_IngameTabHint_C.OnHudStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_HUDStates                             NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_HUDStates                             OldState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IngameTabHint_C::OnHudStateChanged(E_HUDStates NewState, E_HUDStates OldState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_IngameTabHint_C", "OnHudStateChanged");

	Params::WBP_IngameTabHint_C_OnHudStateChanged Parms{};

	Parms.NewState = NewState;
	Parms.OldState = OldState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IngameTabHint.WBP_IngameTabHint_C.OnHudStateChangedWhilePopup
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_HUDStates                             NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_HUDStates                             OldState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_IngameTabHint_C::OnHudStateChangedWhilePopup(E_HUDStates NewState, E_HUDStates OldState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_IngameTabHint_C", "OnHudStateChangedWhilePopup");

	Params::WBP_IngameTabHint_C_OnHudStateChangedWhilePopup Parms{};

	Parms.NewState = NewState;
	Parms.OldState = OldState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_IngameTabHint.WBP_IngameTabHint_C.OnTimerStop
// (BlueprintCallable, BlueprintEvent)

void UWBP_IngameTabHint_C::OnTimerStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_IngameTabHint_C", "OnTimerStop");

	UObject::ProcessEvent(Func, nullptr);
}

}

