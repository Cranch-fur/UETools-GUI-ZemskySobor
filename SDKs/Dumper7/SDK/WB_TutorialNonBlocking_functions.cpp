#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TutorialNonBlocking

#include "Basic.hpp"

#include "WB_TutorialNonBlocking_classes.hpp"
#include "WB_TutorialNonBlocking_parameters.hpp"


namespace SDK
{

// Function WB_TutorialNonBlocking.WB_TutorialNonBlocking_C.BndEvt__WB_TutorialNonBlocking_UI_MenuActionButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWB_TutorialNonBlocking_C::BndEvt__WB_TutorialNonBlocking_UI_MenuActionButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialNonBlocking_C", "BndEvt__WB_TutorialNonBlocking_UI_MenuActionButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");

	Params::WB_TutorialNonBlocking_C_BndEvt__WB_TutorialNonBlocking_UI_MenuActionButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TutorialNonBlocking.WB_TutorialNonBlocking_C.CloseHint
// (Event, Protected, BlueprintEvent)

void UWB_TutorialNonBlocking_C::CloseHint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialNonBlocking_C", "CloseHint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TutorialNonBlocking.WB_TutorialNonBlocking_C.ExecuteUbergraph_WB_TutorialNonBlocking
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TutorialNonBlocking_C::ExecuteUbergraph_WB_TutorialNonBlocking(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialNonBlocking_C", "ExecuteUbergraph_WB_TutorialNonBlocking");

	Params::WB_TutorialNonBlocking_C_ExecuteUbergraph_WB_TutorialNonBlocking Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TutorialNonBlocking.WB_TutorialNonBlocking_C.FillOut
// (Event, Protected, BlueprintEvent)

void UWB_TutorialNonBlocking_C::FillOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialNonBlocking_C", "FillOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TutorialNonBlocking.WB_TutorialNonBlocking_C.GetHintTextContainer
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URichTextBlock*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class URichTextBlock* UWB_TutorialNonBlocking_C::GetHintTextContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialNonBlocking_C", "GetHintTextContainer");

	Params::WB_TutorialNonBlocking_C_GetHintTextContainer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_TutorialNonBlocking.WB_TutorialNonBlocking_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TutorialNonBlocking_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TutorialNonBlocking_C", "Tick");

	Params::WB_TutorialNonBlocking_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

