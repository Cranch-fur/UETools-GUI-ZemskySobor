#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_BaseMapMark

#include "Basic.hpp"

#include "W_BaseMapMark_classes.hpp"
#include "W_BaseMapMark_parameters.hpp"


namespace SDK
{

// Function W_BaseMapMark.W_BaseMapMark_C.DisableIntersectedOpacity
// (Public, BlueprintCallable, BlueprintEvent)

void UW_BaseMapMark_C::DisableIntersectedOpacity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_BaseMapMark_C", "DisableIntersectedOpacity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_BaseMapMark.W_BaseMapMark_C.EnableIntersectedOpacity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_BaseMapMark_C*                 IntersectedMarker                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_BaseMapMark_C::EnableIntersectedOpacity(class UW_BaseMapMark_C* IntersectedMarker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_BaseMapMark_C", "EnableIntersectedOpacity");

	Params::W_BaseMapMark_C_EnableIntersectedOpacity Parms{};

	Parms.IntersectedMarker = IntersectedMarker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_BaseMapMark.W_BaseMapMark_C.Init
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          RelatedObject                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UW_Map_Layer_C*                   Layer                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              MapTag                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UW_BaseMapMark_C::Init(class UObject* RelatedObject, class UW_Map_Layer_C* Layer, const struct FGameplayTag& MapTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_BaseMapMark_C", "Init");

	Params::W_BaseMapMark_C_Init Parms{};

	Parms.RelatedObject = RelatedObject;
	Parms.Layer = Layer;
	Parms.MapTag = std::move(MapTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_BaseMapMark.W_BaseMapMark_C.IsIntersectedOpacityEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_BaseMapMark_C::IsIntersectedOpacityEnabled(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_BaseMapMark_C", "IsIntersectedOpacityEnabled");

	Params::W_BaseMapMark_C_IsIntersectedOpacityEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function W_BaseMapMark.W_BaseMapMark_C.Update
// (Public, BlueprintCallable, BlueprintEvent)

void UW_BaseMapMark_C::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_BaseMapMark_C", "Update");

	UObject::ProcessEvent(Func, nullptr);
}

}

