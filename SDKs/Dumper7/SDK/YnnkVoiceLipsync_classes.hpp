#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: YnnkVoiceLipsync

#include "Basic.hpp"

#include "YnnkVoiceLipsync_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class YnnkVoiceLipsync.AsyncRecognizer
// 0x0100 (0x0128 - 0x0028)
class UAsyncRecognizer final : public UObject
{
public:
	int32                                         OperationId;                                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TDelegate<void(int32 ID, const TArray<struct FSingeWordData>& Data)> CallbackEvent;              // 0x002C(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TDelegate<void(class UYnnkVoiceLipsyncData* VoiceLipsyncData, bool bResult, const class FString& Subtitles)> CallbackGenerationEvent; // 0x003C(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSingeWordData>                 OutSentence;                                       // 0x0050(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bAutoCreateLipsyncData;                            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundWave*                             OutSound;                                          // 0x0068(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 OutSubtitles;                                      // 0x0070(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsWorking;                                        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AudioDuration;                                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_88[0x10];                                      // 0x0088(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UYnnkVoiceLipsyncData*, int32>     Queue;                                             // 0x0098(0x0050)(NativeAccessSpecifierPublic)
	class UObject*                                WorldContext;                                      // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInterruptLastRequest;                             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RawRecgonizedText;                                 // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_108[0x20];                                     // 0x0108(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AsyncRecognizeAudio(int32 ID, const TArray<uint8>& InRawPCMData, uint32 InSampleRate, uint8 BitRate, float Duration, const TDelegate<void(int32 ID, const TArray<struct FSingeWordData>& Data)>& InCallbackEvent);
	void AsyncRecognizeAudioAndGenerateAsset(const TArray<uint8>& InRawPCMData, uint32 InSampleRate, uint8 BitRate, float Duration, class USoundWave* OutSoundWave, const TDelegate<void(class UYnnkVoiceLipsyncData* VoiceLipsyncData, bool bResult, const class FString& Subtitles)>& InCallbackEvent);
	void AsyncRecognizeQueue(int32 ID, class UYnnkVoiceLipsyncData* Target);
	void NextFromQueue_Internal(int32 CompletedIndex, bool bResult);
	void RecognizeFromQueue_Internal();
	void RecognizePCMData_Internal(const TArray<uint8>& InRawPCMData, uint32 InSampleRate, uint8 BitRate);
	void Stop();

	bool IsWorking() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AsyncRecognizer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AsyncRecognizer")
	}
	static class UAsyncRecognizer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAsyncRecognizer>();
	}
};
DUMPER7_ASSERTS_UAsyncRecognizer;

// Class YnnkVoiceLipsync.RecognizePCMData
// 0x0068 (0x0098 - 0x0030)
class URecognizePCMData final : public UBlueprintAsyncActionBase
{
public:
	TMulticastInlineDelegate<void(class UYnnkVoiceLipsyncData* VoiceLipsyncData, const class FString& Subtitles)> Succeed; // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& Reason)> Failed;                              // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UAsyncRecognizer*                       AsyncRecognizer;                                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundWave*                             SoundAsset;                                        // 0x0058(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         SampleRate;                                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 PCMData;                                           // 0x0068(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UObject*                                WorldContext;                                      // 0x0078(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bStopPreviousRequests;                             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 ID, const TArray<struct FSingeWordData>& Data)> RemoteResultDelegate;       // 0x0084(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class URecognizePCMData* RecognizeRuntimeSoundWave(class UObject* InWorldContext, class USoundWave* InSoundAsset, bool bInterruptActiveRequest);
	static class URecognizePCMData* RecognizeUncompressedPCMData(class UObject* InWorldContext, const TArray<uint8>& InPCMData, int32 InSampleRate, bool bInterruptActiveRequest);

	void OnAsyncRequestResult(int32 ID, const TArray<struct FSingeWordData>& Data);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RecognizePCMData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RecognizePCMData")
	}
	static class URecognizePCMData* GetDefaultObj()
	{
		return GetDefaultObjImpl<URecognizePCMData>();
	}
};
DUMPER7_ASSERTS_URecognizePCMData;

// Class YnnkVoiceLipsync.RemoteRecognizeSoundWave
// 0x0058 (0x0088 - 0x0030)
class URemoteRecognizeSoundWave final : public UBlueprintAsyncActionBase
{
public:
	TMulticastInlineDelegate<void(const TArray<struct FSingeWordData>& OutSentence, const class FString& Subtitles)> Succeed; // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& Description)> Failed;                         // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UYnnkRemoteClient*                      RemoteClient;                                      // 0x0050(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundWave*                             SoundAsset;                                        // 0x0058(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<uint8>                                 PCMData;                                           // 0x0060(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                         SampleRate;                                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TDelegate<void(int32 RequestID, const TArray<struct FSingeWordData>& OutSentence, const class FString& Subtitles)> RemoteResultDelegate; // 0x0074(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class URemoteRecognizeSoundWave* RemoteRecognizeAudioData(class UYnnkRemoteClient* RemoteConnectionClient, const TArray<uint8>& InPCMData, int32 InSampleRate);
	static class URemoteRecognizeSoundWave* RemoteRecognizeSoundWave(class UYnnkRemoteClient* RemoteConnectionClient, class USoundWave* InSoundAsset);

	void OnRemoteRequestResult(int32 RequestID, const TArray<struct FSingeWordData>& OutSentence, const class FString& Subtitles);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RemoteRecognizeSoundWave")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RemoteRecognizeSoundWave")
	}
	static class URemoteRecognizeSoundWave* GetDefaultObj()
	{
		return GetDefaultObjImpl<URemoteRecognizeSoundWave>();
	}
};
DUMPER7_ASSERTS_URemoteRecognizeSoundWave;

// Class YnnkVoiceLipsync.StreamLipsyncGenerator
// 0x00C8 (0x0168 - 0x00A0)
class UStreamLipsyncGenerator final : public UActorComponent
{
public:
	float                                         ProcessingBatchSize;                               // 0x00A0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UYnnkVoiceLipsyncData* LipsyncAsset)> OnGenerationComplete;  // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnGenerationFailed;                                // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& Subtitle)> OnGenerationUpdated;               // 0x00C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_D8[0x90];                                      // 0x00D8(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FinalizeStream();
	bool StartStream();
	void StreamData(const TArray<uint8>& Data);

	bool IsStreaming() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StreamLipsyncGenerator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StreamLipsyncGenerator")
	}
	static class UStreamLipsyncGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStreamLipsyncGenerator>();
	}
};
DUMPER7_ASSERTS_UStreamLipsyncGenerator;

// Class YnnkVoiceLipsync.StreamVoiceRecognizeComponent
// 0x0090 (0x0130 - 0x00A0)
class UStreamVoiceRecognizeComponent final : public UActorComponent
{
public:
	float                                         DelayOnSilence;                                    // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAsynchronousRecognize;                            // 0x00A4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDebugMode;                                        // 0x00A5(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AudioBufferSize;                                   // 0x00A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCapturing;                                        // 0x00AC(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool bIsFinalized, const class FString& Text)> OnVoiceDataRecognized; // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bIsFinalized, const class FString& Text)> OnDebugOutput;      // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_D0[0x20];                                      // 0x00D0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BytesInBuffer;                                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F4[0xC];                                       // 0x00F4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ProcessRemainingDataTime;                          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_104[0x2C];                                     // 0x0104(0x002C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FinalizeAudioRecognition(const class FString& JsonData, bool bFinalized);
	bool StartCapture(class FString* Message);
	void StopCapture(bool bResetVosk);

	void ReadJsonData(bool bFinalResult, const class FString& JsonData, class FString* OutWord) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StreamVoiceRecognizeComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StreamVoiceRecognizeComponent")
	}
	static class UStreamVoiceRecognizeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStreamVoiceRecognizeComponent>();
	}
};
DUMPER7_ASSERTS_UStreamVoiceRecognizeComponent;

// Class YnnkVoiceLipsync.YnnkLipsyncController
// 0x01D0 (0x0270 - 0x00A0)
class UYnnkLipsyncController final : public UActorComponent
{
public:
	class FName                                   AudioComponentName;                                // 0x00A0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SkeletalMeshComponentName;                         // 0x00A8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EYnnkAnimationType                            AnimationType;                                     // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EYnnkViseme, struct FCompositeCurvesWrapper> AnimationTargets;                              // 0x00B8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         AnimationIntensity;                                // 0x0108(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNormalizeCurves;                                  // 0x010C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FadeInSpeed;                                       // 0x0110(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceAnimationInSkeletonCurves;                   // 0x0114(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPoseAsset*                             VisemesPoseAsset;                                  // 0x0118(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_120[0x50];                                     // 0x0120(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 ActiveVisemeValues;                                // 0x0170(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FName, float>                      ActiveCurveValues;                                 // 0x0180(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bStartCorrectionByEnvelope;                        // 0x01D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D1[0xF];                                      // 0x01D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UYnnkVoiceLipsyncData* PhraseAsset)> OnStartSpeaking;        // 0x01E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UYnnkVoiceLipsyncData* PhraseAsset)> OnSpeakingInterrupted;  // 0x01F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UYnnkVoiceLipsyncData* PhraseAsset)> OnSpeakingComplete;     // 0x0200(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         PlayTime;                                          // 0x0210(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IsSpeakingAlpha;                                   // 0x0214(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UYnnkVoiceLipsyncData*                  ActiveLipsyncCurves;                               // 0x0218(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                             ActiveVoiceAsset;                                  // 0x0220(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioComponent*                        Speaker;                                           // 0x0228(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0230(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bInitialized;                                      // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSpeaking;                                         // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bInterruptSpeaking;                                // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCloseSpeaking;                                    // 0x023B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeStart;                                         // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_240[0x4];                                      // 0x0240(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayTimeAsSum;                                     // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         InterruptTime;                                     // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         VoiceAssetDuration;                                // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SpeakSoundOffset;                                  // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TimerSoundOffsetBefore;                            // 0x0258(0x0008)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                           TimerSoundOffsetAfter;                             // 0x0260(0x0008)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EYnnkViseme                                   PlayingViseme;                                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool InitializeAnimationTargets();
	void OnSpeakerFinished();
	void OnSpeakerPlaybackPercent(const class USoundWave* PlayingSoundWave, const float PlaybackPercent);
	void OnSpeakerSingleEnvelope(const class USoundWave* PlayingSoundWave, const float EnvelopeValue);
	void PrepareSound(class USoundWave* Sound);
	void SetSpeaker(class UAudioComponent* NewSpeaker);
	void Speak(class UYnnkVoiceLipsyncData* VoiceLipsyncData);
	void SpeakEx(class USoundBase* Voice, class UYnnkVoiceLipsyncData* VoiceLipsyncData, float SoundOffset);
	void StopSpeaking();

	EYnnkViseme GetCurrentViseme() const;
	bool IsSpeaking() const;
	void LogDebugData() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("YnnkLipsyncController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"YnnkLipsyncController")
	}
	static class UYnnkLipsyncController* GetDefaultObj()
	{
		return GetDefaultObjImpl<UYnnkLipsyncController>();
	}
};
DUMPER7_ASSERTS_UYnnkLipsyncController;

// Class YnnkVoiceLipsync.YnnkLipSyncFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UYnnkLipSyncFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void AppendCurveAnimations(const TMap<class FName, struct FSimpleFloatCurve>& A, const TMap<class FName, struct FSimpleFloatCurve>& B, TMap<class FName, struct FSimpleFloatCurve>* Result);
	static void AppendCurveSet(const TMap<class FName, float>& A, const TMap<class FName, float>& B, TMap<class FName, float>* Result);
	static int32 AsyncLoadFromPCMData(const TArray<uint8>& PCMData, int32 SampleRate, uint8 BitRate, float Duration, bool bCreateSoundWave, bool bInterruptLastRequest, class USoundWave** OutSoundWave, const TDelegate<void(int32 ID, const TArray<struct FSingeWordData>& Data)>& CallbackEvent, class UAsyncRecognizer** AsyncRecognizer);
	static class UYnnkRemoteClient* ConnectToRecognitionServer(const class FString& IPv4, int32 Port, bool bLogData);
	static bool CreateLipsyncDataFromWavFile(class UObject* WorldContext, const class FString& Filename, const TDelegate<void(class UYnnkVoiceLipsyncData* VoiceLipsyncData, bool bResult, const class FString& Subtitles)>& CallbackEvent, bool bInterruptLastRequest, class FString* OutErrors);
	static int32 CreateTranscriptedTextFromFile(const class FString& Filename, const TDelegate<void(int32 ID, const TArray<struct FSingeWordData>& Data)>& CallbackEvent, bool bInterruptLastRequest, class USoundWave** LoadedAudio, class UAsyncRecognizer** AsyncRecognizer);
	static uint8 CreateTranscriptedTextFromSpeechAsset(class USoundWave* SpeechAudio, bool bUseRawPCMData, const TDelegate<void(int32 ID, const TArray<struct FSingeWordData>& Data)>& CallbackEvent, bool bInterruptLastRequest);
	static void CreateTranscriptionDictionary(const class FString& DictFile_ARPAbet, const class FString& StartAt, const class FString& TargetFileName);
	static void ExpandCurveToBaseCurves(const struct FSimpleFloatCurve& InCurve, const TSet<class FName>& AnimationTargets, const class UPoseAsset* PoseAsset, TMap<class FName, struct FSimpleFloatCurve>* OutCurves);
	static void ExpandPoseAnimationToCurves(const TMap<class FName, struct FSimpleFloatCurve>& InAnimation, const class UPoseAsset* PoseAsset, TMap<class FName, struct FSimpleFloatCurve>* OutAnimation, const class FString& CurveNameFilter, float CombineKeysPrecision, bool bOptimizeKeys);
	static float GetCurvesSetDuration(const TMap<class FName, struct FSimpleFloatCurve>& CurvesAnimation);
	static class FString GetLipsyncGenerationLangualge();
	static float GetSimpleCurveValue(struct FSimpleFloatCurve& Curve, float Time);
	static bool LoadWaveFile(const class FString& Filename, TArray<uint8>* OutPCMData, int32* SampleRate, uint8* BitRate, uint8* Channels, float* Duration);
	static bool LoadWaveFileToSoundWave(const class FString& Filename, class UObject* Outer_0, class USoundWave** OutSoundWave);
	static void MultiplyCurvesSet(const TMap<class FName, float>& A, float Multiplier, TMap<class FName, float>* Result);
	static void MultiplyCurvesSets(const TMap<class FName, float>& A, const TMap<class FName, float>& B, TMap<class FName, float>* Result);
	static void PowerCurvesSet(const TMap<class FName, float>& A, float B, TMap<class FName, float>* Result);
	static void RecognizeRawAudioData(const TArray<uint8>& PCMData, uint8 BitRate, TArray<struct FSingeWordData>* OutRecognizedData);
	static void ResetVoskVoiceRecognizer();
	static void SaveSoundWaveToFile(class USoundWave* Wave, const class FString& Filename);
	static void SetYnnkAudioSampleRate(int32 NewSampleRate);
	static void SubstractCurvesSet(const TMap<class FName, float>& A, const TMap<class FName, float>& B, TMap<class FName, float>* Result);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("YnnkLipSyncFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"YnnkLipSyncFunctionLibrary")
	}
	static class UYnnkLipSyncFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UYnnkLipSyncFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UYnnkLipSyncFunctionLibrary;

// Class YnnkVoiceLipsync.YnnkLipsyncSettings
// 0x0110 (0x0138 - 0x0028)
class UYnnkLipsyncSettings final : public UObject
{
public:
	class FName                                   Language;                                          // 0x0028(0x0008)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ModelPath;                                         // 0x0030(0x0010)(Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TranscriptionDictionaryPath;                       // 0x0040(0x0010)(Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PackagedDataDirectory;                             // 0x0050(0x0010)(Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, EYnnkViseme>              CustomVisemeBinding;                               // 0x0060(0x0050)(Edit, Config, GlobalConfig, NativeAccessSpecifierPublic)
	bool                                          bStretchCurves;                                    // 0x00B0(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurvesSofteningPower;                              // 0x00B4(0x0004)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurvesSmoothing;                                   // 0x00B8(0x0004)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGeneratePhonemesData;                             // 0x00BC(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SampleRate;                                        // 0x00C0(0x0004)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLipsyncAnimationSettings              AnimationSettings;                                 // 0x00C8(0x0070)(Edit, Config, GlobalConfig, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("YnnkLipsyncSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"YnnkLipsyncSettings")
	}
	static class UYnnkLipsyncSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UYnnkLipsyncSettings>();
	}
};
DUMPER7_ASSERTS_UYnnkLipsyncSettings;

// Class YnnkVoiceLipsync.YnnkRemoteClient
// 0x0128 (0x0150 - 0x0028)
class UYnnkRemoteClient final : public UObject
{
public:
	bool                                          bDebugLog;                                         // 0x0028(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 RequestID, const class FString& Command, const class FString& JsonPacket)> OnResponseReceived; // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bIsConnected;                                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SavedInputData;                                    // 0x0048(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_58[0xF8];                                      // 0x0058(0x00F8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool ConnectToServer(const class FString& IP, int32 Port);
	void Disconnect();
	int32 GenerateFacialAnimation(const class UYnnkVoiceLipsyncData* LipsyncData, bool bLipSync, bool bFacialAnimation);
	int32 RecognizeAudioData(const TArray<uint8>& PCMData, int32 SampleRate, const TDelegate<void(int32 RequestID, const TArray<struct FSingeWordData>& OutSentence, const class FString& Subtitles)>& CallbackEvent);
	int32 RecognizeSoundWave(class USoundWave* SoundAsset, const TDelegate<void(int32 RequestID, const TArray<struct FSingeWordData>& OutSentence, const class FString& Subtitles)>& CallbackEvent);
	void RequestInitConnection();

	bool IsConnected() const;
	bool IsInitialized() const;
	void PingServer() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("YnnkRemoteClient")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"YnnkRemoteClient")
	}
	static class UYnnkRemoteClient* GetDefaultObj()
	{
		return GetDefaultObjImpl<UYnnkRemoteClient>();
	}
};
DUMPER7_ASSERTS_UYnnkRemoteClient;

// Class YnnkVoiceLipsync.YnnkVoiceLipsyncData
// 0x0188 (0x01B8 - 0x0030)
class UYnnkVoiceLipsyncData final : public UDataAsset
{
public:
	TMap<EYnnkViseme, struct FSimpleFloatCurve>   Curves;                                            // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<class FName, struct FSimpleFloatCurve>   RawCurves;                                         // 0x0080(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bUseRawCurvesAnimation;                            // 0x00D0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                MetadataObject;                                    // 0x00D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPhonemeTextData>               PhonemesData;                                      // 0x00E0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class USoundWave*                             SoundAsset;                                        // 0x00F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Subtitles;                                         // 0x00F8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<class FName, struct FSimpleFloatCurve>   ExtraAnimData1;                                    // 0x0110(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<class FName, struct FSimpleFloatCurve>   ExtraAnimData2;                                    // 0x0160(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         PlayDuration;                                      // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UYnnkVoiceLipsyncData* CreateVoiceLipsyncData(class UObject* Parent, const TArray<struct FSingeWordData>& Sentence, class USoundWave* VoiceSound);
	static class UYnnkVoiceLipsyncData* CreateVoiceLipsyncDataEx(class UObject* Parent, const TArray<struct FSingeWordData>& Sentence, class USoundWave* VoiceSound, bool bStretchCurves, bool bForceGeneratePhonemes);

	void ConvertAnimationToBaseCurves(const class UPoseAsset* PoseAsset, const TMap<EYnnkViseme, struct FCompositeCurvesWrapper>& AnimationTargets, float SmoothAlpha);
	void CreateCurves(const TArray<struct FSingeWordData>& Sentence);
	float GetCurveValue(struct FSimpleFloatCurve& Curve, float Time);
	void ResetToStart();

	bool ContainsData() const;
	float GetAnimationStartTime() const;
	float GetDuration() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("YnnkVoiceLipsyncData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"YnnkVoiceLipsyncData")
	}
	static class UYnnkVoiceLipsyncData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UYnnkVoiceLipsyncData>();
	}
};
DUMPER7_ASSERTS_UYnnkVoiceLipsyncData;

}

